HEADER 3 ChangeLog of MIDIbox MF

<CENTER><H1>MIDIbox MF Change Log</H1></CENTER>
<CENTER><H3>Last Release: V2.2 @ 2005-05-29</H3></CENTER>

<IMG SRC="images/1x1dot.gif" height=10 ALT=""><BR>

<UL CLASS=CL>

<LI><I>V2.2</I>
  <UL>
   <LI> a patch mode has been implemented which can be selected as an
     alternative option to the common "bank" mode in main.asm<BR>
     In patch mode, each BankStick contains only one bank
     configuration (means: fader/button/label setup), but 
     128 snapshots! This allows you to prepare one configuration
     for your MIDI gear, and to store/recall/morph up to 128 scenes.</LI>

   <LI> there are two new SysEx commands for storing/restoring patches</LI>

   <LI> patches and banks can be changed from external with a 
     "Program Change" command. The channels are specified in
     main.asm. Default: Channel 16 - Banks; Channel 15: Patches </LI>

   <LI> some minor bugfixes and improvements</LI>
  </UL>
</LI>

<IMG SRC="images/1x1dot.gif" height=20 ALT=""><BR>
<LI><I>V2.1</I>
  <UL>
   <LI>three new SysEx commands have been implemented to simplify
     the configuration data up- and download. It's a block
     oriented format and therefore doesn't require delays between
     every byte anymore. This means, that data uploads can
     now also be realized without the use of MIDI-Ox so long the
     SysEx tool allows to insert delays between every block
     ("Delay after F7") - it should be 750 mS - thats the
     same requirement like for MIOS uploads.<BR>
     More infos can be found <A HREF="howto_tools_mbsyx.html">here</A>.</LI>

   <LI>the mk_syx.pl script has been updated to support the
     new upload format. It can be downloaded from <A HREF="midibox/mk_syx.zip">here</A>.</LI>

   <LI> Bankswitching now significantly faster</LI>

   <LI> support for a datawheel (rotary encoder) as replacement for
     the left/right button. To enable it, set DEFAULT_ENC_DATAWHEEL 
     to 0 - connect the rotary encoder to pin 4 and 5 of the first
     DIN shift register, connect the exec button to pin 7 and
     the snapshot button to pin 6 </LI>
  </UL>
</LI>

<IMG SRC="images/1x1dot.gif" height=20 ALT=""><BR>
<LI><I>V2.0 - MIOS based version</I>
  <UL>
   <LI> the complete MIDIbox MF firmware has been ported to MIOS and is
     now running on a PIC18F452. For new projects it's recommented 
     to switch to the PIC18F452 because of the higher flexibility, 
     but also the update of an existing MIDIbox to MIOS makes sense 
     due to the new features - just only the processor and the 
     crystal have to be changed. </LI>

   <LI> all 128 virtual faders and 64 button entries stored in a bank can 
     be updated by incoming MIDI events </LI>

   <LI> the previous "subbank" mechanism which divided the 128 fader
     entries into 8 "banks within banks" has been renamed to "pages"
     The width of a page is free definable. This means, that all
     128 fader entries can be controlled by MBMF with a single 
     fader (low-cost solution) as well as with up to 8 motorfaders! </LI>

   <LI> Note that MIDIbox MF still uses the same SysEx format like MIDIbox64E,
     therefore Serge's vmidibox16e editor can be used for configuration.
     The transfer rate has to be set to a value less than 150, otherwise 
     the dump won't be received completely. This isn't a bug in MIOS, but 
     a problem related to the PIC18F which can only save 64 bytes at once 
     in the internal flash memory (the PIC16F saves 2 bytes (14 bit)
     at once).  </LI>

   <LI> Beside of the MIDI Learn function, MIDI events can now also be
     edited directly  </LI>

   <LI> Support for on-screen editing of pot lables and banknames  </LI>

   <LI> up to 8 BankSticks can be handled by the firmware now (-> up to 64 banks)  </LI>
   
   <LI> the DEFAULT_BANKSTICK_CS setting in main.asm allows you to
     select a dedicated EEPROM for your application or disable
     the BankStick support at all. This feature is especially 
     usefull when different applications are used with the MIDIbox </LI>

   <LI> banks can be copied  </LI>

   <LI> A morphing function has been added which allows to fade smoothly 
     between two pot scenes: the current fader positions and the fader positions 
     saved in a snapshot (bank)  </LI>

   <LI> Fader events can now be triggered via Remote: <BR>
        F0 00 00 7E 43 [d]9 00 [pot] [value] F7 <BR>
     ([d] = device number (0-7), <BR>
      [pot] = pot number (0-63), <BR>
      [value] = pot value (0-127)  </LI>

   <LI> Button events (also menu buttons) can now be triggered via Remote: <BR>
        F0 00 00 7E 43 [d]9 01 [button] [value] F7 <BR>
     ([d] = device number (0-7), <BR>
      [button] = button number (0-63), <BR>
      [value] = button value (0=pressed, 1=depressed)  </LI>

   <LI> Special Functions can now be triggered via Remote: <BR>
        F0 00 00 7E 43 [d]9 02 [sfbn] [sfbp] [value] F7 <BR>
     ([d] = device number (0-7), <BR>
      [sfbn] = special function number (0-127), <BR>
      [sfbp] = special function parameter (0-127), <BR>
      [value] = button value (0=pressed, 1=depressed)  </LI>

   <LI> A software implemented MIDI Rx/Tx LED function has been integrated  </LI>

   <LI> the MIDIbox64E tutorial has been updated (see http://www.ucapps.de)
     which is also relevant for MIDIbox MF </LI>

   <LI> the LCD screen can now be centered for various displays, the
     cursor positions have to be configured in main.asm
     (search for DEFAULT_YOFFSET_LINE*) </LI>

   <LI> the predefined MIDI channels stored in the bank can now be 
     overwritten by a global channel </LI>

  </UL>
</LI>

<IMG SRC="images/1x1dot.gif" height=20 ALT=""><BR>
<LI><I>V1.000</I>
  <UL>
    <LI>no records</LI>
  </UL>
</LI>

</UL>

FOOTER
