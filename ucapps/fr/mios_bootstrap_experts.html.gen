HEADER 3 MIOS Bootstrap Loader
<h1>MIOS Bootstrap Loader</h1>
<p class="INFO">Le "bootstrap loader" du MIOS vous permet,
via une simple interface MIDI, non seulement de charger les
applications dans la m&eacute;moire "flash" du PIC18F452, mais aussi
d'y "br&ucirc;ler" le syst&egrave;me d'exploitation, et vous
&eacute;vite ainsi d'avoir &agrave; utiliser une interface de
programmation sp&eacute;ciale comme le <a href="mbhp_burner.html">module</a><a href="mbhp_burner.html">MBHP_BURNER</a>. Le d&eacute;veloppement de nouveaux
codes est maintenant plus ais&eacute; dans la mesure o&ugrave; il n'est
plus n&eacute;cessaire de mettre votre MIDIbox hors tension, ni de
brancher un module de programmation sur le port ICP et d'attendre les
deux minutes requises pour le flashage : vous pouvez d&eacute;sormais
changer d'application "on-the-fly" - l'upload ne prendra pas plus de
trois secondes!</p>
<p></p>
<h2>Deux Bootstrap Loader?<br>
</h2>
<p class="DESC">Oui! le MIOS propose effectivement deux
"bootstrap loader": le "loader" primaire et le secondaire , ils ont
chacun une fonction diff&eacute;rente : </p>
<ul class="CL">
<li>Le "loader" primaire est actif pendant deux secondes
apr&egrave;s le d&eacute;marrage. Durant ce d&eacute;lai, le loader
attends une &eacute;ventuelle
commande SysEx qui innitiera alors le flashage de la m&eacute;moire. Si
aucune commande n'est re&ccedil;ue, le loader se d&eacute;sactive tout
seul et le MIOS d&eacute;marre. Le loader primaire n&eacute;cessite un
module de programmation (MBHP_BURNER) pour &ecirc;tre "flash&eacute;" dans le
PIC.<br>
</li>
<li>Le "loader" secondaire lui est actif une fois que le
MIOS a d&eacute;marr&eacute; et que l'application "tourne". A la
diff&eacute;rence du loader primaire, le loader secondaire ne permet pas d'
&eacute;craser les donn&eacute;es pr&eacute;sentes sur l'emplacement
m&eacute;moire allou&eacute; au syst&egrave;me d'exploitation. Cette
protection permet d'&eacute;viter d'&eacute;craser une partie du MIOS
(et de le rendre inutilisable) si par m&eacute;garde votre application
"d&eacute;bordait" sur la zone allou&eacute;e au syst&egrave;me
d'exploitation. </li>
</ul>
<p></p>
<p class="DESC">Apr&eacute;s l'upload, en cas
d'&eacute;chec ("&eacute;cran bleu"), le PIC se r&eacute;initialise et
le loader primaire se lance de nouveau pendant deux secondes. Si votre
application "crashe" trop souvent et que vous ne parvenez pas &agrave;
mettre &agrave; jour le code "&agrave; la vol&eacute;e", le&nbsp;
loader primaire pourra s'av&eacute;rer utile! :)</p>
<p class="DESC"><i>De telles fonctions ne font pas des
"bootstrap loader" des outils uniquement destin&eacute;s aux
d&eacute;veloppeurs - l'utilisateur "lambda" pourra en tirer profit
dans
la mesure o&ugrave; il n'est plus dans l'obligation de poss&eacute;der
un module de programmation comme le MBHP_BURNER , mais peut demander &agrave;
quelqu'un qui en poss&egrave;de un de lui "br&ucirc;ler" juste le
loader PRIMAIRE , il pourra ensuite charger le MIOS ou les applications
via une simple interface MIDI.</i></p>
<p class="DESC"><i>Pour rendre tout cela plus clair : il
est impossible d'utiliser une application sans&nbsp; le Bootstrap
Loader et sans charger </i><i>le MIOS&nbsp; avant!</i><span style="font-style: italic;"> La proc&eacute;dure d'upload est
d&eacute;crite plus bas .<br>
</span></p>
<h2>Options de D&eacute;marrage<br>
</h2>
<p class="DESC">Deux param&egrave;tres sont essentiels pour
le bootstrap loader : l'ID MIDI de
la machine, chaque MIDIbox doit avoir son propre ID lorsque que
plusieurs core sont "chain&eacute;s" (voir la page "MIDIbox link), et le
"BAUDRATE" (taux de transfert\d&eacute;bit de bits, pour simplifier).
Vous
pouvez ici choisir entre deux "Baudrates", celui utilis&eacute; par les
interfaces midi classiques (31250), et le taux de transfert de
l'interface <a href="midibox_to_com.html">MIDIbox-to-COM</a> (38400).<br>
Un troisi&egrave;me param&egrave;tre vous permet de d&eacute;finir le
type d'&eacute;cran LCD,
afin que le MIOS soit en mesure de charger le pilote appropri&eacute;
avant
d'afficher un message sur l'&eacute;cran. Actuellement, les
&eacute;crans LCD &agrave;
caract&egrave;res (1x8, 1x16, 2x16, 2x20, 2x40, 4x16, 4x40) et les
&eacute;crans LCD
graphiques bas&eacute;s sur les controleurs KS0107/KS0108 ou HD61202
sont
support&eacute;s, la prise en charge d'autres LCDs graphiques est en
pr&eacute;vision.</p>
<p class="DESC"><i>Pour les d&eacute;veloppeurs : MIOS
utilise les fonctions suivantes pendant la phase de
d&eacute;marrage:&nbsp;</i><i> <a href="mios_fun/MIOS_MIDI_DeviceIDAutoSet.html">MIOS_MIDI_DeviceIDAutoSet</a>,
<a href="mios_fun/MIOS_MIDI_InterfaceAutoSet.html">MIOS_MIDI_InterfaceAutoSet</a>,
<a href="mios_fun/MIOS_LCD_TypeAutoSet.html">MIOS_LCD_TypeAutoSet</a>,
<br>
&nbsp;vous n'avez donc pas &agrave; vous
soucier de ces r&eacute;glages. Ne remplacez
pas ces modes sans raison afin de pr&eacute;server une
compatibilit&eacute; avec
diff&eacute;rentes configurations mat&eacute;rielles</i></p>
<table class="BOX" align="center" border="1" cellpadding="10" cellspacing="2" width="100%">
<tbody>
<tr>
<td><span class="NORM"> ID = 0000000000000000 </span></td>
<td><span class="NORM"> Device ID = 0x00<br>
common MIDI interface<br>
character LCD </span></td>
<td rowspan="4" width="140"><a href="mios/bootstrap_id_header.gif"><img src="mios/bootstrap_id_header.gif" alt="The configurable ID header" height="85" width="135"></a><br>
<span class="NORM">Une capture d'&eacute;cran
d'IC-Prog qui vous montre o&ugrave; est localis&eacute;e l'ID </span><br>
<span class="NORM"><b>Note:</b></span><span class="NORM">Si vous n'utilisez qu'un seul CORE, il est fortement
recommand&eacute; de selectionner :Device ID = 0x00- les exemples
&agrave; gauche
utilisent diff&eacute;rents ID afin que vous puissiez localiser
correctement
leur position (ce sont les deux derniers chiffres ).</span></td>
</tr>
<tr>
<td><span class="NORM"> ID = 0000000000000012 </span></td>
<td><span class="NORM"> Device ID = 0x12<br>
common MIDI interface<br>
character LCD </span></td>
</tr>
<tr>
<td><span class="NORM"> ID = 0000000000000142 </span></td>
<td><span class="NORM"> Device ID = 0x42<br>
MIDIbox-to-COM interface<br>
character LCD </span></td>
</tr>
<tr>
<td><span class="NORM"> ID = 0000000000001000 </span></td>
<td><span class="NORM"> Device ID = 0x00<br>
common MIDI interface<br>
graphical LCD (KS0108) </span></td>
</tr>
</tbody>
</table>
<p class="DESC">Donc : en partant de la DROITE : les deux
derniers chiffres : Device ID
, ensuite 1 chiffre pour le type d'interface MIDI(0=Interface MIDI
classique \1=Interface MIDIbox-to-COM)et le quatri&egrave;me (toujours
en
partant de la droite) pour le LCD (0=character LCD\1=LCD graphique.</p>
<p class="DESC">SmashTV a mis en ligne une petite interface
graphique qui vous permettra de calculer facilement la&nbsp; <a href="http://avi.dezines.com/mbhp/idgen.html" target="_blank">valeur
de </a><a href="http://www.avishowtech.com/mbhp/idgen.html" target="_blank">l'
ID</a><a href="http://www.avishowtech.com/mbhp/idgen.html" target="_blank">
du PIC</a> !</p>
<h2>Restrictions</h2>
<p class="DESC">Afin d'acc&eacute;l&eacute;rer la vitesse
d'upload, le "dump" est d'abord charg&eacute; dans un
buffer d'1k de la RAM avant d'&ecirc;tre &eacute;crit dans la
m&eacute;moire flash. Du coup, les blocs d'une taille sup&eacute;rieure &agrave; 1k ne peuvent
&ecirc;tre charg&eacute;s en une
seule fois. Malgr&eacute;s tout, le script hex2syx.pl , qui convertit
un
fichier .hex en fichier SysEx, tient compte de cette restriction et
divise le programme en autant d'envois SysEx .<br>
D&egrave;s qu'un bloc de 1k
a &eacute;t&eacute; re&ccedil;u (&ccedil;a prend environ 330 mS), le
loader passe en mode
programmation pendant environ 400 mS. Durant cette p&eacute;riode, les
&eacute;v&egrave;nements MIDI entrants sont ignor&eacute;s! Votre
&eacute;diteur SysEx doit donc
ins&eacute;rer un d&eacute;lai entre chaque envoi afin d'&eacute;viter
toute perte de donn&eacute;es .</p>
<h2>Solution</h2>
<p class="DESC">Dans la mesure o&ugrave; ce probl&egrave;me
n'est pas propre au Bootloader du MIOS ,
mais &agrave; tous les appareils devant &eacute;crire des
donn&eacute;es sur une m&eacute;moire
flash, la plupart des &eacute;diteurs SysEx proposent une option
permettant
d'ins&eacute;rer un delai entre chaque commande SysEx. Dans cet exemple, la
configuration et l'upload sont r&eacute;alis&eacute;s &agrave; l'aide
de MIDI-Ox:</p>
<table align="center" cellpadding="0" cellspacing="20">
<tbody>
<tr>
<td><a href="http://www.midiox.com" target="_blank"><img src="images/moxtitle.gif" alt="Link to the MIDI-OX site" width="160"></a></td>
<td><img src="images/1x1dot.gif" alt="" width="10"></td>
<td><span class="NORM">T&eacute;l&eacute;chargez
MIDI-OX depuis&nbsp;</span><span class="NORM"> <a href="http://www.midiox.com" target="_blank">ce site</a>.</span></td>
</tr>
<tr>
<td><a href="howtosysex/snap1.gif"><img src="howtosysex/snap1.gif" alt="snap1.gif" width="160"></a></td>
<td><img src="images/1x1dot.gif" alt="" width="10"></td>
<td><span class="NORM">Lancez MIDI-OX et configurez
les ports MIDI IN et OUT.</span></td>
</tr>
<tr>
<td><a href="mios/bootstrap_sysex0.gif"><img src="mios/bootstrap_sysex0.gif" alt="snap1.gif" width="160"></a></td>
<td><img src="images/1x1dot.gif" alt="" width="10"></td>
<td><span class="NORM">Assurez-vous que les
&eacute;v&egrave;nements se pr&eacute;sentant au
port MIDI IN ne sont pas renvoy&eacute;s au port MIDI OUT afin
d'&eacute;viter une
boucle MIDI ! (la case en bas &agrave; gauche permet de
d&eacute;sactiver la
connection automatique lors de la s&eacute;lection des ports).<br>
V&eacute;rifier le routage (mapping) des ports sur la partie droite :
le port MIDI IN ne devrait pas appara&icirc;tre dans la liste!</span></td>
</tr>
<tr>
<td><a href="howtosysex/snap2.gif"><img src="howtosysex/snap2.gif" alt="snap2.gif" width="160"></a></td>
<td><img src="images/1x1dot.gif" alt="" width="10"></td>
<td><span class="NORM">Assurez-vous que le SysEx est
activ&eacute; .</span></td>
</tr>
<tr>
<td><a href="howtosysex/snap3.gif"><img src="howtosysex/snap3.gif" alt="snap3.gif" width="160"></a></td>
<td><img src="images/1x1dot.gif" alt="" width="10"></td>
<td><span class="NORM">D&eacute;marrez l'outil SysEx.</span></td>
</tr>
<tr>
<td><a href="howtosysex/snap4.gif"><img src="howtosysex/snap4.gif" alt="snap4.gif" width="160"></a></td>
<td><img src="images/1x1dot.gif" alt="" width="10"></td>
<td><span class="NORM">Allez dans le menu de
configuration.</span></td>
</tr>
<tr>
<td><a href="mios/bootstrap_sysex1.gif"><img src="mios/bootstrap_sysex1.gif" alt="bootstrap_sysex1.gif" width="160"></a></td>
<td><img src="images/1x1dot.gif" alt="" width="10"></td>
<td><span class="NORM">R&eacute;glez "Delay after F7"
sur</span><span class="NORM"> <b>750 mS</b>.<br>
</span><span class="NORM">R&eacute;glez "Low level
output buffer size" sur</span><span class="NORM"> <b>2048 bytes</b>.<br>
</span><span class="NORM">N'activez pas les autres
d&eacute;lais comme pour les
MIDIbox bas&eacute;es sur les PIC16F - les d&eacute;lais entre chaque
bit ne sont
plus n&eacute;cessaires!</span></td>
</tr>
<tr>
<td><a href="howtosysex/snap6.gif"><img src="howtosysex/snap6.gif" alt="snap6.gif" width="160"></a></td>
<td><img src="images/1x1dot.gif" alt="" width="10"></td>
<td><span class="NORM">Ouvrez le fichier ".syx".</span></td>
</tr>
<tr>
<td><a href="mios/bootstrap_sysex2.gif"><img src="mios/bootstrap_sysex2.gif" alt="bootstrap_sysex2.gif" width="160"></a></td>
<td><img src="images/1x1dot.gif" alt="" width="10"></td>
<td><span class="NORM">Il va maintenant vous falloir
&ecirc;tre des plus vifs si
vous avez &agrave; charger le syst&egrave;me d'exploitation
(mios_v1_0.syx) : allumez
votre MIDIbox , attendez que s'affiche la commannde SysEx
"Requ&egrave;te
d'upload" (F0 00 00 7E 40</span><span class="NORM"> <i>[device-id]</i>
</span><span class="NORM">01 F7) et
s&eacute;lectionnez la commande "Send SysEx" dans les 2 secondes qui
suivent!<br>
Heureusement, une telle rapidit&eacute; d'ex&eacute;cution n'est
requise que pour la
mise &agrave; jour de l'OS (le MIOS) - Les applications peuvent elles
&ecirc;tre
charg&eacute;e "on the fly" , pendant le fonctionnement de la MIDIbox</span><br>
<span class="NORM"><i>Note:</i></span><span class="NORM"><i> l'interface graphique (GUI) Java en pr&eacute;vision
simplifiera la proc&eacute;dure en r&eacute;agissant automatiquement
&agrave; la requ&egrave;te d'upload </i></span></td>
</tr>
<tr>
<td><a href="mios/bootstrap_sysex3.gif"><img src="mios/bootstrap_sysex3.gif" alt="bootstrap_sysex3.gif" width="160"></a></td>
<td><img src="images/1x1dot.gif" alt="" width="10"></td>
<td><span class="NORM">Le loader envoie un message
confirmant la&nbsp; r&eacute;ception
apr&eacute;s chaque bloc de 1k re&ccedil;u - Si l'"Action ID" (la
7i&egrave;me paire de
chiffre en partant de la gauche ="0f" ,c'est bon - Si l'"Action
ID"="0e" &lt;error-id&gt;",une erreur est survenue. Une erreur ID "0e
03" signifie: "wrong checksum"(le nombre de bits re&ccedil;us ne
correspond
pas au nombre de bit envoy&eacute;s) ; "0e 04" signifie: "write failed"
,
&eacute;chec durant l'&eacute;criture (des donn&eacute;es ne
correspondent pas lors de la
v&eacute;rification) ; "0e 05" signifie: "memory area protected" (zone
m&eacute;moire prot&eacute;g&eacute;e). Cette derni&egrave;re erreur ID
survient
si vous tentez d'&eacute;crire par dessus le loader, ou -si vous
utilisez le
loader Secondaire (chargement d'une application) -lorsque que vous
tentez d'&eacute;crire par dessus le syst&egrave;me d'exploitation .</span><span class="NORM"><error-id><br>
Une liste compl&egrave;te des erreurs se trouve &agrave; la fin du
fichier</error-id></span><span class="NORM"><error-id> <a href="mios/mios_sysex_implementation.txt">mios_sysex_implementation.txt</a></error-id></span></td>
</tr>
</tbody>
</table>
<p class="INFO"><b>NEWS:</b> Le loader de Serge <a href="howto_tools_syxloader_18f.html">SysEx Loader for PIC18F</a>
simplifie beaucoup l'upload du MIOS. Ce guide fait toujours
r&eacute;f&eacute;rence &agrave;
l'utilisation de MIDI-Ox , tout cela sera mis &agrave; jour d'ici peu.
Vous
pouvez vous servir aussi bien de MIDI-Ox que ce nouveau loader.</p>
<h2>Convertir le fichier .hex en .syx</h2>
<p class="DESC">Un petit script Perl est fourni avec les
applications, il converti un
fichier .hex (le format &agrave; la sortie de l'assembleur) en fichier
.syx
file. Le "dump" m&eacute;moire sera transmis de mani&egrave;re
"d&eacute;sordonn&eacute;e", car le
protocole SysEx n'autorise pas le transfert de valeurs cod&eacute;es
sur
8-bits. Le Dump entier est donc d&eacute;compos&eacute; en paquets de
7-bits, et
re-converti apr&eacute;s r&eacute;ception en valeurs cod&eacute;es sur
8-bits.</p>
<p class="DESC"><i>Tous les dossiers des applications MIOS
t&eacute;l&eacute;chargeables sur mon site
contiennent un fichier .syx "pr&ecirc;t &agrave; l'emploi" ,donc
l'utilisateur
"lamda" n'aura pas &agrave; se soucier de la conversion .</i></p>
<table align="center" cellpadding="0" cellspacing="20">
<tbody>
<tr>
<td><a href="http://www.perl.com" target="_blank"><img src="images/lcamel.gif" alt="Link to the perl.com" height="81" width="72"></a></td>
<td><img src="images/1x1dot.gif" alt="" width="10"></td>
<td><span class="NORM">T&eacute;l&eacute;chargez
"perl" si il n'est pas install&eacute; sur votre ordinateur<br>
Utilisateurs d'Unix : il est le plus souvent inclu dans votre
distribution.<br>
Utilisateurs de Windows&nbsp; :</span><span class="NORM"> <a href="http://www.activestate.com/Products/Download/Register.plex?id=ActivePerl" target="_blank">Active Perl</a>.<br>
</span><span class="NORM">Utilisateurs de Mac&nbsp; :</span><span class="NORM"> <a href="http://www.macperl.com/" target="_blank">MacPerl</a></span></td>
</tr>
<tr>
<td><a href="mios/bootstrap_sysex4.gif"><img src="mios/bootstrap_sysex4.gif" alt="snap1.gif" width="160"></a></td>
<td><img src="images/1x1dot.gif" alt="" width="10"></td>
<td><span class="NORM">Ouvrez une invite de commandes
et placez-vous dans
le r&eacute;pertoire qui contient l'application. Lancez le script
"CONVERT.BAT" (en tapant</span><span class="NORM"> <i>convert</i>)</span><span class="NORM">, ou entrez la ligne de commande compl&egrave;te</span><span class="NORM"> <i>perl mk_syx.pl main.hex</i> </span><span class="NORM">pour convertir ce fichier .hex file en fichier .syx&nbsp;
.</span></td>
</tr>
<tr>
<td><a href="mios/bootstrap_sysex5.gif"><img src="mios/bootstrap_sysex5.gif" alt="snap1.gif" width="160"></a></td>
<td><img src="images/1x1dot.gif" alt="" width="10"></td>
<td><span class="NORM">Ouvrez maintenant ce fichier
avec MIDI-Ox et envoyez-le &agrave; votre MIDIbox comme d&eacute;crit
plus haut.</span></td>
</tr>
<tr>
<td><a href="mios/bootstrap_sysex6.gif"><img src="mios/bootstrap_sysex6.gif" alt="snap1.gif" width="160"></a></td>
<td><img src="images/1x1dot.gif" alt="" width="10"></td>
<td><span class="NORM">Si un ID diff&eacute;rent de
0x00 doit &ecirc;tre assign&eacute; &agrave; votre
CORE , le fichier .syx doit &ecirc;tre reg&eacute;n&eacute;r&eacute; de
nouveau avec le param&egrave;tre&nbsp;
"-device_id" .</span></td>
</tr>
<tr>
<td><a href="mios/bootstrap_sysex7.gif"><img src="mios/bootstrap_sysex7.gif" alt="snap1.gif" width="160"></a></td>
<td><img src="images/1x1dot.gif" alt="" width="10"></td>
<td><span class="NORM">Notez la petite
diff&eacute;rence: Uniquement le 6i&egrave;me byte
a &eacute;t&eacute; modifi&eacute;, ce qui signifie que vous pouvez
changer manuellement le
num&eacute;ro de votre CORE, mais gardez &agrave; l'esprit qu'un
fichier .syx
contient de nombreux blocs (qui commencent &agrave; F0) - et le Device
ID doit
&ecirc;tre chang&eacute; pour tous les blocs! (pourquoi faire simple
quand on peut
faire compliqu&eacute;)?!</span></td>
</tr>
</tbody>
</table>
<h2>Upload d'un fichier .syx&nbsp; &agrave; partir d'un Mac</h2>
<p class="INFO">Le <a href="http://www.snoize.com/SysExLibrarian/">SysEx Librarian</a>
cr&eacute;&eacute; par <a href="http://www.snoize.com">Snoize</a>
permet l'upload dde fichiers .syx sous MacOS X.<br>
Merci Normen pour l'info! Il utilise la configuration suivante :</p>
<p></p>
<p></p>
<center><a href="http://www.snoize.com/SysExLibrarian/"><img src="howto_tools/macos_syx_librarian.jpg" height="361" width="431"></a></center>
<p></p>
<h2>La Proc&eacute;dure d'Upload Compl&egrave;te :<br>
</h2>
<p class="INFO">Le diagramme suivant d&eacute;crit les
trois &eacute;tapes de la proc&eacute;dure d'upload et les
possibilit&eacute;s de mise &agrave; jour.</p>
<p></p>
<center><img src="mios/mios_upload_procedure.gif" alt="MIOS upload procedure" height="650" width="580"><br>
<br>
<br>
<h2>Autre Solution (plus simple): MIOS STUDIO</h2>
<br>
</center>
<center><a href="http://www.midibox.org/miosstudio/"><img style="border: 0px solid ; width: 596px; height: 469px;" src="http://www.midibox.org/miosstudio/miosstudio_s.png" alt="MIOS Studio"></a></center>
<p></p>
<p><a href="http://www.midibox.org/miosstudio/">MIOS Studio</a>
simplifie l'upload du code, fournit un environnement
de&nbsp;d&eacute;bogage pour le d&eacute;veloppement de
nouveau code, et plus encore. Ne ratez pas ce superbe outil
bas&eacute; sur Java et tournant indiff&eacute;rement sur tous
les OS!</p>
<h2>Performance</h2>
<ul class="CL">
<li>upload du MIOS (12k): 9 secondes</li>
<li>upload d'une application typique (4k): 3 secondes</li>
</ul>
<h2>T&eacute;l&eacute;chargements</h2>
<p class="DESC"><a href="mios_download.html">cette page<br>
</a></p>
FOOTER
