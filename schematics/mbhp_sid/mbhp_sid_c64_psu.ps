%!PS-Adobe-3.0
%%Title: mbhp_sid_c64_psu
%%Creator: XCircuit v3.4 rev3
%%CreationDate: Sat Jun 10 23:49:09 2006
%%Pages: 1
%%BoundingBox: 0 0 612 792
%%DocumentNeededResources: font Helvetica font Times-Roman font Courier 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.3
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--7/13/05  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.3 0
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate
	0 0 moveto neg rotate dup scale cvx exec image grestore } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore} def     

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/polarized {
begingate
1 1.00 0 -64 0 -6 2 polygon
1 1.00 0 64 0 6 2 polygon
1 1.00 -32 6 32 6 2 polygon
1 1.00 0 -80 74 66.00 114.00 xcarc
endgate
} def

/dot {
begingate
248 1.00 0 0 6 0.00 360.00 xcarc
endgate
} def

/diode {
begingate
248 1.00 -18 -16 0 16 18 -16 3 polygon
1 1.00 0 -48 0 -16 2 polygon
1 1.00 0 48 0 16 2 polygon
1 1.00 -18 16 18 16 2 polygon
1.000 0.000 0.000 scb
(d.m) {/Times-Roman cf} 2 9 0 1.00 0 48 pinlabel
(d.p) {/Times-Roman cf} 2 13 0 1.00 0 -48 pinlabel
endgate
} def

/circle {
% trivial
begingate
1 1.00 16 0 6 0.00 360.00 xcarc
1 1.00 0 0 10 0 2 polygon
1.000 0.000 0.000 scb
(out) {/Times-Roman cf} 2 4 0 1.00 16 0 pinlabel
(out) {/Times-Roman cf} 2 7 0 1.00 0 0 pinlabel
endgate
} def

/arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

/switch {
% trivial
begingate
1 1.30 32 32 2 -43 2 polygon
1 0.60 0 -48 57 49.00 90.00 xcarc
-1.00 90 0 -64 circle
0.60 270 -12 8 arrowhead
1.00 90 0 48 circle
1.000 0.000 0.000 scb
(sw.1) {/Times-Roman cf} 2 9 0 1.00 0 48 pinlabel
(sw.2) {/Times-Roman cf} 2 13 0 1.00 0 -64 pinlabel
endgate
} def


%%EndSetup

%%Page: 1 1
%%PageOrientation: Landscape
%%PageBoundingBox: 0 0 612 792
/pgsave save def bop
90 rotate 69 -680 translate
0.4600 inchscale
2.6000 setlinewidth 2045 878 translate

0 3.00 -1632 128 -1632 -48 -1152 -48 -1152 128 4 polygon
(\(C\) T. Klose 2003-06-22) {/Helvetica cf} 2 20 0 0.75 -1600 0 label
0.000 0.000 1.000 scb
(Reusing the Power Supply Unit) {/Helvetica cf} 2 20 0 0.75 -1600 96 label
(of a C64 for MIDIbox SID) {/Helvetica cf} 2 20 0 0.75 -1600 48 label
sce
-1.00 90 -1104 1504 polarized
(+) {/Courier cf} 2 23 0 0.50 -1072 1472 label
(-) {/Courier cf} 2 23 0 0.50 -1136 1472 label
1.00 0 -1295 1343 dot
1.00 0 -1277 1334 dot
1.00 0 -1295 1287 dot
1.00 0 -1277 1292 dot
1.00 0 -1266 1315 dot
1 3.00 -1295 1315 48 0.00 360.00 xcarc
(!! Front View !!) {/Helvetica cf} 2 21 0 0.50 -1279 1398 label
(C64 Power Plug) {/Helvetica cf} 2 21 0 0.50 -1280 1424 label
1.00 0 -1313 1334 dot
1.00 0 -1313 1296 dot
1 1.00 -816 1200 11 0.00 360.00 xcarc
1 1.00 -816 1136 11 0.00 360.00 xcarc
0 1.00 -848 1232 -848 1104 -784 1104 -784 1232 4 polygon
(9V AC) {/Helvetica cf} 2 21 0 0.50 -1296 1168 label
1 1.00 -1312 1296 -1312 1200 -816 1200 3 polygon
1 1.00 -816 1312 11 0.00 360.00 xcarc
0 1.00 -848 1344 -848 1280 -784 1280 -784 1344 4 polygon
1 1.00 -1264 1312 -816 1312 2 polygon
1.00 0 -944 1408 diode
1 1.00 -816 1504 11 0.00 360.00 xcarc
0 1.00 -848 1536 -848 1472 -784 1472 -784 1536 4 polygon
(5V DC) {/Helvetica cf} 2 21 0 0.50 -1184 1280 label
1 1.00 -1040 1504 -816 1504 2 polygon
1 1.00 -944 1456 -944 1504 2 polygon
1 1.00 -1536 1344 -1536 1504 -1168 1504 3 polygon
1.00 270 -1456 1332 switch
1 1.00 -816 1136 -1536 1136 -1536 1344 3 polygon
1 1.00 -1504 1332 -1536 1332 2 polygon
1 1.00 -1392 1332 -1312 1332 2 polygon
1.00 0 -1536 1332 dot
1.00 0 -1376 1344 dot
1.00 270 -1072 1248 switch
1 1.00 -1280 1296 -1280 1248 -1120 1248 3 polygon
1 1.00 -1008 1248 -944 1248 -944 1360 3 polygon
1.00 0 -944 1504 dot
(470 uF/50V) {/Helvetica cf} 2 21 0 0.50 -1104 1552 label
(1N4001) {/Helvetica cf} 2 21 0 0.50 -1008 1392 label
(Power Switch) {/Helvetica cf} 2 21 0 0.50 -1056 1232 label
(Power Switch) {/Helvetica cf} 2 21 0 0.50 -1440 1312 label
(AC1_Out) {/Courier cf} 2 21 0 0.75 -824 1248 label
(Ground) {/Courier cf} 2 21 0 0.75 -824 1360 label
(AC2_Out) {/Courier cf} 2 21 0 0.75 -824 1552 label
(- All Parts resused from a canibalized C64) {/Courier cf} 2 20 0 0.75 -1592 
1024 label
(- Note that AC2_OUT is a mixed voltage \(DC+AC\), therefore) {/Courier cf} 2 
20 0 0.75 -1592 976 label
(you won't get usefull measuring results) {/Courier cf} 2 20 0 0.75 -1560 944 
label
0.906 0.890 0.906 scb
240 1.00 976 -64 976 1264 -48 1264 -48 -64 4 polygon
0.000 0.000 0.000 scb
(CORE) {/Courier cf} 2 21 0 3.00 240 304 label
sce
1 1.00 912 640 11 0.00 360.00 xcarc
1 1.00 912 576 11 0.00 360.00 xcarc
0 1.00 880 672 880 544 944 544 944 672 4 polygon
0.000 0.000 1.000 scb
(P1) {/Courier cf} 2 23 0 0.50 912 624 label
(P2) {/Courier cf} 2 23 0 0.50 912 560 label
sce
(J1) {/Courier cf} 2 21 0 0.75 904 688 label
1 1.00 816 1168 11 0.00 360.00 xcarc
1 1.00 816 1104 11 0.00 360.00 xcarc
0 1.00 784 1200 784 1072 848 1072 848 1200 4 polygon
0.000 0.000 1.000 scb
(Vd) {/Courier cf} 2 23 0 0.50 816 1152 label
(Vs) {/Courier cf} 2 23 0 0.50 816 1088 label
sce
(J2) {/Courier cf} 2 21 0 0.75 808 1216 label
1 1.00 576 112 11 0.00 360.00 xcarc
1 1.00 576 176 11 0.00 360.00 xcarc
1 1.00 576 240 11 0.00 360.00 xcarc
1 1.00 576 304 11 0.00 360.00 xcarc
1 1.00 624 304 11 0.00 360.00 xcarc
1 1.00 624 240 11 0.00 360.00 xcarc
1 1.00 624 176 11 0.00 360.00 xcarc
1 1.00 624 112 11 0.00 360.00 xcarc
0 2.00 544 336 544 80 656 80 656 336 4 polygon
0.000 0.000 1.000 scb
(SC) {/Courier cf} 2 23 0 0.50 576 160 label
(RC) {/Courier cf} 2 23 0 0.50 576 224 label
(SO) {/Courier cf} 2 23 0 0.50 576 288 label
(Vs) {/Courier cf} 2 23 0 0.50 576 96 label
(Vd) {/Courier cf} 2 23 0 0.50 624 96 label
(MU) {/Courier cf} 2 23 0 0.50 624 224 label
(MD) {/Courier cf} 2 23 0 0.50 624 288 label
sce
(J10) {/Courier cf} 2 21 0 0.75 632 64 label
0.906 0.890 0.906 scb
240 1.00 976 1328 976 2656 -48 2656 -48 1328 4 polygon
0.000 0.000 0.000 scb
(SID) {/Courier cf} 2 21 0 3.00 384 2064 label
sce
1 1.00 912 2176 11 0.00 360.00 xcarc
1 1.00 912 2112 11 0.00 360.00 xcarc
0 1.00 880 2208 880 2080 944 2080 944 2208 4 polygon
0.000 0.000 1.000 scb
(O) {/Courier cf} 2 23 0 0.50 912 2160 label
(Vs) {/Courier cf} 2 23 0 0.50 912 2096 label
sce
(J3) {/Courier cf} 2 21 0 0.75 904 2224 label
1 1.00 16 2480 11 0.00 360.00 xcarc
1 1.00 16 2416 11 0.00 360.00 xcarc
0 1.00 -16 2512 -16 2384 48 2384 48 2512 4 polygon
0.000 0.000 1.000 scb
(Vd) {/Courier cf} 2 23 0 0.50 16 2464 label
(Vs) {/Courier cf} 2 23 0 0.50 16 2400 label
sce
(J1) {/Courier cf} 2 21 0 0.75 8 2528 label
1 1.00 576 1440 11 0.00 360.00 xcarc
1 1.00 576 1504 11 0.00 360.00 xcarc
1 1.00 576 1568 11 0.00 360.00 xcarc
1 1.00 576 1632 11 0.00 360.00 xcarc
1 1.00 624 1632 11 0.00 360.00 xcarc
1 1.00 624 1568 11 0.00 360.00 xcarc
1 1.00 624 1504 11 0.00 360.00 xcarc
1 1.00 624 1440 11 0.00 360.00 xcarc
0 2.00 544 1664 544 1408 656 1408 656 1664 4 polygon
0.000 0.000 1.000 scb
(SC) {/Courier cf} 2 23 0 0.50 576 1488 label
(RC) {/Courier cf} 2 23 0 0.50 576 1552 label
(SO) {/Courier cf} 2 23 0 0.50 576 1616 label
(Vs) {/Courier cf} 2 23 0 0.50 576 1424 label
(Vd) {/Courier cf} 2 23 0 0.50 624 1424 label
(MU) {/Courier cf} 2 23 0 0.50 624 1552 label
(MD) {/Courier cf} 2 23 0 0.50 624 1616 label
sce
(J2) {/Courier cf} 2 21 0 0.75 632 1392 label
(- It's no error that only one AC connection goes to the SID) {/Courier cf} 2 
20 0 0.75 -1592 880 label
(the second connection is the ground line!) {/Courier cf} 2 20 0 0.75 -1560 848 
label
(- you could replace the rectifier of the SID module by a 1N4001 diode) 
{/Courier cf} 2 20 0 0.75 -1592 800 label
(- J2:Vs and J2:Vd of the SID module are directly connected to J2 of the core) 
{/Courier cf} 2 20 0 0.75 -1592 752 label
1.000 0.000 0.000 scb
1 2.00 912 576 -144 576 -144 1136 -816 1136 4 polygon
1 2.00 -816 1200 -96 1200 -96 640 912 640 4 polygon
1 2.00 -816 1312 1040 1312 1040 1104 816 1104 4 polygon
1 2.00 1040 1312 1040 2112 1216 2112 3 polygon
1 2.00 -816 1504 -176 1504 -176 2480 16 2480 4 polygon
1.00 0 1040 1312 dot
1 2.00 576 240 512 240 512 1568 576 1568 4 polygon
1 2.00 576 304 528 304 528 1632 576 1632 4 polygon
1 2.00 624 1568 688 1568 688 240 624 240 4 polygon
1 2.00 576 1440 576 1104 832 1104 3 polygon
1 2.00 816 1168 624 1168 624 1440 3 polygon
sce
(- take care for proper ground connections to avoid 50Hz buzz on the Audio Out) 
{/Courier cf} 2 20 0 0.75 -1592 704 label
1.000 0.000 0.000 scb
1 2.00 912 2176 1216 2176 2 polygon
sce
(Audio Jack) {/Courier cf} 2 21 0 0.75 1240 2144 label
0.000 0.000 1.000 scb
(PWM) {/Courier cf} 2 23 0 0.50 624 1488 label
1.000 0.000 0.000 scb
1 2.00 624 1632 672 1632 672 304 624 304 4 polygon
0.000 0.000 1.000 scb
(PWM) {/Courier cf} 2 23 0 0.50 624 160 label
1.000 0.000 0.000 scb
1 2.00 624 1504 704 1504 704 176 624 176 4 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
