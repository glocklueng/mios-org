%!PS-Adobe-3.0
%%Title: midifilter_psupply
%%Creator: Xcircuit v2.1
%%CreationDate: Sun Apr  7 18:47:34 2002
%%Pages: 1
%%BoundingBox: 78 163 534 629
%%DocumentNeededResources: font Helvetica font Times-Roman font Courier 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.1
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/20/00  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.1 4
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/CR { 0 /Bline Bline fscale0 neg add def Bline moveto } def
/Kn { 2 copy kY add /kY exch def kX add /kX exch def rmoveto } bind def
/bs { stW 0 Kn } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { /fscale exch def xfont findfont fscale scalefont setfont
	/kX 0 def /kY 0 def} def
/cf { dup type /realtype eq {40 mul /fscale0 exch def } if /xfont exch def
	fscale0 cf0 } def
/ss { 0.67 fscale mul cf0 0 fscale 0.5 mul neg Kn } def
/Ss { 0.67 fscale mul cf0 0 fscale 0.5 mul Kn } def
/ns { kX neg kY neg Kn fscale0 cf0 } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto rotate /just exch def just 16 and 0 gt
	{0 1 dtransform gsave pagemat setmatrix idtransform exch grestore
	1 0 dtransform gsave pagemat setmatrix idtransform exch grestore
	dup 0 eq {pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse
	{-1 /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse exch 0 lt
	{-1 /just just dup 12 and 4 ne {12 xor} if def} {1} ifelse scale }
	if /showflag 0 def /fspc pspc def /Bline 0 def gsave dup 1 add copy
	0 exch {exch dup type /stringtype eq {true charpath flattenpath}
	{exec} ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll
	just 1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub	
	0.5 mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch
	just 4 and 0 gt {just 8 and 0 gt {exch pop neg fspc sub}
	{add 0.5 mul neg} ifelse} {pop neg fspc add} ifelse
	/showflag 1 def Kn currentpoint translate /Bline 0 def
	{dup type /stringtype eq {show}{exec} ifelse} repeat grestore } def
/pinlabel { hlevel 0 eq { /pspc 20 def label /pspc 0 def }
	{ pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto dup 0 lt
	{neg 1 sub -1 1 scale} if rotate dup scale } bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/insertion {/PSobj save def /showpage {} def bop translate} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/diode {
% -8 -48 36 96 bbox
begingate
248  1.00 -18 -16 0 16 18 -16 3 polygon
1  1.00 0 -48 0 -16 2 polygon
1  1.00 0 48 0 16 2 polygon
1  1.00 -18 16 18 16 2 polygon
endgate
} def

/dot {
% -10 -10 20 20 bbox
begingate
248  1.00 0 0 6 0.00 360.00 xcarc
endgate
} def

/polarized {
% -32 -64 64 128 bbox
begingate
1  1.00 0 -64 0 -6 2 polygon
1  1.00 0 64 0 6 2 polygon
1  1.00 -32 6 32 6 2 polygon
1  1.00 0 -80 74 66.00 114.00 xcarc
endgate
} def

/circle {
% -6 -12 28 24 bbox
begingate
1  1.00 16 0 6 0.00 360.00 xcarc
1  1.00 0 0 10 0 2 polygon
endgate
} def

/gnd {
% -32 -60 64 68 bbox
begingate
1  1.00 0 0 0 -32 2 polygon
1  1.00 -32 -32 32 -32 2 polygon
1  1.00 -18 -46 18 -46 2 polygon
1  1.00 -4 -60 4 -60 2 polygon
endgate
} def

/_capacitor {
% -32 -64 64 128 bbox
begingate
% fundamental
1  1.00 0 -64 0 -6 2 polygon
1  1.00 0 64 0 6 2 polygon
1  1.00 -32 6 32 6 2 polygon
1  1.00 -32 -6 32 -6 2 polygon
1.000 0.000 0.000 scb
(c.1) {/Times-Roman 1.000 cf} 2 9 0 0 64 pinlabel
(c.2) {/Times-Roman 1.000 cf} 2 13 0 0 -64 pinlabel
sce
(spice:C%i %pc.1 %pc.2 1.0P) {/Times-Roman 1.000 cf} 2 0 0 -208 -160 infolabel
sce
(sim:c %pc.1 %pc.2) {/Times-Roman 1.000 cf} 2 0 0 -208 -208 infolabel
endgate
} def

/_circle {
% -6 -12 28 24 bbox
begingate
1  1.00 16 0 6 0.00 360.00 xcarc
1  1.00 0 0 10 0 2 polygon
1.000 0.000 0.000 scb
(out) {/Times-Roman 1.000 cf} 2 4 0 16 0 pinlabel
(out) {/Times-Roman 1.000 cf} 2 7 0 0 0 pinlabel
endgate
} def

%%Page: 1 1
%%PageOrientation: Landscape
/pgsave save def bop
% 1120 1472 offsets
90 rotate 85 -696 translate
0.7500 inchscale
2.6000 setlinewidth

(MIDIfilter Schematic Diagram) {/Helvetica 0.750 cf} 2 20 0 1472 736 label
0  3.00 1440 784 1440 592 1920 592 1920 784 4 polygon
(\(C\) T. Klose 2001-07-13) {/Helvetica 0.750 cf} 2 20 0 1472 640 label
0.000 0.000 1.000 scb
(Power Supply) {/Helvetica 0.750 cf} 2 20 0 1472 688 label
sce
1  1.00 592 1968 688 1968 2 polygon
1  1.00 592 1776 688 1776 2 polygon
1.00 0 736 1824 diode
1.00 0 688 1920 diode
1.00 180 736 1920 diode
1.00 180 688 1824 diode
1  1.00 736 1776 688 1776 2 polygon
1  1.00 736 1968 688 1968 2 polygon
1.00 0 688 1968 dot
1.00 0 688 1776 dot
1.00 0 688 1872 dot
1.00 0 736 1872 dot
1  1.00 736 1872 784 1872 784 1968 848 1968 4 polygon
1  1.00 688 1872 656 1872 656 1728 944 1728 4 polygon
(7V-10V) {/Courier 0.750 cf} 2 20 0 496 1888 label
(\(+\)) {/Courier 0.750 cf} 2 20 0 784 2000 label
(\(-\)) {/Courier 0.750 cf} 2 20 0 784 1696 label
1.00 -1 912 1840 polarized
1  1.00 848 1968 928 1968 2 polygon
1  1.00 912 1904 912 1968 2 polygon
1  1.00 912 1776 912 1728 2 polygon
(470 uF) {/Courier 0.750 cf} 2 20 0 800 1888 label
0  1.00 1088 2016 1088 1920 1216 1920 1216 2016 4 polygon
1  1.00 1152 1920 1152 1728 2 polygon
1  1.00 912 1968 1088 1968 2 polygon
1.00 0 912 1968 dot
1.00 0 912 1728 dot
1.00 0 1296 1968 circle
1.00 0 1296 1728 circle
(7805) {/Courier 0.750 cf} 2 21 0 1152 1968 label
(1) {/Courier 0.500 cf} 2 23 0 1072 1984 label
(3) {/Courier 0.500 cf} 2 20 0 1232 1984 label
(2) {/Courier 0.500 cf} 2 20 0 1136 1904 label
(+5V) {/Courier 0.750 cf} 2 20 0 1328 1968 label
0.50 0 1360 1728 gnd
1  1.00 1360 1728 1328 1728 2 polygon
(B40C800) {/Courier 0.750 cf} 2 20 0 640 2000 label
(\(~\)) {/Courier 0.750 cf} 2 20 0 560 2000 label
(\(~\)) {/Courier 0.750 cf} 2 20 0 560 1744 label
1  1.00 1088 1728 944 1728 2 polygon
1  1.00 1296 1968 1216 1968 2 polygon
1  1.00 1296 1728 1088 1728 2 polygon
(from) {/Courier 0.750 cf} 2 20 0 352 1920 label
(Power) {/Courier 0.750 cf} 2 20 0 352 1872 label
(Adaptor) {/Courier 0.750 cf} 2 20 0 352 1824 label
1.00 0 1008 1840 _capacitor
1  1.00 1008 1904 1008 1968 2 polygon
1  1.00 1008 1776 1008 1728 2 polygon
1.00 0 1008 1728 dot
1.00 0 1008 1968 dot
(330 nF) {/Courier 0.750 cf} 2 20 0 1024 1808 label
1.00 0 1152 1728 dot
(+) {/Courier 0.500 cf} 2 23 0 944 1872 label
(-) {/Courier 0.500 cf} 2 23 0 944 1808 label
1  1.00 592 1200 688 1200 2 polygon
1  1.00 592 960 944 960 2 polygon
1.00 270 736 1200 diode
(6V-9V) {/Courier 0.750 cf} 2 20 0 544 1120 label
(\(+\)) {/Courier 0.750 cf} 2 20 0 576 1232 label
(\(-\)) {/Courier 0.750 cf} 2 20 0 576 928 label
1.00 -1 912 1072 polarized
1  1.00 784 1200 928 1200 2 polygon
1  1.00 912 1136 912 1200 2 polygon
1  1.00 912 1008 912 960 2 polygon
(470 uF) {/Courier 0.750 cf} 2 20 0 800 1120 label
0  1.00 1088 1248 1088 1152 1216 1152 1216 1248 4 polygon
1  1.00 1152 1152 1152 960 2 polygon
1  1.00 912 1200 1088 1200 2 polygon
1.00 0 912 1200 dot
1.00 0 912 960 dot
1.00 0 1296 1200 circle
1.00 0 1296 960 circle
(7805) {/Courier 0.750 cf} 2 21 0 1152 1200 label
(1) {/Courier 0.500 cf} 2 23 0 1072 1216 label
(3) {/Courier 0.500 cf} 2 20 0 1232 1216 label
(2) {/Courier 0.500 cf} 2 20 0 1136 1136 label
(+5V) {/Courier 0.750 cf} 2 20 0 1328 1200 label
0.50 0 1360 960 gnd
1  1.00 1360 960 1328 960 2 polygon
1  1.00 1088 960 944 960 2 polygon
1  1.00 1296 1200 1216 1200 2 polygon
1  1.00 1296 960 1088 960 2 polygon
(from) {/Courier 0.750 cf} 2 20 0 352 1152 label
(Power) {/Courier 0.750 cf} 2 20 0 352 1104 label
(Adaptor) {/Courier 0.750 cf} 2 20 0 352 1056 label
1.00 0 1008 1072 _capacitor
1  1.00 1008 1136 1008 1200 2 polygon
1  1.00 1008 1008 1008 960 2 polygon
1.00 0 1008 960 dot
1.00 0 1008 1200 dot
(330 nF) {/Courier 0.750 cf} 2 20 0 1024 1040 label
1.00 0 1152 960 dot
(+) {/Courier 0.500 cf} 2 23 0 944 1104 label
(-) {/Courier 0.500 cf} 2 23 0 944 1040 label
1.000 0.000 0.000 scb
(Choose >>>ONE<<< of these two circuits.) {/Courier 0.750 cf} 2 20 0 704 1568 
label
0.000 0.000 1.000 scb

(This is my favourite one, because the commutator \(4 diodes\) allows to use an AC) 
{/Courier 0.750 cf} 2 20 0 288 2176 label

(adapter. And if you are using a DC adapter \(common case\), you don't have to take) 
{/Courier 0.750 cf} 2 20 0 288 2128 label
(care for the polarity - very handy! :\)) {/Courier 0.750 cf} 2 20 0 288 2080 
label
(This minimal circuit is used on the PCB layout. It works also very well, but use) 
{/Courier 0.750 cf} 2 20 0 288 1440 label
(with an AC adapter is not recommented. If the polarity at the input is wrong, ) 
{/Courier 0.750 cf} 2 20 0 288 1392 label
(the diode "blocks" the current and protects your MIDIbox, so DONT FORGET IT!) 
{/Courier 0.750 cf} 2 20 0 288 1344 label
sce
1.00 180 592 1776 _circle
1.00 180 592 1968 _circle
1.00 180 592 1200 _circle
1.00 180 592 960 _circle
(1N4001) {/Courier 0.750 cf} 2 20 0 688 1248 label
1.000 0.000 0.000 scb
0  3.00 672 1616 672 1520 1424 1520 1424 1616 4 polygon
sce
(500 mA) {/Courier 0.750 cf} 2 20 0 496 1840 label
(500 mA) {/Courier 0.750 cf} 2 20 0 544 1072 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
