%!PS-Adobe-3.0
%%Title: midibox_ng_switched_psu
%%Creator: Xcircuit v3.1
%%CreationDate: Sat Jan  3 00:13:11 2004
%%Pages: 1
%%BoundingBox: 79 82 533 710
%%DocumentNeededResources: font Helvetica font Times-Roman font Courier 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--1/15/03  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 2
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore} def     

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/circle {
% trivial
begingate
1 1.00 16 0 6 0.00 360.00 xcarc
1 1.00 0 0 10 0 2 polygon
1.000 0.000 0.000 scb
(out) {/Times-Roman cf} 2 4 0 1.00 16 0 pinlabel
(out) {/Times-Roman cf} 2 7 0 1.00 0 0 pinlabel
endgate
} def

/diode {
begingate
248 1.00 -18 -16 0 16 18 -16 3 polygon
1 1.00 0 -48 0 -16 2 polygon
1 1.00 0 48 0 16 2 polygon
1 1.00 -18 16 18 16 2 polygon
1.000 0.000 0.000 scb
(d.m) {/Times-Roman cf} 2 9 0 1.00 0 48 pinlabel
(d.p) {/Times-Roman cf} 2 13 0 1.00 0 -48 pinlabel
endgate
} def

/resistor {
begingate
1 1.00 0 64 0 36 2 polygon
1 1.00 0 -64 0 -36 2 polygon
1 1.00 0 -36 14 -30 -14 -18 14 -6 -14 6 14 18 -14 30 0 36 8 polygon
1.000 0.000 0.000 scb
(r.1) {/Times-Roman cf} 2 9 0 1.00 0 64 pinlabel
(r.2) {/Times-Roman cf} 2 13 0 1.00 0 -64 pinlabel
0.192 0.541 0.353 scb
(spice:R%i %pr.1 %pr.2 1.0K) {/Times-Roman cf} 2 0 0 1.00 -208 -160 infolabel
(sim:r %pr.1 %pr.2) {/Times-Roman cf} 2 0 0 1.00 -208 -208 infolabel
endgate
} def

/dot {
% trivial
begingate
248 1.00 0 0 6 0.00 360.00 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 0 1.00 0 0 pinlabel
endgate
} def

%%Page: 1 1
%%PageOrientation: Landscape
/pgsave save def bop
% 2096 500 offsets
90 rotate 2 -614 translate
0.5000 inchscale
2.6000 setlinewidth

0 3.00 464 628 464 452 944 452 944 628 4 polygon
(\(C\) T. Klose 2004-01-02) {/Helvetica cf} 2 20 0 0.75 496 500 label
0.000 0.000 1.000 scb
(Using a switched PSU) {/Helvetica cf} 2 20 0 0.75 496 596 label
(for MIDIbox NG) {/Helvetica cf} 2 20 0 0.75 496 548 label
0.906 0.890 0.906 scb
240 1.00 3248 484 3248 1812 2224 1812 2224 484 4 polygon
0.000 0.000 0.000 scb
(MBHP_CORE) {/Courier cf} 2 21 0 3.00 2736 884 label
sce
1 1.00 3184 1188 11 0.00 360.00 xcarc
1 1.00 3184 1124 11 0.00 360.00 xcarc
0 1.00 3152 1220 3152 1092 3216 1092 3216 1220 4 polygon
0.000 0.000 1.000 scb
(P1) {/Courier cf} 2 23 0 0.50 3184 1172 label
(P2) {/Courier cf} 2 23 0 0.50 3184 1108 label
sce
(J1) {/Courier cf} 2 21 0 0.75 3176 1236 label
1 1.00 3088 1716 11 0.00 360.00 xcarc
1 1.00 3088 1652 11 0.00 360.00 xcarc
0 1.00 3056 1748 3056 1620 3120 1620 3120 1748 4 polygon
0.000 0.000 1.000 scb
(Vd) {/Courier cf} 2 23 0 0.50 3088 1700 label
(Vs) {/Courier cf} 2 23 0 0.50 3088 1636 label
sce
(J2) {/Courier cf} 2 21 0 0.75 3080 1764 label
0.000 0.000 0.000 scb
1 1.00 2976 1684 11 0.00 360.00 xcarc
1 1.00 2976 1636 11 0.00 360.00 xcarc
1 1.00 2976 1588 11 0.00 360.00 xcarc
1.000 0.000 0.000 scb
1 5.00 2976 1684 2928 1684 2928 1588 2976 1588 4 polygon
0.000 0.000 0.000 scb
2 1.00 2816 1700 2816 1572 3008 1572 3008 1700 4 polygon
sce
(7805 not stuffed) {/Courier cf} 2 21 0 0.75 3064 1556 label
0.612 0.125 0.937 scb
(3) {/Courier cf} 2 21 0 2.00 3152 1460 label
1 2.00 3152 1460 67 0.00 360.00 xcarc
sce

(This schematic shows, how a switching power supply unit has to be connected to the ) 
{/Courier cf} 2 20 0 0.75 440 1540 label
(CORE and MF module of MIDIbox NG \(or any similar MIDIbox\)) {/Courier cf} 2 
20 0 0.75 440 1508 label

(I can ABSOLUTELY not ensure that any switching PSU will work w/o provoking jittering ) 
{/Courier cf} 2 20 0 0.75 440 1476 label

(\(1\) due to the high max. current I've added two fuses to protect the circuit.) 
{/Courier cf} 2 20 0 0.75 456 1252 label

(\(2\) every switching PSU requires a minimum load, otherwise the output voltage will be 0V) 
{/Courier cf} 2 20 0 0.75 456 1140 label

(My PSU works with a minimum load of ca. 10 mA, so I only had to add a LED to every) 
{/Courier cf} 2 20 0 0.75 520 1108 label

(output. If this isn't enough for your own PSU, try a 6V lamp at the +5V output and) 
{/Courier cf} 2 20 0 0.75 520 1076 label

(\(3\) the 7805 regulators of the core modules have been removed. The Input/Output line) 
{/Courier cf} 2 20 0 0.75 456 996 label

(of this IC has been shortened so that C5 of the core module \(ca. 1000 uF is ok\)) 
{/Courier cf} 2 20 0 0.75 536 964 label
(is directly connected to the +5V input. The 1000 uF cap is very important to) 
{/Courier cf} 2 20 0 0.75 536 932 label
0.906 0.890 0.906 scb
240 1.00 3760 1892 3760 2836 2224 2836 2224 1892 4 polygon
sce
1 1.00 2352 2148 11 0.00 360.00 xcarc
1 1.00 2352 2084 11 0.00 360.00 xcarc
0 2.00 2320 2180 2320 2052 2384 2052 2384 2180 4 polygon
0.000 0.000 1.000 scb
(P1) {/Courier cf} 2 23 0 0.50 2352 2132 label
(P2) {/Courier cf} 2 23 0 0.50 2352 2068 label
sce
(J1) {/Courier cf} 2 21 0 0.75 2344 2196 label
0.000 0.000 0.000 scb
(MBHP_MF) {/Courier cf} 2 21 0 3.00 2992 2404 label
sce
1.00 0 1024 1956 circle
1.00 0 1024 1876 circle
1.00 0 1024 1796 circle
1 1.00 1024 1876 912 1876 2 polygon
1 1.00 1024 1956 912 1956 2 polygon
1 1.00 1024 1796 912 1796 2 polygon
0.388 0.396 0.388 scb
496 1.00 560 2164 560 1588 912 1588 912 2164 4 polygon
0.808 0.796 0.808 scb
(Fortron/Source) {/Helvetica cf} 2 17 270 1.00 720 1876 label
(Model No: FSA55P31) {/Helvetica cf} 2 17 270 1.00 784 1876 label
0.000 0.000 0.000 scb
1 1.00 1040 1956 1168 1956 2 polygon
225 1.00 1168 1972 1168 1940 1264 1940 1264 1972 1168 1972 5 polygon
1 1.00 1264 1956 2128 1956 2 polygon
1 1.00 1168 1956 1264 1956 2 polygon
1 1.00 1040 1796 1168 1796 2 polygon
225 1.00 1168 1812 1168 1780 1264 1780 1264 1812 1168 1812 5 polygon
1 1.00 1264 1796 3168 1796 2 polygon
1 1.00 1168 1796 1264 1796 2 polygon
(+12V) {/Helvetica cf} 2 17 0 1.00 1040 1972 label
(+5V) {/Helvetica cf} 2 17 0 1.00 1040 1812 label
(Ground) {/Helvetica cf} 2 17 0 1.00 1040 1892 label
(1.5A) {/Helvetica cf} 2 17 0 1.00 1216 1988 label
(1A) {/Helvetica cf} 2 17 0 1.00 1216 1828 label
(\(slow blow\)) {/Helvetica cf} 2 17 0 0.50 1216 1924 label
(\(slow blow\)) {/Helvetica cf} 2 17 0 0.50 1216 1764 label
sce
(470) {/Courier cf} 2 23 0 0.75 1552 2076 label
1.000 0.000 0.000 scb
1.00 90 1408 2036 diode
1 1.00 1417 2059 1442 2084 2 polygon
1 1.00 1442 2084 1433 2084 2 polygon
1 1.00 1442 2084 1442 2075 2 polygon
1 1.00 1401 2059 1426 2084 2 polygon
1 1.00 1426 2084 1417 2084 2 polygon
1 1.00 1426 2084 1426 2075 2 polygon
0.000 0.000 0.000 scb
1.00 270 1520 2036 resistor
sce
(220) {/Courier cf} 2 23 0 0.75 1552 1756 label
1.000 0.000 0.000 scb
1.00 90 1408 1716 diode
1 1.00 1417 1739 1442 1764 2 polygon
1 1.00 1442 1764 1433 1764 2 polygon
1 1.00 1442 1764 1442 1755 2 polygon
1 1.00 1401 1739 1426 1764 2 polygon
1 1.00 1426 1764 1417 1764 2 polygon
1 1.00 1426 1764 1426 1755 2 polygon
0.000 0.000 0.000 scb
1.00 270 1520 1716 resistor
225 1.00 1360 1716 1328 1716 1328 1796 3 polygon
225 1.00 1360 2036 1328 2036 1328 1956 3 polygon
1.00 0 1328 1956 dot
1.00 0 1328 1796 dot
225 1.00 1584 2036 1616 2036 1616 1876 3 polygon
225 1.00 1584 1716 1616 1716 1616 1876 3 polygon
1 1.00 1040 1876 3232 1876 2 polygon
1.00 0 1616 1876 dot
0.612 0.125 0.937 scb
(1) {/Courier cf} 2 21 0 2.00 1216 2212 label
1 2.00 1216 2212 67 0.00 360.00 xcarc
(2) {/Courier cf} 2 21 0 2.00 1472 2212 label
1 2.00 1472 2212 67 0.00 360.00 xcarc
0.000 0.000 0.000 scb
225 1.00 2352 2148 2128 2148 2128 1956 3 polygon
225 1.00 3232 1876 3232 1652 3088 1652 3 polygon
225 1.00 3088 1716 3168 1716 3168 1796 3 polygon
225 1.00 2352 2084 2192 2084 2192 1876 3 polygon
1.00 0 2192 1876 dot
sce

(fader values - several MIDIbox users made bad experiences with PC power supplies,) 
{/Courier cf} 2 20 0 0.75 440 1444 label

(but it seems that the \(really cheap\) PSU which can be purchased at Pollin \(http://www.pollin.de\)) 
{/Courier cf} 2 20 0 0.75 440 1412 label
(works w/o problems. ) {/Courier cf} 2 20 0 0.75 440 1380 label

(For Reference: Order #FSA55P31   5V/5A, 12V/3A,  -12V/0.5A \(unused\)   -- for 4.95 EUR! :-\)) 
{/Courier cf} 2 20 0 0.75 440 1348 label

(This PSU delivers much more power than required, I guess that it could supply up to 3-4 MIDIbox NG) 
{/Courier cf} 2 20 0 0.75 440 1316 label
(    Never try it without!!!) {/Courier cf} 2 20 0 0.75 456 1220 label
(    These are "slow-blown" fuses \(german: "traege"\)) {/Courier cf} 2 20 0 
0.75 456 1188 label
(two 6V lamps in serial at the +12V output) {/Courier cf} 2 20 0 0.75 520 1044 
label
(eliminate the ripple voltage \(would cause jittering pot values...\)) 
{/Courier cf} 2 20 0 0.75 536 900 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
