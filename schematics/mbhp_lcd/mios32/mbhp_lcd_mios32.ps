%!PS-Adobe-3.0
%%Title: mbhp_lcd_mios32
%%Creator: XCircuit v3.6 rev144
%%CreationDate: Sun Feb  3 12:23:07 2013
%%Pages: 1
%%BoundingBox: 0 0 612 792
%%DocumentNeededResources: font Helvetica Courier 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.3
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--7/13/05  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.3 0
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate
	0 0 moveto neg rotate dup scale cvx exec image grestore } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore} def     

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup


%%EndSetup

%%Page: 1 1
%%PageOrientation: Portrait
%%PageBoundingBox: 0 0 612 792
/pgsave save def bop
% 32.00 8.00 gridspace
1.1034 inchscale
2.6000 setlinewidth 166 821 translate

(Vss) {/Helvetica cf} 2 20 90 0.500 101 -144 label
(Vdd) {/Helvetica cf} 2 20 90 0.500 133 -144 label
(V0) {/Helvetica cf} 2 20 90 0.500 165 -144 label
(RS) {/Helvetica cf} 2 20 90 0.500 197 -144 label
(R/W) {/Helvetica cf} 2 20 90 0.500 229 -144 label
(E) {/Helvetica cf} 2 20 90 0.500 261 -144 label
(D0) {/Helvetica cf} 2 20 90 0.500 293 -144 label
(D1) {/Helvetica cf} 2 20 90 0.500 325 -144 label
(D2) {/Helvetica cf} 2 20 90 0.500 357 -144 label
(D3) {/Helvetica cf} 2 20 90 0.500 389 -144 label
(D4) {/Helvetica cf} 2 20 90 0.500 421 -144 label
(D5) {/Helvetica cf} 2 20 90 0.500 453 -144 label
(D6) {/Helvetica cf} 2 20 90 0.500 485 -144 label
(D7) {/Helvetica cf} 2 20 90 0.500 517 -144 label
(Displaytech C162 \(Front\)) {/Helvetica cf} 2 21 0 0.500 427 -224 label
240 1.000 88 -96 88 -128 104 -128 104 -96 4 polygon
240 1.000 120 -96 120 -128 136 -128 136 -96 4 polygon
240 1.000 152 -96 152 -128 168 -128 168 -96 4 polygon
240 1.000 184 -96 184 -128 200 -128 200 -96 4 polygon
240 1.000 216 -96 216 -128 232 -128 232 -96 4 polygon
240 1.000 248 -96 248 -128 264 -128 264 -96 4 polygon
240 1.000 280 -96 280 -128 296 -128 296 -96 4 polygon
240 1.000 312 -96 312 -128 328 -128 328 -96 4 polygon
240 1.000 344 -96 344 -128 360 -128 360 -96 4 polygon
240 1.000 376 -96 376 -128 392 -128 392 -96 4 polygon
240 1.000 408 -96 408 -128 424 -128 424 -96 4 polygon
240 1.000 440 -96 440 -128 456 -128 456 -96 4 polygon
240 1.000 472 -96 472 -128 488 -128 488 -96 4 polygon
240 1.000 504 -96 504 -128 520 -128 520 -96 4 polygon
240 1.000 536 -96 536 -128 552 -128 552 -96 4 polygon
240 1.000 568 -96 568 -128 584 -128 584 -96 4 polygon
(LED-) {/Helvetica cf} 2 20 90 0.500 581 -144 label
(LED+) {/Helvetica cf} 2 20 90 0.500 549 -144 label
(1) {/Helvetica cf} 2 20 0 0.500 72 -128 label
(16) {/Helvetica cf} 2 20 0 0.500 600 -128 label
0 1.000 8 -96 8 -400 840 -400 840 -96 4 polygon
0 1.000 72 -192 72 -352 776 -352 776 -192 4 polygon
1 1.000 808 -128 16 0.000 360.000 xcarc
1 1.000 808 -368 16 0.000 360.000 xcarc
1 1.000 40 -368 16 0.000 360.000 xcarc
1 1.000 40 -128 16 0.000 360.000 xcarc
1.000 0.000 0.000 scb
(Other displays mostly have the same pinning, but it *could* be mirrored!) 
{/Helvetica cf} 2 21 0 0.500 427 -257 label
(Pin 15 and 16 are only available on Backlight LCDs) {/Helvetica cf} 2 21 0 
0.500 427 -289 label
0.000 0.000 1.000 scb
(Vd) {/Courier cf} 2 23 0 0.500 864 552 label
(RS) {/Courier cf} 2 23 0 0.500 864 488 label
(E) {/Courier cf} 2 23 0 0.500 864 424 label
(D1) {/Courier cf} 2 23 0 0.500 864 360 label
(D3) {/Courier cf} 2 23 0 0.500 864 296 label
(D5) {/Courier cf} 2 23 0 0.500 864 232 label
(D7) {/Courier cf} 2 23 0 0.500 864 168 label
(B-) {/Courier cf} 2 23 0 0.500 864 104 label
(B+) {/Courier cf} 2 20 0 0.500 912 104 label
(D6) {/Courier cf} 2 20 0 0.500 912 168 label
(D4) {/Courier cf} 2 20 0 0.500 912 232 label
(D2) {/Courier cf} 2 20 0 0.500 912 296 label
(RW) {/Courier cf} 2 20 0 0.500 912 424 label
(V0) {/Courier cf} 2 20 0 0.500 912 488 label
(Vs) {/Courier cf} 2 20 0 0.500 912 552 label
(D0) {/Courier cf} 2 20 0 0.500 912 360 label
sce
1 1.000 864 568 11 0.000 360.000 xcarc
1 1.000 864 504 11 0.000 360.000 xcarc
1 1.000 864 440 11 0.000 360.000 xcarc
1 1.000 864 376 11 0.000 360.000 xcarc
1 1.000 864 312 11 0.000 360.000 xcarc
1 1.000 864 248 11 0.000 360.000 xcarc
1 1.000 864 184 11 0.000 360.000 xcarc
1 1.000 864 120 11 0.000 360.000 xcarc
1 1.000 912 120 11 0.000 360.000 xcarc
1 1.000 912 184 11 0.000 360.000 xcarc
1 1.000 912 248 11 0.000 360.000 xcarc
1 1.000 912 312 11 0.000 360.000 xcarc
1 1.000 912 376 11 0.000 360.000 xcarc
1 1.000 912 440 11 0.000 360.000 xcarc
1 1.000 912 504 11 0.000 360.000 xcarc
1 1.000 912 568 11 0.000 360.000 xcarc
0 2.000 832 600 832 88 944 88 944 600 4 polygon
(J15A of MBHP_CORE_LPC17 Module) {/Helvetica cf} 2 21 0 0.500 891 664 label
(The \(optional\) second Display can be connected to J15B) {/Helvetica cf} 2 21 
0 0.500 891 632 label
0 1.000 824 608 824 80 952 80 952 608 4 polygon
368 1.000 944 392 944 296 952 296 952 392 4 polygon
1.000 0.000 0.000 scb
225 3.000 576 -112 576 120 864 120 3 polygon
225 3.000 912 120 896 96 544 96 544 -112 4 polygon
225 3.000 512 -112 512 184 864 184 3 polygon
225 3.000 912 184 896 160 480 160 480 -112 4 polygon
225 3.000 448 -112 448 248 864 248 3 polygon
225 3.000 912 248 896 224 416 224 416 -112 4 polygon
225 3.000 384 -112 384 312 864 312 3 polygon
225 3.000 912 312 896 288 352 288 352 -112 4 polygon
225 3.000 320 -112 320 376 864 376 3 polygon
225 3.000 912 376 896 352 288 352 288 -112 4 polygon
225 3.000 256 -112 256 440 864 440 3 polygon
225 3.000 912 440 896 416 224 416 224 -112 4 polygon
225 3.000 192 -112 192 504 864 504 3 polygon
225 3.000 912 504 896 480 160 480 160 -112 4 polygon
225 3.000 128 -112 128 568 864 568 3 polygon
225 3.000 912 568 896 544 96 544 96 -112 4 polygon
(Sometimes \(especially 2x40 LCDs\) they are called A and K) {/Helvetica cf} 2 
21 0 0.500 427 -313 label
(Order of wires is matching) {/Courier cf} 2 20 0 0.500 624 24 label
(with flat ribbon cable) {/Courier cf} 2 20 0 0.500 624 0 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
