%!PS-Adobe-3.0
%%Title: icp
%%Creator: Xcircuit v2.1
%%CreationDate: Fri May 17 21:00:03 2002
%%Pages: 1
%%BoundingBox: 84 69 528 723
%%DocumentNeededResources: font Helvetica font Times-Roman font Courier 
%%+ font Symbol 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.1
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/20/00  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.1 4
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/CR { 0 /Bline Bline fscale0 neg add def Bline moveto } def
/Kn { 2 copy kY add /kY exch def kX add /kX exch def rmoveto } bind def
/bs { stW 0 Kn } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { /fscale exch def xfont findfont fscale scalefont setfont
	/kX 0 def /kY 0 def} def
/cf { dup type /realtype eq {40 mul /fscale0 exch def } if /xfont exch def
	fscale0 cf0 } def
/ss { 0.67 fscale mul cf0 0 fscale 0.5 mul neg Kn } def
/Ss { 0.67 fscale mul cf0 0 fscale 0.5 mul Kn } def
/ns { kX neg kY neg Kn fscale0 cf0 } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto rotate /just exch def just 16 and 0 gt
	{0 1 dtransform gsave pagemat setmatrix idtransform exch grestore
	1 0 dtransform gsave pagemat setmatrix idtransform exch grestore
	dup 0 eq {pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse
	{-1 /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse exch 0 lt
	{-1 /just just dup 12 and 4 ne {12 xor} if def} {1} ifelse scale }
	if /showflag 0 def /fspc pspc def /Bline 0 def gsave dup 1 add copy
	0 exch {exch dup type /stringtype eq {true charpath flattenpath}
	{exec} ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll
	just 1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub	
	0.5 mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch
	just 4 and 0 gt {just 8 and 0 gt {exch pop neg fspc sub}
	{add 0.5 mul neg} ifelse} {pop neg fspc add} ifelse
	/showflag 1 def Kn currentpoint translate /Bline 0 def
	{dup type /stringtype eq {show}{exec} ifelse} repeat grestore } def
/pinlabel { hlevel 0 eq { /pspc 20 def label /pspc 0 def }
	{ pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto dup 0 lt
	{neg 1 sub -1 1 scale} if rotate dup scale } bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/insertion {/PSobj save def /showpage {} def bop translate} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/dot {
% -10 -10 20 20 bbox
begingate
248  1.00 0 0 6 0.00 360.00 xcarc
endgate
} def

/gnd {
% -32 -60 64 68 bbox
begingate
1  1.00 0 0 0 -32 2 polygon
1  1.00 -32 -32 32 -32 2 polygon
1  1.00 -18 -46 18 -46 2 polygon
1  1.00 -4 -60 4 -60 2 polygon
endgate
} def

/5V {
% -32 -32 64 68 bbox
begingate
1  1.00 -32 0 32 0 2 polygon
1  1.00 0 0 0 -32 2 polygon
(V) {/Times-Roman 0.900 cf} (+5) {/Symbol 0.900 cf} 4 17 0 0 8 label
endgate
} def

/fuenf {
% -16 -16 32 34 bbox
begingate
0.50 0 0 0 5V
1  1.00 0 -8 0 0 2 polygon
1  1.00 -16 0 16 0 2 polygon
endgate
} def

%%Page: 1 1
%%PageOrientation: Landscape
/pgsave save def bop
% 860 540 offsets
% 32.00 8.00 gridspace
90 rotate -14 -596 translate
1.2273 inchscale
2.6000 setlinewidth

(ICP Socket Solution) {/Helvetica 0.750 cf} 2 20 0 1292 244 label
(T. Klose 1999-06-13) {/Helvetica 0.750 cf} 2 20 0 1292 196 label
0  3.00 1268 276 1268 156 1596 156 1596 276 4 polygon
1  1.00 868 972 868 756 2 polygon
(1) {/Courier 0.500 cf} 2 23 0 860 956 label
(Vss) {/Courier 0.750 cf} 2 20 90 916 988 label
(Vss) {/Courier 0.750 cf} 2 20 90 956 988 label
(Vdd) {/Courier 0.750 cf} 2 20 90 996 988 label
(Vdd) {/Courier 0.750 cf} 2 20 90 1036 988 label
1  1.00 916 972 916 756 2 polygon
1  1.00 956 972 956 924 916 924 3 polygon
1  1.00 996 972 996 908 964 908 964 756 4 polygon
1  1.00 1036 972 1036 908 996 908 3 polygon
1.00 0 916 924 dot
1.00 0 996 908 dot
(12) {/Courier 0.500 cf} 2 23 0 908 956 label
(31) {/Courier 0.500 cf} 2 23 0 948 956 label
(11) {/Courier 0.500 cf} 2 23 0 988 956 label
(32) {/Courier 0.500 cf} 2 23 0 1028 956 label
1  1.00 868 748 11 0.00 360.00 xcarc
1  1.00 916 748 11 0.00 360.00 xcarc
1  1.00 964 748 11 0.00 360.00 xcarc
1  1.00 1012 748 11 0.00 360.00 xcarc
1  1.00 1060 748 11 0.00 360.00 xcarc
0  1.00 844 772 844 684 1084 684 1084 772 4 polygon
(10) {/Courier 0.500 cf} 2 23 0 860 788 label
(8) {/Courier 0.500 cf} 2 23 0 908 788 label
(6) {/Courier 0.500 cf} 2 23 0 956 788 label
(4) {/Courier 0.500 cf} 2 23 0 1004 788 label
(2) {/Courier 0.500 cf} 2 23 0 1052 788 label
(Programming) {/Courier 0.750 cf} 2 21 0 724 748 label
(Interface) {/Courier 0.750 cf} 2 21 0 724 716 label
1  1.00 868 708 11 0.00 360.00 xcarc
1  1.00 916 708 11 0.00 360.00 xcarc
1  1.00 964 708 11 0.00 360.00 xcarc
1  1.00 1012 708 11 0.00 360.00 xcarc
1  1.00 1060 708 11 0.00 360.00 xcarc
240  1.00 908 748 908 708 924 708 924 748 4 polygon
240  1.00 956 748 956 708 972 708 972 748 4 polygon
0.50 0 916 564 gnd
1  1.00 916 596 916 548 2 polygon
(K4) {/Courier 0.750 cf} 2 21 0 1116 732 label
1  1.00 916 700 916 572 2 polygon
(1) {/Courier 0.500 cf} 2 23 0 1052 668 label
(3) {/Courier 0.500 cf} 2 23 0 1004 668 label
(5) {/Courier 0.500 cf} 2 23 0 956 668 label
(7) {/Courier 0.500 cf} 2 23 0 908 668 label
(9) {/Courier 0.500 cf} 2 23 0 860 668 label
1  1.00 1060 700 1060 660 1092 660 3 polygon
1  1.00 1092 668 1092 652 1108 660 1092 668 4 polygon
240  1.00 1052 748 1052 708 1068 708 1068 748 4 polygon
0.000 0.000 1.000 scb
(RST) {/Courier 0.500 cf} 2 20 90 876 780 label
(_VS) {/Courier 0.500 cf} 2 20 90 924 780 label
(_VD) {/Courier 0.500 cf} 2 20 90 972 780 label
(_D6) {/Courier 0.500 cf} 2 20 90 1020 780 label
(_D7) {/Courier 0.500 cf} 2 20 90 1068 780 label
sce
(Reset#) {/Courier 0.750 cf} 2 20 90 868 988 label
1  1.00 964 700 964 572 2 polygon
1  1.00 964 580 964 532 996 532 996 556 4 polygon
1.00 0 996 556 fuenf
1  1.00 1076 972 1076 884 1012 884 1012 756 4 polygon
1  1.00 1124 972 1124 860 1060 860 1060 756 4 polygon
(39) {/Courier 0.500 cf} 2 23 0 1072 956 label
(40) {/Courier 0.500 cf} 2 23 0 1120 956 label
(D6) {/Courier 0.750 cf} 2 20 90 1076 988 label
(D7) {/Courier 0.750 cf} 2 20 90 1120 988 label
(D6) {/Courier 0.750 cf} 2 20 0 1116 620 label
1  1.00 1012 700 1012 620 1092 620 3 polygon
1  1.00 1092 628 1092 612 1108 620 1092 628 4 polygon
240  1.00 1004 748 1004 708 1020 708 1020 748 4 polygon
(o Close the 5 Jumpers for normal Mode \(Tip: just use a 2*5 plug) 
{/Courier 0.750 cf} 2 20 0 188 460 label
(o for programming attach a self-made adapter on the header.) {/Courier 0.750 cf} 
2 20 0 188 364 label
(  and short the connections, thats faster\)) {/Courier 0.750 cf} 2 20 0 188 420 
label
(  Here also a 2*5 plug could be used for fast handling) {/Courier 0.750 cf} 2 
20 0 188 324 label
(D7) {/Courier 0.750 cf} 2 20 0 1116 660 label
1.000 0.000 0.000 scb
(\(Rest of circuit\)) {/Courier 0.750 cf} 2 20 0 1156 644 label
(PIC Pins) {/Courier 0.750 cf} 2 20 0 956 1100 label
sce
1  1.00 868 708 868 604 964 604 3 polygon
1.00 0 964 604 dot
240  1.00 860 748 860 708 876 708 876 748 4 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
