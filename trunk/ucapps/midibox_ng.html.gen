HEADER 3 MIDIbox NG

<H1>MIDIbox NG</H1>
<H3>Created 2012/13</H3>

<P CLASS=INFO>MIDIbox NG is the "next generation" controller, running on a <A HREF="mbhp_core_lpc17.html">MBHP_CORE_LPC17</A> module, and it should replace the old PIC based projects <A HREF="midibox64.html">MIDIbox64</A>, <A HREF="midibox16e.html">MIDIbox64E</A> and <A HREF="midibox_lc.html">MIDIbox LC</A></P>

<P CLASS=INFO>The firmware is currently in beta state. Details can be found in <A HREF="http://midibox.org/forums/topic/17498-midibox-ng-release-feedback/" TARGET="_blank">in this forum article</A>.</P>

<P CLASS=INFO>Meanwhile also the creation of the <A HREF="midibox_ng_manual.html">User Manual</A> is in progress.</P>


<H2> <IMG SRC="images/bullet.gif" ALT=""> Implemented Features</H2>

<UL CLASS=CL>
<LI> generic, (very) customizable MIDI controller with multiple MIDI IOs, USB MIDI and <A HREF="midibox_osc.html">OSC (Ethernet)</A>
<LI> it doesn't matter if you are planning a Mini-Controller or a huge Monster-Controller (even with multiple LPC17 cores)
<LI> each control element can send and receive common MIDI events, but also NRPN and SysEx!</A>
<LI> buttons: either directly connected to <A HREF="mbhp_din.html">MBHP_DIN</A> module, or in 8x8 matrices via the <A HREF="mbhp_dio_matrix.html">MBHP_DIO_MATRIX</A> module
<LI> LEDs: either directly connected to <A HREF="mbhp_dout.html">MBHP_DOUT</A> module, or in 8x8 matrixes via the <A HREF="mbhp_dio_matrix.html">MBHP_DIO_MATRIX</A> module
<LI> LEDs: support for Duo and RGB Colour LEDs (will require matrix configuration)
<LI> support for various rotary encoders (detented/non-detented) with optional slow/fast function (which could be assigned to an inbuilt encoder switch, or separate button)
<LI> support for LED rings (e.g. via <A HREF="mbhp_dout.html">MBHP_DOUT</A> based matrices, and/or the upcoming <A HREF="http://www.midibox.org/dokuwiki/doku.php?id=fairlightiii">16 LEDrings/encoders PCB</A>
<LI> support for analog pots via the <A HREF="mbhp_ain_ser64.html">MBHP_AINSER64</A> module. They will support Normal, Snap (Soft-Takeover), Relative and Parallax mode
<LI> support for motorfaders via the <A HREF="mbhp_mf_ng.html">MBHP_MF_NG</A> module
<LI> support for multiple LCDs. Selectable pages will be fully customizable (e.g. static text, Button/Encoder/Pot label, values, animated bars, MTC, MIDI Clock tempo &amp; position)
<LI> support for character and graphical LCDs
<LI> Buttons/Pots/Encoders can send fully customizable MIDI (or OSC) message. SysEx and RPN/NRPN will be supported as well. Multiple events can be sent per control element
<LI> LEDs and Motorfaders can be controlled by fully customizable MIDI (or OSC) messages via multiple parse trees (speed optimized)
<LI> Buttons can also work in On/Off, On Only or Toggle mode
<LI> configuration stored on SD Card and can be switched during runtime (either by loading a different setup file, or by exchanging the SD Card)
<LI> multiple banks to control different functions with the same control elements ("shift button")
<LI> integrated MIDI router to forward events from up to 4 MIDI IN/OUTs, up to 4 USB MIDI IN/OUTs and up to 4 OSC ports
<LI> support for <A HREF="http://www.ucapps.de/midibox_network.html">MBNet</A> to link multiple cores
<LI> integrated MIDI processor to map/modify incoming MIDI events to outgoing MIDI events
</UL>

<H2> <IMG SRC="images/bullet.gif" ALT=""> Planned Features</H2>

<UL CLASS=CL>
<LI> improved documentation, example setups with pictures (users have to help out!)
<LI> configuration of Button and LED matrices not completed yet
<LI> support for LED digits
<LI> support for more than 2 LCDs
<LI> AIN/AINSER: support for Normal, Snap (Soft-Takeover), Relative and Parallax mode
<LI> Buttons/LEDs can be grouped ("radio groups") to control a single CC event via multiple buttons
<LI> MIDI Learn function
<LI> Optional "global MIDI channel"
<LI> Storing/Restoring snapshots of the configuration (e.g. to use the controller as synth programmer with patch storage)
<LI> "Morhp" function to fade smoothly between two snapshots
<LI> Snapshots can be changed via Program Change. In this case it will also be possible to send the values stored in the snapshot.
<LI> SysEx receiver/dumper to store and "fire" SysEx dumps to/from SD Card
<LI> support for Logic/Mackie Control and Motormix protocol
<LI> support for the <A HREF="http://www.ucapps.de/midibox_seq_manual_blm.html">BLM16x16+X protocol</A>
<LI> integrated MIDI clock master and slave (slave only to measure tempo)
<LI> integrated test modes for all control elements to troubleshoot hardware issues
</UL>



<H2> <IMG SRC="images/bullet.gif" ALT=""> Features/Specs under evaluation</H2>

<UL CLASS=CL>
<LI> Online configuration will require at least a 2x16 LCD + one dedicated button + one encoder. Additional buttons, which are normaly used for the controller, could be used for menu navigation and selection as well when dedicated button is pressed
<LI> providing a second DIN/DOUT chain to enhance the number of connectable buttons/encoders/LEDs without the danger for unstable serial transfers
<LI> in mid-term the <A HREF="midibox_kb.html">MIDIbox KB</A> firmware could be merged with MBNG.
<LI> adding support for <A HREF="http://www.copperlan.org" TARGET="_blank">CopperLAN</A>
<LI> the usage of <A HREF="http://www.eluaproject.net" TARGET="_blank">eLua</A> to send/receive MIDI messages and output messages script based (advantage: highest flexibility, disadvantage: slower processing and higher memory consumption)
<LI> providing integrated MIDI effects such as harmonizer, MIDI echo, arpeggiator, little sequencer (taken over from MBSEQ)
<LI> allow to extract patch names from received SysEx messages
<LI> evaluate the usage of longer SRIO chains with more than 16 registers with different hardware setups
</UL>


<H2> <IMG SRC="images/bullet.gif" ALT=""> Already known Design Limitations</H2>

<UL CLASS=CL>
<LI> due to reduced RAM of the LPC17 (64k only) the controller won't be simply scalable. However, the configuration should take this into account by applying dynamic memory allocation while reading the configuration file, so that no RAM is wasted
<LI> than more DIN/DOUT shiftregisters are chained, than higher the danger for instable value transfers. Limitation of 16 DINs and 16 DOUTs still holds for high robustness and low latencies, but we can overcome this by providing a second SRIO chain with 16 additional DIN/DOUT SRs
<LI> in distance to the previous designs (MIDIbox64, MIDIbox64E) the controller won't be fully configurable directly on the controller anymore, instead the configuration file stored on SD Card has to be edited. However, simple configuration (e.g. via MIDI learn) still possible.
<LI> no support for big GLCDs, no support for touchpanels. Re-inventing Lemur, an iPad or similar tablet PC is out of scope. However, second-hand iPad1s are cheap today, and you could connect to the MBNG via OSC
</UL>

FOOTER
