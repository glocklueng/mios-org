HEADER 3 MIOS C Interface

<h1>Interfaz MIOS C</h1>

<p class="INFO">Programar aplicaciones <a href="mios.html">MIOS</a>&nbsp;en C podr&aacute; ser una soluci&oacute;n alternativa para el
ensamblador en el futuro, porque este lenguaje es m&aacute;s
f&aacute;cil de entender, menos propenso a errores y m&aacute;s
reutilizable. La desventaja de C es un peor funcionamiento y
c&oacute;digos mucho m&aacute;s largos, lo que significa que no
ser&aacute; posible programar aplicaciones tan complejas como&nbsp;<a href="midibox_sid.html">MIDIbox SID</a> o <a href="midibox_seq.html">MIDIbox SEQ</a>
completamente en C, especialmente por la reducci&oacute;n de flash y
RAM del PIC18F452 (que es mayormente suficiente, pero no lo
suficientemente alta para muchas aplicaciones...). Puede que esto sea
resuelto paso a paso con los futuros derivados pin compatibles, que
contendr&aacute;n mucha m&aacute;s memoria, pero puuede que esto tarde
algunos a&ntilde;os.</p><br><p class="DESC">De cualquier manera, a
pesar de este&nbsp;hecho, MIOS y C son una estupenda combinaci&oacute;n.
&iquest;Por qu&eacute;? porque MIOS (el Sistema Operativo) est&aacute;
programado en lenguaje ensamblador y ha sido optimizado a mano para
mayor velocidad. Maneja muchas tareas cr&iacute;ticas de
ejecuci&oacute;n de las que el usuario no se tiene que preocupar. MIOS
contiene un mont&oacute;n de funciones prefabricadas que evitan a la
gente tener que reinventarlo todo- Posibilita al programador
interesado la correcta implementaci&oacute;n del proyecto MIDI sin
conocimientos b&aacute;sicos sobre IO de alto rendimiento o
correcto procesamiento MIDI.</p>

<p class="DESC">As&iacute;, el usuario solo tiene que iniciar la capa
de la aplicaci&oacute;n en la que la optimizaci&oacute;n no importa
mucho. Y puede esperar que, muchas de las funciones sean procesadas a
la misma velocidad, as&iacute; hayan sido escritas en C o en
ensamblador. Ok, el resultado depende mucho de la aplicaci&oacute;n y
el compilador utilizados, pero es posible hacer muchas cosas estupendas
sin mucho esfuerzo, y cuantos m&aacute;s usuarios hayan empezando a
acercarse a C, muchos m&aacute;s ejemplos de c&oacute;digo
podr&aacute;n
ser compartidos con la comunidad, hecho que elevar&aacute; el nivel de
las nuevas aplicaciones.</p>

<p class="DESC">Actualmente, no soy capaz de estimar cu&aacute;ndo conviene
programar algo en ensamblador o en C- es este un tipo de conocimiento a
adquirir en los pr&oacute;ximos meses- &iexcl;Ser&aacute;n bienvenidos toda vuestra
ayuda y recomendaciones! &nbsp;No olvideis que
tambi&eacute;n es posible mezclar C y ensamblador en la capa de la
aplicaci&oacute;n. Sugiero: La interfaz de usuario (botones, manejo de LEDs, salida de pantalla, MIDI IO) puede ser
implementada con C sin deventajas, pero las rutinas que tienen que
interactuar r&aacute;pido (como un controlador perif&eacute;rico o
algoritmos con procesos de muchos datos) deber&iacute;an ser
programados
en m&oacute;dulos separados de ensamblador y llamados con C.</p>

<h2>Realizaci&oacute;n T&eacute;cnica</h2>

<p class="DESC">Para MIOS en s&iacute; no importa si una rutina de C o
ensamblador est&aacute; enganchado a las rutinas de respuesta de
USER_*, porque esta posibilidad ha sido tenida en cuenta desde el
principio de la fase de dise&ntilde;o. MIOS siempre se
entroncar&aacute; con los vectores de&nbsp; USER_* en los eventos, que
son parte de la aplicaci&oacute;n. Desde ah&iacute;, la
aplicaci&oacute;n puede enlazarse a C si se desea.</p>

<p class="DESC">Las funciones&nbsp;MIOS (MIOS_*) &nbsp;pueden ser
llamadas, en su mayor parte, desde un programa en C sin p&eacute;rdida
de datos, mientras solo haya un par&aacute;metro de entrada y/o salida.
Las funciones con m&aacute;s par&aacute;metros requieren un poco
m&aacute;s de c&oacute;digo que copie los par&aacute;metros de C ( que
son incrustados en la compilaci&oacute;n) en los&nbsp;MIOS_PARAMETER[123].</p>

<p class="DESC">Si esto te suena nuevo, &nbsp;no te sientas confuso,
por favor- no te tienes que ocupar de esta manipulaci&oacute;n de
segundo nivel.</p>

<p class="DESC">En vez &nbsp;de eso, solo tienes que usar
el&nbsp;llamado "Wrapper" (envoltura), que contiene todo el
c&oacute;digo que hace falta para enlazar funciones C con MIOS. Este
"Wrapper" es parte del paquete MIOS Base.</p>

<h2>Ejemplos de programaci&oacute;n</h2>

<ul class="CL">
 
<table class="BOX" align="center" border="1" cellpadding="3" cellspacing="2" width="100%">

  <tbody><tr>
    <td width="30"><span class="BIG"><a href="mios_c_send_ain.html">CODE</a></span></td>
    <td><span class="NORM">Enviar eventos MIDI de movimientos de pote</span></td>
  </tr>

  <tr>
    <td width="30"><span class="BIG"><a href="mios_c_send_mapped.html">CODE</a></span></td>
    <td><span class="NORM">Env&iacute;o de eventos mapeados de MIDI de movimientos de pote</span></td>
  </tr>

  <tr>
    <td width="30"><span class="BIG"><a href="mios_c_send_range.html">CODE</a></span></td>
    <td><span class="NORM">Escala de valores de pote</span></td>
  </tr>

  <tr>
    <td width="30"><span class="BIG"><a href="mios_c_send_ain_takeover.html">CODE</a></span></td>
    <td><span class="NORM">Realizaci&oacute;n de funci&oacute;n Toque-suave para potes</span></td>
  </tr>

  <tr>
    <td width="30"><span class="BIG"><a href="mios_c_send_din.html">CODE</a></span></td>
    <td><span class="NORM">env&iacute;o de eventos MIDI de movimientos de boton</span></td>
  </tr>

  <tr>
    <td width="30"><span class="BIG"><a href="mios_c_set_dout.html">CODE</a></span></td>
    <td><span class="NORM">Control de 128 LEDs via MIDI</span></td>
  </tr>

  <tr>
    <td width="30"><span class="BIG"><a href="mios_c_send_enc_rel.html">CODE</a></span></td>
    <td><span class="NORM">Env&iacute;o de eventos relativos&nbsp;MIDI de movimiento de rotary encoders</span></td>
  </tr>

  <tr>
    <td width="30"><span class="BIG"><a href="mios_c_send_enc_abs7.html">CODE</a></span></td>
    <td><span class="NORM">Env&iacute;o de eventos MIDI de 7bit de movimiento de rotary encoders</span></td>
  </tr>

  <tr>
    <td width="30"><span class="BIG"><a href="mios_c_send_enc_abs14.html">CODE</a></span></td>
    <td><span class="NORM">Env&iacute;o de eventos NRPN de 14bit de movimientos de rotary encoder&nbsp;</span></td>
  </tr>

  <tr>
    <td width="30"><span class="BIG"><a href="mios_c_handle_mf.html">CODE</a></span></td>
    <td><span class="NORM">Un Manejo simple para motorfaders</span></td>
  </tr>

  <tr>
    <td width="30"><span class="BIG"><a href="mios_c_filter_cc.html">CODE</a></span></td>
    <td><span class="NORM">Filtrado de todos los eventos MIDI excepto&nbsp;Bn 07 xx (Controladores de Volumen)</span></td>
  </tr>

  <tr>
    <td width="30"><span class="BIG"><a href="mios_c_forward_chn1.html">CODE</a></span></td>
    <td><span class="NORM">S&oacute;lo eventos de avance del Channel #1</span></td>
  </tr>

  <tr>
    <td width="30"><span class="BIG"><a href="mios_c_cc_to_nrpn.html">CODE</a></span></td>
    <td><span class="NORM">Conversi&oacute;n de&nbsp; CC a NRPN</span></td>
  </tr>

  <tr>
    <td width="30"><span class="BIG"><a href="mios_c_nrpn_to_cc.html">CODE</a></span></td>
    <td><span class="NORM">Conversi&oacute;n de NRPN a CC</span></td>
  </tr>

  <tr>
    <td width="30"><span class="BIG"><a href="mios_c_pic_pin.html">CODE</a></span></td>
    <td><span class="NORM">Conduciendo los pins del PIC v&iacute;a MIDI</span></td>
  </tr>

  <tr>
    <td width="30"><span class="BIG"><a href="mios_c_lcd_out.html">CODE</a></span></td>
    <td><span class="NORM">Impresi&oacute;n de valores en una LCD&nbsp;</span></td>
  </tr>

  <tr>
    <td width="30"><span class="BIG"><a href="mios_c_lcd_schars.html">CODE</a></span></td>
    <td><span class="NORM">Uso de caracteres especiales en una LCD</span></td>
  </tr>

</tbody></table>

FOOTER