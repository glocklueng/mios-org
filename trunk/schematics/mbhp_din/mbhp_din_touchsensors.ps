%!PS-Adobe-3.0
%%Title: mbhp_din_touchsensors
%%Creator: Xcircuit v2.1
%%CreationDate: Wed Nov 20 21:16:16 2002
%%Pages: 1
%%BoundingBox: 69 80 543 712
%%DocumentNeededResources: font Helvetica font Times-Roman font Courier 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.1
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/20/00  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.1 4
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/CR { 0 /Bline Bline fscale0 neg add def Bline moveto } def
/Kn { 2 copy kY add /kY exch def kX add /kX exch def rmoveto } bind def
/bs { stW 0 Kn } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { /fscale exch def xfont findfont fscale scalefont setfont
	/kX 0 def /kY 0 def} def
/cf { dup type /realtype eq {40 mul /fscale0 exch def } if /xfont exch def
	fscale0 cf0 } def
/ss { 0.67 fscale mul cf0 0 fscale 0.5 mul neg Kn } def
/Ss { 0.67 fscale mul cf0 0 fscale 0.5 mul Kn } def
/ns { kX neg kY neg Kn fscale0 cf0 } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto rotate /just exch def just 16 and 0 gt
	{0 1 dtransform gsave pagemat setmatrix idtransform exch grestore
	1 0 dtransform gsave pagemat setmatrix idtransform exch grestore
	dup 0 eq {pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse
	{-1 /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse exch 0 lt
	{-1 /just just dup 12 and 4 ne {12 xor} if def} {1} ifelse scale }
	if /showflag 0 def /fspc pspc def /Bline 0 def gsave dup 1 add copy
	0 exch {exch dup type /stringtype eq {true charpath flattenpath}
	{exec} ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll
	just 1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub	
	0.5 mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch
	just 4 and 0 gt {just 8 and 0 gt {exch pop neg fspc sub}
	{add 0.5 mul neg} ifelse} {pop neg fspc add} ifelse
	/showflag 1 def Kn currentpoint translate /Bline 0 def
	{dup type /stringtype eq {show}{exec} ifelse} repeat grestore } def
/pinlabel { hlevel 0 eq { /pspc 20 def label /pspc 0 def }
	{ pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto dup 0 lt
	{neg 1 sub -1 1 scale} if rotate dup scale } bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/insertion {/PSobj save def /showpage {} def bop translate} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/_resistor {
% -14 -64 28 128 bbox
begingate
% fundamental
1  1.00 0 64 0 36 2 polygon
1  1.00 0 -64 0 -36 2 polygon
1  1.00 0 -36 14 -30 -14 -18 14 -6 -14 6 14 18 -14 30 0 36 8 polygon
1.000 0.000 0.000 scb
(r.1) {/Times-Roman 1.000 cf} 2 9 0 0 64 pinlabel
(r.2) {/Times-Roman 1.000 cf} 2 13 0 0 -64 pinlabel
sce
(spice:R%i %pr.1 %pr.2 1.0K) {/Times-Roman 1.000 cf} 2 0 0 -208 -160 infolabel
sce
(sim:r %pr.1 %pr.2) {/Times-Roman 1.000 cf} 2 0 0 -208 -208 infolabel
endgate
} def

/dot {
% -10 -10 20 20 bbox
begingate
248  1.00 0 0 6 0.00 360.00 xcarc
endgate
} def

%%Page: 1 1
%%PageOrientation: Landscape
/pgsave save def bop
% 1450 1191 offsets
90 rotate 10 -621 translate
0.9500 inchscale
2.6000 setlinewidth

(MIDIbox Hardware Platform) {/Helvetica 0.750 cf} 2 20 0 1514 391 label
0  3.00 1482 423 1482 247 1962 247 1962 423 4 polygon
(\(C\) T. Klose 2002-11-20) {/Helvetica 0.750 cf} 2 20 0 1514 295 label
0.000 0.000 1.000 scb
(How to connect touchsensors) {/Helvetica 0.750 cf} 2 20 0 1514 343 label
0.906 0.890 0.906 scb
240  1.00 522 1191 522 535 1642 535 1642 1191 4 polygon
sce
1  1.00 1002 615 11 0.00 360.00 xcarc
1  1.00 1066 615 11 0.00 360.00 xcarc
1  1.00 1130 615 11 0.00 360.00 xcarc
1  1.00 1194 615 11 0.00 360.00 xcarc
0  2.00 970 647 970 583 1290 583 1290 647 4 polygon
0.000 0.000 1.000 scb
(D0) {/Courier 0.500 cf} 2 23 0 1002 599 label
(D3) {/Courier 0.500 cf} 2 23 0 1194 599 label
(D1) {/Courier 0.500 cf} 2 23 0 1066 599 label
(D2) {/Courier 0.500 cf} 2 23 0 1130 599 label
sce
1  1.00 1258 615 11 0.00 360.00 xcarc
0.000 0.000 1.000 scb
(Vs) {/Courier 0.500 cf} 2 23 0 1258 599 label
1.000 0.000 0.000 scb
1  1.00 1002 567 1002 615 2 polygon
1  1.00 1066 567 1066 615 2 polygon
1  1.00 1130 567 1130 615 2 polygon
1  1.00 1194 567 1194 615 2 polygon
sce
1  1.00 938 1095 11 0.00 360.00 xcarc
1  1.00 1002 1095 11 0.00 360.00 xcarc
1  1.00 1066 1095 11 0.00 360.00 xcarc
1  1.00 1130 1095 11 0.00 360.00 xcarc
0  2.00 906 1127 906 1063 1226 1063 1226 1127 4 polygon
0.000 0.000 1.000 scb
(Vs) {/Courier 0.500 cf} 2 23 0 938 1079 label
(D5) {/Courier 0.500 cf} 2 23 0 1130 1079 label
(D7) {/Courier 0.500 cf} 2 23 0 1002 1079 label
(D6) {/Courier 0.500 cf} 2 23 0 1066 1079 label
sce
1  1.00 1194 1095 11 0.00 360.00 xcarc
0.000 0.000 1.000 scb
(D4) {/Courier 0.500 cf} 2 23 0 1194 1079 label
1.000 0.000 0.000 scb
1  2.00 1002 1447 1002 1095 2 polygon
1  2.00 1066 1447 1066 1095 2 polygon
1  2.00 1130 1447 1130 1095 2 polygon
1  2.00 1194 1447 1194 1095 2 polygon
sce
(DINXx) {/Courier 2.000 cf} 2 21 0 1090 855 label
0.612 0.125 0.937 scb
(!!! Important !!!) {/Helvetica 1.000 cf} 2 16 0 666 1015 label
(Don't mount the 10k pull-up resistors) {/Helvetica 1.000 cf} 2 16 0 666 967 label
(when using an input for a capacitive touch sensor!) {/Helvetica 1.000 cf} 2 16 0 
666 919 label
1.000 0.000 0.000 scb
1.00 270 922 1271 _resistor
1.00 270 922 1319 _resistor
1.00 270 922 1367 _resistor
1.00 270 922 1415 _resistor
1  2.00 986 1415 1194 1415 2 polygon
1  2.00 986 1367 1130 1367 2 polygon
1  2.00 986 1319 1066 1319 2 polygon
1  2.00 986 1271 1002 1271 2 polygon
1.00 0 1194 1415 dot
1.00 0 1130 1367 dot
1.00 0 1066 1319 dot
1.00 0 1002 1271 dot
1  2.00 858 1415 826 1415 826 1271 858 1271 4 polygon
1  2.00 858 1319 826 1319 2 polygon
1  2.00 858 1367 826 1367 2 polygon
1.00 0 826 1319 dot
1.00 0 826 1367 dot
1.000 0.000 1.000 scb
241  2.00 1002 1463 16 0.00 360.00 xcarc
241  2.00 1066 1463 16 0.00 360.00 xcarc
241  2.00 1130 1463 16 0.00 360.00 xcarc
241  2.00 1194 1463 16 0.00 360.00 xcarc
1.000 0.000 0.000 scb
(4*47k) {/Courier 0.750 cf} 2 21 0 906 1455 label
1.000 0.000 1.000 scb
(Touch sensors \(i.e. of motorfaders or just cheap thumbtacks :-\)) 
{/Helvetica 1.000 cf} 2 16 0 602 1511 label
sce
1  1.00 234 1367 11 0.00 360.00 xcarc
0  2.00 202 1399 202 1335 266 1335 266 1399 4 polygon
(J14 of) {/Courier 0.750 cf} 2 20 0 242 1303 label
(Core Module) {/Courier 0.750 cf} 2 20 0 242 1271 label
1.000 0.000 0.000 scb
1  2.00 234 1367 826 1367 2 polygon
1  2.00 1002 615 1002 263 2 polygon
1  2.00 1066 615 1066 263 2 polygon
1  2.00 1130 615 1130 263 2 polygon
1  2.00 1194 615 1194 263 2 polygon
1  2.00 986 439 1194 439 2 polygon
1  2.00 986 391 1130 391 2 polygon
1  2.00 986 343 1066 343 2 polygon
1  2.00 986 295 1002 295 2 polygon
1.00 0 1194 439 dot
1.00 0 1130 391 dot
1.00 0 1066 343 dot
1.00 0 1002 295 dot
1.000 0.000 1.000 scb
241  2.00 1002 247 16 0.00 360.00 xcarc
241  2.00 1066 247 16 0.00 360.00 xcarc
241  2.00 1130 247 16 0.00 360.00 xcarc
241  2.00 1194 247 16 0.00 360.00 xcarc
1.000 0.000 0.000 scb
1.00 270 922 295 _resistor
1.00 270 922 343 _resistor
1.00 270 922 391 _resistor
1.00 270 922 439 _resistor
1  2.00 858 439 826 439 826 295 858 295 4 polygon
1  2.00 858 343 826 343 2 polygon
1  2.00 858 391 826 391 2 polygon
1.00 0 826 343 dot
1.00 0 826 391 dot
(4*47k) {/Courier 0.750 cf} 2 21 0 906 479 label
1  2.00 474 391 826 391 2 polygon
1  2.00 474 391 474 1367 2 polygon
1.00 0 474 1367 dot
0.612 0.604 0.612 scb
242  2.00 1498 1127 1498 1063 1610 1063 1610 1127 4 polygon
242  2.00 1578 647 1578 583 1674 583 1674 647 4 polygon
242  2.00 506 1127 506 1063 586 1063 586 1127 4 polygon
242  2.00 570 647 570 583 666 583 666 647 4 polygon
0.000 0.000 0.000 scb
3  2.00 1610 791 1658 1015 1674 535 1610 1191 spline
3  2.00 506 791 554 1015 570 535 506 1191 spline
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
