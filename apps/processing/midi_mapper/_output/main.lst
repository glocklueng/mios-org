gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ;--------------------------------------------------------
               00002 ; File Created by SDCC : free open source ANSI-C Compiler
               00003 ; Version 2.7.0 #4818 (Jan 18 2008)
               00004 ; This file generated Wed Oct 29 12:45:28 2008
               00005 ;--------------------------------------------------------
               00006 ; PIC16 port for the Microchip 16-bit core micros
               00007 ;--------------------------------------------------------
               00008         list    p=18f452
               00009 
               00010         radix dec
               00011 
               00012 ;--------------------------------------------------------
               00013 ; public variables in this module
               00014 ;--------------------------------------------------------
               00015         global _preset_load
               00016         global _preset_store
               00017         global _inout_map_build
               00018         global _screen_print
               00019         global _current_screen_set
               00020         global _current_bus_set
               00021         global _current_preset_set
               00022         global _timed_function_start
               00023         global _timed_function_stop
               00024         global _led_flash_start
               00025         global _led_flash_set
               00026         global _current_screen_num
               00027         global _current_preset_num
               00028         global _current_bus_num
               00029         global _current_shift_state
               00030         global _timed_function
               00031         global _timer_ticks_count
               00032         global _led_flash_led
               00033         global _led_flash_count
               00034         global _led_flash_ticks
               00035         global _current_preset
               00036         global _midi_inout_map
               00037         global _Init
               00038         global _preset_init
               00039         global _Timer
               00040         global _Tick
               00041         global _DIN_NotifyToggle
               00042         global _MPROC_NotifyReceivedByte
               00043         global _MPROC_NotifyReceivedEvnt
               00044         global _DISPLAY_Init
               00045         global _DISPLAY_Tick
               00046         global _MPROC_NotifyFoundEvent
               00047         global _MPROC_NotifyTimeout
               00048         global _SR_Service_Prepare
               00049         global _SR_Service_Finish
               00050         global _ENC_NotifyChange
               00051         global _AIN_NotifyChange
               00052         global _int_bit_ormask
               00053 
               00054 ;--------------------------------------------------------
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00055 ; extern variables in this module
               00056 ;--------------------------------------------------------
               00057         extern _MIOS_BOX_CFG0
               00058         extern _MIOS_BOX_CFG1
               00059         extern _MIOS_BOX_STAT
               00060         extern _MIOS_PARAMETER1
               00061         extern _MIOS_PARAMETER2
               00062         extern _MIOS_PARAMETER3
               00063         extern _PORTAbits
               00064         extern _PORTBbits
               00065         extern _PORTCbits
               00066         extern _PORTDbits
               00067         extern _PORTEbits
               00068         extern _LATAbits
               00069         extern _LATBbits
               00070         extern _LATCbits
               00071         extern _LATDbits
               00072         extern _LATEbits
               00073         extern _TRISAbits
               00074         extern _TRISBbits
               00075         extern _TRISCbits
               00076         extern _TRISDbits
               00077         extern _TRISEbits
               00078         extern _PIE1bits
               00079         extern _PIR1bits
               00080         extern _IPR1bits
               00081         extern _PIE2bits
               00082         extern _PIR2bits
               00083         extern _IPR2bits
               00084         extern _EECON1bits
               00085         extern _RCSTAbits
               00086         extern _TXSTAbits
               00087         extern _T3CONbits
               00088         extern _CCP2CONbits
               00089         extern _CCP1CONbits
               00090         extern _ADCON1bits
               00091         extern _ADCON0bits
               00092         extern _SSPCON2bits
               00093         extern _SSPCON1bits
               00094         extern _SSPSTATbits
               00095         extern _T2CONbits
               00096         extern _T1CONbits
               00097         extern _RCONbits
               00098         extern _WDTCONbits
               00099         extern _LVDCONbits
               00100         extern _OSCCONbits
               00101         extern _T0CONbits
               00102         extern _STATUSbits
               00103         extern _INTCON3bits
               00104         extern _INTCON2bits
               00105         extern _INTCONbits
               00106         extern _STKPTRbits
               00107         extern _PORTA
               00108         extern _PORTB
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00109         extern _PORTC
               00110         extern _PORTD
               00111         extern _PORTE
               00112         extern _LATA
               00113         extern _LATB
               00114         extern _LATC
               00115         extern _LATD
               00116         extern _LATE
               00117         extern _TRISA
               00118         extern _TRISB
               00119         extern _TRISC
               00120         extern _TRISD
               00121         extern _TRISE
               00122         extern _PIE1
               00123         extern _PIR1
               00124         extern _IPR1
               00125         extern _PIE2
               00126         extern _PIR2
               00127         extern _IPR2
               00128         extern _EECON1
               00129         extern _EECON2
               00130         extern _EEDATA
               00131         extern _EEADR
               00132         extern _RCSTA
               00133         extern _TXSTA
               00134         extern _TXREG
               00135         extern _RCREG
               00136         extern _SPBRG
               00137         extern _T3CON
               00138         extern _TMR3L
               00139         extern _TMR3H
               00140         extern _CCP2CON
               00141         extern _CCPR2L
               00142         extern _CCPR2H
               00143         extern _CCP1CON
               00144         extern _CCPR1L
               00145         extern _CCPR1H
               00146         extern _ADCON1
               00147         extern _ADCON0
               00148         extern _ADRESL
               00149         extern _ADRESH
               00150         extern _SSPCON2
               00151         extern _SSPCON1
               00152         extern _SSPSTAT
               00153         extern _SSPADD
               00154         extern _SSPBUF
               00155         extern _T2CON
               00156         extern _PR2
               00157         extern _TMR2
               00158         extern _T1CON
               00159         extern _TMR1L
               00160         extern _TMR1H
               00161         extern _RCON
               00162         extern _WDTCON
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00163         extern _LVDCON
               00164         extern _OSCCON
               00165         extern _T0CON
               00166         extern _TMR0L
               00167         extern _TMR0H
               00168         extern _STATUS
               00169         extern _FSR2L
               00170         extern _FSR2H
               00171         extern _PLUSW2
               00172         extern _PREINC2
               00173         extern _POSTDEC2
               00174         extern _POSTINC2
               00175         extern _INDF2
               00176         extern _BSR
               00177         extern _FSR1L
               00178         extern _FSR1H
               00179         extern _PLUSW1
               00180         extern _PREINC1
               00181         extern _POSTDEC1
               00182         extern _POSTINC1
               00183         extern _INDF1
               00184         extern _WREG
               00185         extern _FSR0L
               00186         extern _FSR0H
               00187         extern _PLUSW0
               00188         extern _PREINC0
               00189         extern _POSTDEC0
               00190         extern _POSTINC0
               00191         extern _INDF0
               00192         extern _INTCON3
               00193         extern _INTCON2
               00194         extern _INTCON
               00195         extern _PRODL
               00196         extern _PRODH
               00197         extern _TABLAT
               00198         extern _TBLPTRL
               00199         extern _TBLPTRH
               00200         extern _TBLPTRU
               00201         extern _PCL
               00202         extern _PCLATH
               00203         extern _PCLATU
               00204         extern _STKPTR
               00205         extern _TOSL
               00206         extern _TOSH
               00207         extern _TOSU
               00208         extern _MIOS_MIDI_TxBufferPut
               00209         extern _MIOS_DOUT_PinSet
               00210         extern _MIOS_DOUT_SRSet
               00211         extern _MIOS_SRIO_NumberSet
               00212         extern _MIOS_SRIO_UpdateFrqSet
               00213         extern _MIOS_SRIO_DebounceSet
               00214         extern _MIOS_EEPROM_Read
               00215         extern _MIOS_EEPROM_Write
               00216         extern _MIOS_BANKSTICK_CtrlSet
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00217         extern _MIOS_BANKSTICK_WritePage
               00218         extern _MIOS_BANKSTICK_ReadPage
               00219         extern _MIOS_TIMER_Init
               00220         extern _MIOS_TIMER_Stop
               00221         extern _MIOS_HLP_GetBitORMask
               00222         extern _mios_enc_pin_table
               00223         extern _mios_mproc_event_table
               00224         extern _MIOS_MPROC_EVENT_TABLE
               00225         extern _MIOS_ENC_PIN_TABLE
               00226 ;--------------------------------------------------------
               00227 ;       Equates to used internal registers
               00228 ;--------------------------------------------------------
  00000FD8     00229 STATUS  equ     0xfd8
  00000FF9     00230 PCL     equ     0xff9
  00000FFA     00231 PCLATH  equ     0xffa
  00000FFB     00232 PCLATU  equ     0xffb
  00000FE8     00233 WREG    equ     0xfe8
  00000FF6     00234 TBLPTRL equ     0xff6
  00000FF7     00235 TBLPTRH equ     0xff7
  00000FF8     00236 TBLPTRU equ     0xff8
  00000FF5     00237 TABLAT  equ     0xff5
  00000FE1     00238 FSR0L equ 0xfe1 ;; normaly 0xfe9, changed by mios-gpasm
  00000FE2     00239 FSR0H equ 0xfe2 ;; normaly 0xfea, changed by mios-gpasm
  00000FE9     00240 FSR1L equ 0xfe9 ;; normaly 0xfe1, changed by mios-gpasm
  00000FD9     00241 FSR2L   equ     0xfd9
  00000FE7     00242 INDF0 equ 0xfe7 ;; normaly 0xfef, changed by mios-gpasm
  00000FE6     00243 POSTINC0 equ 0xfe6 ;; normaly 0xfee, changed by mios-gpasm
  00000FED     00244 POSTDEC1 equ 0xfed ;; normaly 0xfe5, changed by mios-gpasm
  00000FEC     00245 PREINC1 equ 0xfec ;; normaly 0xfe4, changed by mios-gpasm
  00000FDB     00246 PLUSW2  equ     0xfdb
  00000FF3     00247 PRODL   equ     0xff3
  00000FF4     00248 PRODH   equ     0xff4
               00249 
               00250 
               00251         idata
               00252 _current_screen_num     db      0x00
               00253 _current_preset_num     db      0x00
               00254 _current_bus_num        db      0x00
               00255 _current_shift_state    db      0x00
               00256 _timed_function db      0x00
               00257 _timer_ticks_count      db      0x00, 0x00
               00258 _led_flash_led  db      0x00
               00259 _led_flash_count        db      0x00
               00260 _led_flash_ticks        db      0x00
               00261 _MPROC_NotifyReceivedByte_fx_status_1_1 db      0x00
               00262 
               00263 
               00264 ; Internal registers
               00265 .registers udata_ovr 0x0010 ;; normaly 0x0000, changed by mios-gpasm
               00266 r0x00   res     1
               00267 r0x01   res     1
               00268 r0x02   res     1
               00269 r0x03   res     1
               00270 r0x04   res     1
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00271 r0x05   res     1
               00272 r0x06   res     1
               00273 r0x07   res     1
               00274 r0x08   res     1
               00275 r0x09   res     1
               00276 r0x0a   res     1
               00277 r0x0b   res     1
               00278 r0x0c   res     1
               00279 r0x0d   res     1
               00280 r0x0e   res     1
               00281 r0x0f   res     1
               00282 r0x10   res     1
               00283 r0x11   res     1
               00284 
               00285 udata_main_0    udata
               00286 _current_preset res     64
               00287 
               00288 udata_main_1    udata
               00289 _midi_inout_map res     256
               00290 
               00291 udata_main_2    udata
               00292 _inout_map_build_outputs_1_1    res     32
               00293 
               00294 ;--------------------------------------------------------
               00295 ; global & static initialisations
               00296 ;--------------------------------------------------------
               00297 ; I code from now on!
               00298 ; ; Starting pCode block
               00299 S_main__AIN_NotifyChange        code
0000           00300 _AIN_NotifyChange:
               00301 ;       .line   409; main.c     void AIN_NotifyChange(unsigned char pin, unsigned int pin_value) __wparam{
0000 CFD9 FFED 00302         MOVFF   FSR2L, POSTDEC1
0004 CFE9 FFD9 00303         MOVFF   FSR1L, FSR2L
               00304 ;       .line   410; main.c     }
0008 CFEC FFD9 00305         MOVFF   PREINC1, FSR2L
000C 0012      00306         RETURN  
               00307 
               00308 ; ; Starting pCode block
               00309 S_main__ENC_NotifyChange        code
0000           00310 _ENC_NotifyChange:
               00311 ;       .line   406; main.c     void ENC_NotifyChange(unsigned char encoder, char incrementer) __wparam{
0000 CFD9 FFED 00312         MOVFF   FSR2L, POSTDEC1
0004 CFE9 FFD9 00313         MOVFF   FSR1L, FSR2L
               00314 ;       .line   407; main.c     }
0008 CFEC FFD9 00315         MOVFF   PREINC1, FSR2L
000C 0012      00316         RETURN  
               00317 
               00318 ; ; Starting pCode block
               00319 S_main__SR_Service_Finish       code
0000           00320 _SR_Service_Finish:
               00321 ;       .line   404; main.c     }
0000 0012      00322         RETURN  
               00323 
               00324 ; ; Starting pCode block
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00325 S_main__SR_Service_Prepare      code
0000           00326 _SR_Service_Prepare:
               00327 ;       .line   401; main.c     }
0000 0012      00328         RETURN  
               00329 
               00330 ; ; Starting pCode block
               00331 S_main__MPROC_NotifyTimeout     code
0000           00332 _MPROC_NotifyTimeout:
               00333 ;       .line   398; main.c     }
0000 0012      00334         RETURN  
               00335 
               00336 ; ; Starting pCode block
               00337 S_main__MPROC_NotifyFoundEvent  code
0000           00338 _MPROC_NotifyFoundEvent:
               00339 ;       .line   394; main.c     void MPROC_NotifyFoundEvent(unsigned entry, unsigned char evnt0, unsigned char evnt1, unsigned char evnt2) __wparam{
0000 CFD9 FFED 00340         MOVFF   FSR2L, POSTDEC1
0004 CFE9 FFD9 00341         MOVFF   FSR1L, FSR2L
               00342 ;       .line   395; main.c     }
0008 CFEC FFD9 00343         MOVFF   PREINC1, FSR2L
000C 0012      00344         RETURN  
               00345 
               00346 ; ; Starting pCode block
               00347 S_main__DISPLAY_Tick    code
0000           00348 _DISPLAY_Tick:
               00349 ;       .line   392; main.c     }
0000 0012      00350         RETURN  
               00351 
               00352 ; ; Starting pCode block
               00353 S_main__DISPLAY_Init    code
0000           00354 _DISPLAY_Init:
               00355 ;       .line   389; main.c     }
0000 0012      00356         RETURN  
               00357 
               00358 ; ; Starting pCode block
               00359 S_main__MPROC_NotifyReceivedEvnt        code
0000           00360 _MPROC_NotifyReceivedEvnt:
               00361 ;       .line   370; main.c     void MPROC_NotifyReceivedEvnt(unsigned char evnt0, unsigned char evnt1, unsigned char evnt2) __wparam{
0000 CFD9 FFED 00362         MOVFF   FSR2L, POSTDEC1
0004 CFE9 FFD9 00363         MOVFF   FSR1L, FSR2L
0008 C000 FFED 00364         MOVFF   r0x00, POSTDEC1
000C C000 FFED 00365         MOVFF   r0x01, POSTDEC1
0010 C000 FFED 00366         MOVFF   r0x02, POSTDEC1
0014 C000 FFED 00367         MOVFF   r0x03, POSTDEC1
0018 C000 FFED 00368         MOVFF   r0x04, POSTDEC1
001C C000 FFED 00369         MOVFF   r0x05, POSTDEC1
0020 C000 FFED 00370         MOVFF   r0x06, POSTDEC1
0024 C000 FFED 00371         MOVFF   r0x07, POSTDEC1
0028 6E00      00372         MOVWF   r0x00
002A 0E02      00373         MOVLW   0x02
002C CFDB F000 00374         MOVFF   PLUSW2, r0x01
0030 0E03      00375         MOVLW   0x03
0032 CFDB F000 00376         MOVFF   PLUSW2, r0x02
               00377 ;       .line   372; main.c     unsigned char evnt_type = evnt0 & 0xf0;
0036 0EF0      00378         MOVLW   0xf0
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0038 1400      00379         ANDWF   r0x00, W
003A 6E00      00380         MOVWF   r0x03
               00381 ;       .line   373; main.c     unsigned char in_chn = evnt0 & 0x0f;
003C 0E0F      00382         MOVLW   0x0f
003E 1600      00383         ANDWF   r0x00, F
               00384 ;       .line   374; main.c     unsigned char evnt2_send = !(evnt_type == 0xc0 || evnt_type == 0xd0);
0040 5000      00385         MOVF    r0x03, W
0042 0AC0      00386         XORLW   0xc0
0044 E000      00387         BZ      _00407_DS_
0046 5000      00388         MOVF    r0x03, W
0048 0AD0      00389         XORLW   0xd0
004A E000      00390         BZ      _00407_DS_
004C 6A00      00391         CLRF    r0x04
004E D000      00392         BRA     _00408_DS_
0050           00393 _00407_DS_:
0050 0E01      00394         MOVLW   0x01
0052 6E00      00395         MOVWF   r0x04
0054           00396 _00408_DS_:
0054 5000      00397         MOVF    r0x04, W
0056 80D8      00398         BSF     STATUS, 0
0058 66E8      00399         TSTFSZ  WREG
005A 90D8      00400         BCF     STATUS, 0
005C 6A00      00401         CLRF    r0x04
005E 3600      00402         RLCF    r0x04, F
               00403 ;       .line   375; main.c     for(i=0;i<16 && midi_inout_map[in_chn][i]!=-1;i++){
0060 6A00      00404         CLRF    r0x05
0062           00405 _00400_DS_:
0062 0E10      00406         MOVLW   0x10
0064 5C00      00407         SUBWF   r0x05, W
0066 E200      00408         BC      _00404_DS_
               00409 ; ;multiply lit val:0x10 by variable r0x00 and store in r0x06
               00410 ; ;Unrolled 8 X 8 multiplication
               00411 ; ;FIXME: the function does not support result==WREG
0068 5000      00412         MOVF    r0x00, W
006A 0D10      00413         MULLW   0x10
006C CFF3 F000 00414         MOVFF   PRODL, r0x06
0070 CFF4 F000 00415         MOVFF   PRODH, r0x07
0074 0E00      00416         MOVLW   LOW(_midi_inout_map)
0076 2600      00417         ADDWF   r0x06, F
0078 0E00      00418         MOVLW   HIGH(_midi_inout_map)
007A 2200      00419         ADDWFC  r0x07, F
007C 5000      00420         MOVF    r0x05, W
007E 2600      00421         ADDWF   r0x06, F
0080 6AE8      00422         CLRF    WREG
0082 2200      00423         ADDWFC  r0x07, F
0084 C000 FFE1 00424         MOVFF   r0x06, FSR0L
0088 C000 FFE2 00425         MOVFF   r0x07, FSR0H
008C CFE7 F000 00426         MOVFF   INDF0, r0x06
0090 5000      00427         MOVF    r0x06, W
0092 0AFF      00428         XORLW   0xff
0094 E000      00429         BZ      _00404_DS_
               00430 ;       .line   376; main.c     MIOS_MIDI_TxBufferPut(evnt_type+midi_inout_map[in_chn][i]);
0096 5000      00431         MOVF    r0x03, W
0098 2600      00432         ADDWF   r0x06, F
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
009A 5000      00433         MOVF    r0x06, W
009C EC00 F000 00434         CALL    _MIOS_MIDI_TxBufferPut
               00435 ;       .line   377; main.c     MIOS_MIDI_TxBufferPut(evnt1);
00A0 5000      00436         MOVF    r0x01, W
00A2 EC00 F000 00437         CALL    _MIOS_MIDI_TxBufferPut
               00438 ;       .line   378; main.c     if(evnt2_send)
00A6 5000      00439         MOVF    r0x04, W
00A8 E000      00440         BZ      _00402_DS_
               00441 ;       .line   379; main.c     MIOS_MIDI_TxBufferPut(evnt2);
00AA 5000      00442         MOVF    r0x02, W
00AC EC00 F000 00443         CALL    _MIOS_MIDI_TxBufferPut
00B0           00444 _00402_DS_:
               00445 ;       .line   375; main.c     for(i=0;i<16 && midi_inout_map[in_chn][i]!=-1;i++){
00B0 2A00      00446         INCF    r0x05, F
00B2 D000      00447         BRA     _00400_DS_
00B4           00448 _00404_DS_:
00B4 CFEC F000 00449         MOVFF   PREINC1, r0x07
00B8 CFEC F000 00450         MOVFF   PREINC1, r0x06
00BC CFEC F000 00451         MOVFF   PREINC1, r0x05
00C0 CFEC F000 00452         MOVFF   PREINC1, r0x04
00C4 CFEC F000 00453         MOVFF   PREINC1, r0x03
00C8 CFEC F000 00454         MOVFF   PREINC1, r0x02
00CC CFEC F000 00455         MOVFF   PREINC1, r0x01
00D0 CFEC F000 00456         MOVFF   PREINC1, r0x00
00D4 CFEC FFD9 00457         MOVFF   PREINC1, FSR2L
00D8 0012      00458         RETURN  
               00459 
               00460 ; ; Starting pCode block
               00461 S_main__MPROC_NotifyReceivedByte        code
0000           00462 _MPROC_NotifyReceivedByte:
               00463 ;       .line   342; main.c     void MPROC_NotifyReceivedByte(unsigned char byte) __wparam{
0000 CFD9 FFED 00464         MOVFF   FSR2L, POSTDEC1
0004 CFE9 FFD9 00465         MOVFF   FSR1L, FSR2L
0008 C000 FFED 00466         MOVFF   r0x00, POSTDEC1
000C C000 FFED 00467         MOVFF   r0x01, POSTDEC1
0010 6E00      00468         MOVWF   r0x00
               00469 ;       .line   344; main.c     if(byte >= 0xf0){//system status byte
0012 0EF0      00470         MOVLW   0xf0
0014 5C00      00471         SUBWF   r0x00, W
0016 70D8      00472         BTG     STATUS, 0
0018 6A00      00473         CLRF    r0x01
001A 3600      00474         RLCF    r0x01, F
001C 5000      00475         MOVF    r0x01, W
001E A4D8      00476         BTFSS   STATUS, 2
0020 D000      00477         BRA     _00379_DS_
               00478 ;       .line   345; main.c     MIOS_MIDI_TxBufferPut(byte);
0022 5000      00479         MOVF    r0x00, W
0024 EC00 F000 00480         CALL    _MIOS_MIDI_TxBufferPut
               00481 ;       .line   347; main.c     switch(byte){
0028 5000      00482         MOVF    r0x01, W
002A E100      00483         BNZ     _00372_DS_
002C 0EF4      00484         MOVLW   0xf4
002E 5C00      00485         SUBWF   r0x00, W
0030 E200      00486         BC      _00372_DS_
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0032 0E10      00487         MOVLW   0x10
0034 2400      00488         ADDWF   r0x00, W
0036 6E00      00489         MOVWF   r0x01
0038 C000 FFED 00490         MOVFF   r0x02, POSTDEC1
003C C000 FFED 00491         MOVFF   r0x03, POSTDEC1
0040 6A00      00492         CLRF    r0x03
0042 3400      00493         RLCF    r0x01, W
0044 3600      00494         RLCF    r0x03, F
0046 34E8      00495         RLCF    WREG, W
0048 3600      00496         RLCF    r0x03, F
004A 0BFC      00497         ANDLW   0xfc
004C 6E00      00498         MOVWF   r0x02
004E 0E00      00499         MOVLW   UPPER(_00391_DS_)
0050 6EFB      00500         MOVWF   PCLATU
0052 0E00      00501         MOVLW   HIGH(_00391_DS_)
0054 6EFA      00502         MOVWF   PCLATH
0056 0E00      00503         MOVLW   LOW(_00391_DS_)
0058 2600      00504         ADDWF   r0x02, F
005A 5000      00505         MOVF    r0x03, W
005C 22FA      00506         ADDWFC  PCLATH, F
005E B0D8      00507         BTFSC   STATUS, 0
0060 2AFB      00508         INCF    PCLATU, F
0062 5000      00509         MOVF    r0x02, W
0064 CFEC F000 00510         MOVFF   PREINC1, r0x03
0068 CFEC F000 00511         MOVFF   PREINC1, r0x02
006C 6EF9      00512         MOVWF   PCL
006E           00513 _00391_DS_:
006E EF00 F000 00514         GOTO    _00371_DS_
0072 EF00 F000 00515         GOTO    _00369_DS_
0076 EF00 F000 00516         GOTO    _00370_DS_
007A EF00 F000 00517         GOTO    _00369_DS_
007E           00518 _00369_DS_:
               00519 ;       .line   350; main.c     fx_status = 1;
007E 0E01      00520         MOVLW   0x01
0080 0000      00521         BANKSEL _MPROC_NotifyReceivedByte_fx_status_1_1
0082 6F00      00522         MOVWF   _MPROC_NotifyReceivedByte_fx_status_1_1, B
               00523 ;       .line   351; main.c     break;  
0084 D000      00524         BRA     _00381_DS_
0086           00525 _00370_DS_:
               00526 ;       .line   353; main.c     fx_status = 2;                          
0086 0E02      00527         MOVLW   0x02
0088 0000      00528         BANKSEL _MPROC_NotifyReceivedByte_fx_status_1_1
008A 6F00      00529         MOVWF   _MPROC_NotifyReceivedByte_fx_status_1_1, B
               00530 ;       .line   354; main.c     break;
008C D000      00531         BRA     _00381_DS_
008E           00532 _00371_DS_:
               00533 ;       .line   356; main.c     fx_status = 0xff;
008E 0EFF      00534         MOVLW   0xff
0090 0000      00535         BANKSEL _MPROC_NotifyReceivedByte_fx_status_1_1
0092 6F00      00536         MOVWF   _MPROC_NotifyReceivedByte_fx_status_1_1, B
               00537 ;       .line   357; main.c     break;
0094 D000      00538         BRA     _00381_DS_
0096           00539 _00372_DS_:
0096 0000      00540         BANKSEL _MPROC_NotifyReceivedByte_fx_status_1_1
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00541 ;       .line   359; main.c     fx_status = 0;
0098 6B00      00542         CLRF    _MPROC_NotifyReceivedByte_fx_status_1_1, B
               00543 ;       .line   360; main.c     }   
009A D000      00544         BRA     _00381_DS_
009C           00545 _00379_DS_:
009C 0000      00546         BANKSEL _MPROC_NotifyReceivedByte_fx_status_1_1
               00547 ;       .line   362; main.c     else if(fx_status){
009E 5100      00548         MOVF    _MPROC_NotifyReceivedByte_fx_status_1_1, W, B
00A0 E000      00549         BZ      _00381_DS_
               00550 ;       .line   363; main.c     MIOS_MIDI_TxBufferPut(byte);
00A2 5000      00551         MOVF    r0x00, W
00A4 EC00 F000 00552         CALL    _MIOS_MIDI_TxBufferPut
00A8 0000      00553         BANKSEL _MPROC_NotifyReceivedByte_fx_status_1_1
               00554 ;       .line   364; main.c     if(fx_status!=0xff)
00AA 5100      00555         MOVF    _MPROC_NotifyReceivedByte_fx_status_1_1, W, B
00AC 0AFF      00556         XORLW   0xff
00AE E000      00557         BZ      _00381_DS_
00B0           00558 _00393_DS_:
00B0 0000      00559         BANKSEL _MPROC_NotifyReceivedByte_fx_status_1_1
               00560 ;       .line   365; main.c     fx_status--;
00B2 0700      00561         DECF    _MPROC_NotifyReceivedByte_fx_status_1_1, F, B
00B4           00562 _00381_DS_:
00B4 CFEC F000 00563         MOVFF   PREINC1, r0x01
00B8 CFEC F000 00564         MOVFF   PREINC1, r0x00
00BC CFEC FFD9 00565         MOVFF   PREINC1, FSR2L
00C0 0012      00566         RETURN  
               00567 
               00568 ; ; Starting pCode block
               00569 S_main__DIN_NotifyToggle        code
0000           00570 _DIN_NotifyToggle:
               00571 ;       .line   273; main.c     void DIN_NotifyToggle(unsigned char pin, unsigned char pin_value) __wparam{
0000 CFD9 FFED 00572         MOVFF   FSR2L, POSTDEC1
0004 CFE9 FFD9 00573         MOVFF   FSR1L, FSR2L
0008 C000 FFED 00574         MOVFF   r0x00, POSTDEC1
000C C000 FFED 00575         MOVFF   r0x01, POSTDEC1
0010 C000 FFED 00576         MOVFF   r0x02, POSTDEC1
0014 C000 FFED 00577         MOVFF   r0x03, POSTDEC1
0018 C000 FFED 00578         MOVFF   r0x04, POSTDEC1
001C C000 FFED 00579         MOVFF   r0x05, POSTDEC1
0020 C000 FFED 00580         MOVFF   r0x06, POSTDEC1
0024 C000 FFED 00581         MOVFF   r0x07, POSTDEC1
0028 C000 FFED 00582         MOVFF   r0x08, POSTDEC1
002C C000 FFED 00583         MOVFF   r0x09, POSTDEC1
0030 C000 FFED 00584         MOVFF   r0x0a, POSTDEC1
0034 6E00      00585         MOVWF   r0x00
0036 0E02      00586         MOVLW   0x02
0038 CFDB F000 00587         MOVFF   PLUSW2, r0x01
003C 0000      00588         BANKSEL _timed_function
               00589 ;       .line   275; main.c     if(timed_function==1)
003E 5100      00590         MOVF    _timed_function, W, B
0040 0A01      00591         XORLW   0x01
0042 E100      00592         BNZ     _00297_DS_
               00593 ;       .line   276; main.c     timed_function_stop();//stop clear request on every button change
0044 EC00 F000 00594         CALL    _timed_function_stop
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0048 D000      00595         BRA     _00298_DS_
004A           00596 _00297_DS_:
004A 0000      00597         BANKSEL _timed_function
               00598 ;       .line   277; main.c     else if(timed_function==2 && !pin_value)
004C 5100      00599         MOVF    _timed_function, W, B
004E 0A02      00600         XORLW   0x02
0050 E100      00601         BNZ     _00298_DS_
0052 5000      00602         MOVF    r0x01, W
0054 E100      00603         BNZ     _00298_DS_
               00604 ;       .line   278; main.c     return;//button push will only be processed when no LED's are flashing.
0056 EF00 F000 00605         GOTO    _00326_DS_
005A           00606 _00298_DS_:
               00607 ;       .line   279; main.c     if(pin > 7 && !pin_value){//this is a value button. only handle if button is pushed
005A 0E08      00608         MOVLW   0x08
005C 5C00      00609         SUBWF   r0x00, W
005E A0D8      00610         BTFSS   STATUS, 0
0060 D000      00611         BRA     _00323_DS_
0062 5000      00612         MOVF    r0x01, W
0064 A4D8      00613         BTFSS   STATUS, 2
0066 D000      00614         BRA     _00323_DS_
               00615 ;       .line   280; main.c     value = pin - 8;
0068 0EF8      00616         MOVLW   0xf8
006A 2400      00617         ADDWF   r0x00, W
006C 6E00      00618         MOVWF   r0x02
               00619 ;       .line   281; main.c     switch(current_screen_num){
006E 0E04      00620         MOVLW   0x04
0070 0000      00621         BANKSEL _current_screen_num
0072 5D00      00622         SUBWF   _current_screen_num, W, B
0074 B0D8      00623         BTFSC   STATUS, 0
0076 D000      00624         BRA     _00324_DS_
0078 C000 FFED 00625         MOVFF   r0x0b, POSTDEC1
007C C000 FFED 00626         MOVFF   r0x0c, POSTDEC1
0080 6A00      00627         CLRF    r0x0c
               00628 ; removed redundant BANKSEL
0082 3500      00629         RLCF    _current_screen_num, W, B
0084 3600      00630         RLCF    r0x0c, F
0086 34E8      00631         RLCF    WREG, W
0088 3600      00632         RLCF    r0x0c, F
008A 0BFC      00633         ANDLW   0xfc
008C 6E00      00634         MOVWF   r0x0b
008E 0E00      00635         MOVLW   UPPER(_00359_DS_)
0090 6EFB      00636         MOVWF   PCLATU
0092 0E00      00637         MOVLW   HIGH(_00359_DS_)
0094 6EFA      00638         MOVWF   PCLATH
0096 0E00      00639         MOVLW   LOW(_00359_DS_)
0098 2600      00640         ADDWF   r0x0b, F
009A 5000      00641         MOVF    r0x0c, W
009C 22FA      00642         ADDWFC  PCLATH, F
009E B0D8      00643         BTFSC   STATUS, 0
00A0 2AFB      00644         INCF    PCLATU, F
00A2 5000      00645         MOVF    r0x0b, W
00A4 CFEC F000 00646         MOVFF   PREINC1, r0x0c
00A8 CFEC F000 00647         MOVFF   PREINC1, r0x0b
00AC 6EF9      00648         MOVWF   PCL
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00AE           00649 _00359_DS_:
00AE EF00 F000 00650         GOTO    _00299_DS_
00B2 EF00 F000 00651         GOTO    _00303_DS_
00B6 EF00 F000 00652         GOTO    _00304_DS_
00BA EF00 F000 00653         GOTO    _00308_DS_
00BE           00654 _00299_DS_:
               00655 ;       .line   283; main.c     if (current_shift_state & int_bit_ormask[0]){
00BE 0E00      00656         MOVLW   LOW(_int_bit_ormask)
00C0 6EF6      00657         MOVWF   TBLPTRL
00C2 0E00      00658         MOVLW   HIGH(_int_bit_ormask)
00C4 6EF7      00659         MOVWF   TBLPTRH
00C6 0E00      00660         MOVLW   UPPER(_int_bit_ormask)
00C8 6EF8      00661         MOVWF   TBLPTRU
00CA 0009      00662         TBLRD*+ 
00CC CFF5 F000 00663         MOVFF   TABLAT, r0x03
00D0 0009      00664         TBLRD*+ 
00D2 CFF5 F000 00665         MOVFF   TABLAT, r0x04
00D6 C000 F000 00666         MOVFF   _current_shift_state, r0x05
00DA 6A00      00667         CLRF    r0x06
00DC 5000      00668         MOVF    r0x05, W
00DE 1600      00669         ANDWF   r0x03, F
00E0 5000      00670         MOVF    r0x06, W
00E2 1600      00671         ANDWF   r0x04, F
00E4 5000      00672         MOVF    r0x03, W
00E6 1000      00673         IORWF   r0x04, W
00E8 E000      00674         BZ      _00301_DS_
00EA 0000      00675         BANKSEL _current_preset_num
               00676 ;       .line   284; main.c     preset_store(current_preset_num);
00EC 5100      00677         MOVF    _current_preset_num, W, B
00EE EC00 F000 00678         CALL    _preset_store
               00679 ;       .line   285; main.c     led_flash_start(current_preset_num+8,0,50);//LED off for half a second to indicate save
00F2 0E08      00680         MOVLW   0x08
00F4 0000      00681         BANKSEL _current_preset_num
00F6 2500      00682         ADDWF   _current_preset_num, W, B
00F8 6E00      00683         MOVWF   r0x03
00FA 0E32      00684         MOVLW   0x32
00FC 6EED      00685         MOVWF   POSTDEC1
00FE 0E00      00686         MOVLW   0x00
0100 6EED      00687         MOVWF   POSTDEC1
0102 5000      00688         MOVF    r0x03, W
0104 EC00 F000 00689         CALL    _led_flash_start
0108 0E02      00690         MOVLW   0x02
010A 26E9      00691         ADDWF   FSR1L, F
010C D000      00692         BRA     _00324_DS_
010E           00693 _00301_DS_:
               00694 ;       .line   288; main.c     current_preset_set(value);
010E 5000      00695         MOVF    r0x02, W
0110 EC00 F000 00696         CALL    _current_preset_set
               00697 ;       .line   289; main.c     break;                  
0114 D000      00698         BRA     _00324_DS_
0116           00699 _00303_DS_:
               00700 ;       .line   291; main.c     current_bus_set(value);
0116 5000      00701         MOVF    r0x02, W
0118 EC00 F000 00702         CALL    _current_bus_set
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00703 ;       .line   292; main.c     break;                  
011C D000      00704         BRA     _00324_DS_
011E           00705 _00304_DS_:
               00706 ;       .line   294; main.c     if (current_shift_state & int_bit_ormask[2]){//add/remove input chanel
011E 0E00      00707         MOVLW   LOW(_int_bit_ormask + 4)
0120 6EF6      00708         MOVWF   TBLPTRL
0122 0E00      00709         MOVLW   HIGH(_int_bit_ormask + 4)
0124 6EF7      00710         MOVWF   TBLPTRH
0126 0E00      00711         MOVLW   UPPER(_int_bit_ormask + 4)
0128 6EF8      00712         MOVWF   TBLPTRU
012A 0009      00713         TBLRD*+ 
012C CFF5 F000 00714         MOVFF   TABLAT, r0x03
0130 0009      00715         TBLRD*+ 
0132 CFF5 F000 00716         MOVFF   TABLAT, r0x04
0136 C000 F000 00717         MOVFF   _current_shift_state, r0x05
013A 6A00      00718         CLRF    r0x06
013C 5000      00719         MOVF    r0x05, W
013E 1600      00720         ANDWF   r0x03, F
0140 5000      00721         MOVF    r0x06, W
0142 1600      00722         ANDWF   r0x04, F
0144 5000      00723         MOVF    r0x03, W
0146 1000      00724         IORWF   r0x04, W
0148 B4D8      00725         BTFSC   STATUS, 2
014A D000      00726         BRA     _00306_DS_
               00727 ; ;multiply lit val:0x04 by variable _current_bus_num and store in r0x03
               00728 ; ;Unrolled 8 X 8 multiplication
               00729 ; ;FIXME: the function does not support result==WREG
014C 0000      00730         BANKSEL _current_bus_num
               00731 ;       .line   295; main.c     current_preset[current_bus_num].inputs = 
014E 5100      00732         MOVF    _current_bus_num, W, B
0150 0D04      00733         MULLW   0x04
0152 CFF3 F000 00734         MOVFF   PRODL, r0x03
0156 0E00      00735         MOVLW   LOW(_current_preset)
0158 2600      00736         ADDWF   r0x03, F
015A 0E00      00737         MOVLW   HIGH(_current_preset)
015C 6A00      00738         CLRF    r0x04
015E 2200      00739         ADDWFC  r0x04, F
0160 C000 F000 00740         MOVFF   r0x03, r0x05
0164 C000 F000 00741         MOVFF   r0x04, r0x06
               00742 ;       .line   296; main.c     (current_preset[current_bus_num].inputs & int_bit_ormask[value])?
0168 C000 FFE1 00743         MOVFF   r0x03, FSR0L
016C C000 FFE2 00744         MOVFF   r0x04, FSR0H
0170 CFE6 F000 00745         MOVFF   POSTINC0, r0x03
0174 CFE7 F000 00746         MOVFF   INDF0, r0x04
               00747 ; ;multiply lit val:0x02 by variable r0x02 and store in r0x07
               00748 ; ;Unrolled 8 X 8 multiplication
               00749 ; ;FIXME: the function does not support result==WREG
0178 90D8      00750         BCF     STATUS, 0
017A 3400      00751         RLCF    r0x02, W
017C 6E00      00752         MOVWF   r0x07
017E 0E00      00753         MOVLW   LOW(_int_bit_ormask)
0180 2600      00754         ADDWF   r0x07, F
0182 0E00      00755         MOVLW   HIGH(_int_bit_ormask)
0184 6A00      00756         CLRF    r0x08
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0186 2200      00757         ADDWFC  r0x08, F
0188 0E00      00758         MOVLW   UPPER(_int_bit_ormask)
018A 6A00      00759         CLRF    r0x09
018C 2200      00760         ADDWFC  r0x09, F
018E C000 FFF6 00761         MOVFF   r0x07, TBLPTRL
0192 C000 FFF7 00762         MOVFF   r0x08, TBLPTRH
0196 C000 FFF8 00763         MOVFF   r0x09, TBLPTRU
019A 0009      00764         TBLRD*+ 
019C CFF5 F000 00765         MOVFF   TABLAT, r0x07
01A0 0009      00766         TBLRD*+ 
01A2 CFF5 F000 00767         MOVFF   TABLAT, r0x08
01A6 5000      00768         MOVF    r0x07, W
01A8 1400      00769         ANDWF   r0x03, W
01AA 6E00      00770         MOVWF   r0x09
01AC 5000      00771         MOVF    r0x08, W
01AE 1400      00772         ANDWF   r0x04, W
01B0 6E00      00773         MOVWF   r0x0a
01B2 5000      00774         MOVF    r0x09, W
01B4 1000      00775         IORWF   r0x0a, W
01B6 E000      00776         BZ      _00328_DS_
               00777 ;       .line   297; main.c     (current_preset[current_bus_num].inputs ^ int_bit_ormask[value]):
01B8 5000      00778         MOVF    r0x07, W
01BA 1800      00779         XORWF   r0x03, W
01BC 6E00      00780         MOVWF   r0x09
01BE 5000      00781         MOVF    r0x08, W
01C0 1800      00782         XORWF   r0x04, W
01C2 6E00      00783         MOVWF   r0x0a
01C4 D000      00784         BRA     _00329_DS_
01C6           00785 _00328_DS_:
               00786 ;       .line   298; main.c     (current_preset[current_bus_num].inputs | int_bit_ormask[value]);
01C6 5000      00787         MOVF    r0x07, W
01C8 1000      00788         IORWF   r0x03, W
01CA 6E00      00789         MOVWF   r0x09
01CC 5000      00790         MOVF    r0x08, W
01CE 1000      00791         IORWF   r0x04, W
01D0 6E00      00792         MOVWF   r0x0a
01D2           00793 _00329_DS_:
01D2 C000 FFE1 00794         MOVFF   r0x05, FSR0L
01D6 C000 FFE2 00795         MOVFF   r0x06, FSR0H
01DA C000 FFE6 00796         MOVFF   r0x09, POSTINC0
01DE C000 FFE7 00797         MOVFF   r0x0a, INDF0
01E2 D000      00798         BRA     _00307_DS_
               00799 ; ;multiply lit val:0x04 by variable _current_bus_num and store in r0x03
               00800 ; ;Unrolled 8 X 8 multiplication
               00801 ; ;FIXME: the function does not support result==WREG
01E4           00802 _00306_DS_:
01E4 0000      00803         BANKSEL _current_bus_num
               00804 ;       .line   301; main.c     current_preset[current_bus_num].inputs = 
01E6 5100      00805         MOVF    _current_bus_num, W, B
01E8 0D04      00806         MULLW   0x04
01EA CFF3 F000 00807         MOVFF   PRODL, r0x03
01EE 0E00      00808         MOVLW   LOW(_current_preset)
01F0 2600      00809         ADDWF   r0x03, F
01F2 0E00      00810         MOVLW   HIGH(_current_preset)
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01F4 6A00      00811         CLRF    r0x04
01F6 2200      00812         ADDWFC  r0x04, F
01F8 C000 F000 00813         MOVFF   r0x03, r0x05
01FC C000 F000 00814         MOVFF   r0x04, r0x06
               00815 ;       .line   302; main.c     (current_preset[current_bus_num].inputs==int_bit_ormask[value]) ? 0x0000 :int_bit_ormask[value];
0200 C000 FFE1 00816         MOVFF   r0x03, FSR0L
0204 C000 FFE2 00817         MOVFF   r0x04, FSR0H
0208 CFE6 F000 00818         MOVFF   POSTINC0, r0x03
020C CFE7 F000 00819         MOVFF   INDF0, r0x04
               00820 ; ;multiply lit val:0x02 by variable r0x02 and store in r0x07
               00821 ; ;Unrolled 8 X 8 multiplication
               00822 ; ;FIXME: the function does not support result==WREG
0210 90D8      00823         BCF     STATUS, 0
0212 3400      00824         RLCF    r0x02, W
0214 6E00      00825         MOVWF   r0x07
0216 0E00      00826         MOVLW   LOW(_int_bit_ormask)
0218 2600      00827         ADDWF   r0x07, F
021A 0E00      00828         MOVLW   HIGH(_int_bit_ormask)
021C 6A00      00829         CLRF    r0x08
021E 2200      00830         ADDWFC  r0x08, F
0220 0E00      00831         MOVLW   UPPER(_int_bit_ormask)
0222 6A00      00832         CLRF    r0x09
0224 2200      00833         ADDWFC  r0x09, F
0226 C000 FFF6 00834         MOVFF   r0x07, TBLPTRL
022A C000 FFF7 00835         MOVFF   r0x08, TBLPTRH
022E C000 FFF8 00836         MOVFF   r0x09, TBLPTRU
0232 0009      00837         TBLRD*+ 
0234 CFF5 F000 00838         MOVFF   TABLAT, r0x07
0238 0009      00839         TBLRD*+ 
023A CFF5 F000 00840         MOVFF   TABLAT, r0x08
023E 5000      00841         MOVF    r0x03, W
0240 1800      00842         XORWF   r0x07, W
0242 E100      00843         BNZ     _00360_DS_
0244 5000      00844         MOVF    r0x04, W
0246 1800      00845         XORWF   r0x08, W
0248 E000      00846         BZ      _00361_DS_
024A           00847 _00360_DS_:
024A D000      00848         BRA     _00330_DS_
024C           00849 _00361_DS_:
024C 6A00      00850         CLRF    r0x03
024E 6A00      00851         CLRF    r0x04
0250 D000      00852         BRA     _00331_DS_
0252           00853 _00330_DS_:
0252 C000 F000 00854         MOVFF   r0x07, r0x03
0256 C000 F000 00855         MOVFF   r0x08, r0x04
025A           00856 _00331_DS_:
025A C000 FFE1 00857         MOVFF   r0x05, FSR0L
025E C000 FFE2 00858         MOVFF   r0x06, FSR0H
0262 C000 FFE6 00859         MOVFF   r0x03, POSTINC0
0266 C000 FFE7 00860         MOVFF   r0x04, INDF0
026A           00861 _00307_DS_:
               00862 ;       .line   304; main.c     inout_map_build();
026A EC00 F000 00863         CALL    _inout_map_build
               00864 ;       .line   305; main.c     break;                  
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
026E D000      00865         BRA     _00324_DS_
0270           00866 _00308_DS_:
               00867 ;       .line   307; main.c     if (current_shift_state & int_bit_ormask[3]){//set/unset output chanel
0270 0E00      00868         MOVLW   LOW(_int_bit_ormask + 6)
0272 6EF6      00869         MOVWF   TBLPTRL
0274 0E00      00870         MOVLW   HIGH(_int_bit_ormask + 6)
0276 6EF7      00871         MOVWF   TBLPTRH
0278 0E00      00872         MOVLW   UPPER(_int_bit_ormask + 6)
027A 6EF8      00873         MOVWF   TBLPTRU
027C 0009      00874         TBLRD*+ 
027E CFF5 F000 00875         MOVFF   TABLAT, r0x03
0282 0009      00876         TBLRD*+ 
0284 CFF5 F000 00877         MOVFF   TABLAT, r0x04
0288 C000 F000 00878         MOVFF   _current_shift_state, r0x05
028C 6A00      00879         CLRF    r0x06
028E 5000      00880         MOVF    r0x05, W
0290 1600      00881         ANDWF   r0x03, F
0292 5000      00882         MOVF    r0x06, W
0294 1600      00883         ANDWF   r0x04, F
0296 5000      00884         MOVF    r0x03, W
0298 1000      00885         IORWF   r0x04, W
029A B4D8      00886         BTFSC   STATUS, 2
029C D000      00887         BRA     _00310_DS_
               00888 ; ;multiply lit val:0x04 by variable _current_bus_num and store in r0x03
               00889 ; ;Unrolled 8 X 8 multiplication
               00890 ; ;FIXME: the function does not support result==WREG
029E 0000      00891         BANKSEL _current_bus_num
               00892 ;       .line   308; main.c     current_preset[current_bus_num].outputs = 
02A0 5100      00893         MOVF    _current_bus_num, W, B
02A2 0D04      00894         MULLW   0x04
02A4 CFF3 F000 00895         MOVFF   PRODL, r0x03
02A8 0E00      00896         MOVLW   LOW(_current_preset)
02AA 2600      00897         ADDWF   r0x03, F
02AC 0E00      00898         MOVLW   HIGH(_current_preset)
02AE 6A00      00899         CLRF    r0x04
02B0 2200      00900         ADDWFC  r0x04, F
02B2 0E02      00901         MOVLW   0x02
02B4 2600      00902         ADDWF   r0x03, F
02B6 B0D8      00903         BTFSC   STATUS, 0
02B8 2A00      00904         INCF    r0x04, F
               00905 ;       .line   309; main.c     (current_preset[current_bus_num].outputs & int_bit_ormask[value])?
02BA C000 FFE1 00906         MOVFF   r0x03, FSR0L
02BE C000 FFE2 00907         MOVFF   r0x04, FSR0H
02C2 CFE6 F000 00908         MOVFF   POSTINC0, r0x05
02C6 CFE7 F000 00909         MOVFF   INDF0, r0x06
               00910 ; ;multiply lit val:0x02 by variable r0x02 and store in r0x07
               00911 ; ;Unrolled 8 X 8 multiplication
               00912 ; ;FIXME: the function does not support result==WREG
02CA 90D8      00913         BCF     STATUS, 0
02CC 3400      00914         RLCF    r0x02, W
02CE 6E00      00915         MOVWF   r0x07
02D0 0E00      00916         MOVLW   LOW(_int_bit_ormask)
02D2 2600      00917         ADDWF   r0x07, F
02D4 0E00      00918         MOVLW   HIGH(_int_bit_ormask)
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
02D6 6A00      00919         CLRF    r0x08
02D8 2200      00920         ADDWFC  r0x08, F
02DA 0E00      00921         MOVLW   UPPER(_int_bit_ormask)
02DC 6A00      00922         CLRF    r0x09
02DE 2200      00923         ADDWFC  r0x09, F
02E0 C000 FFF6 00924         MOVFF   r0x07, TBLPTRL
02E4 C000 FFF7 00925         MOVFF   r0x08, TBLPTRH
02E8 C000 FFF8 00926         MOVFF   r0x09, TBLPTRU
02EC 0009      00927         TBLRD*+ 
02EE CFF5 F000 00928         MOVFF   TABLAT, r0x07
02F2 0009      00929         TBLRD*+ 
02F4 CFF5 F000 00930         MOVFF   TABLAT, r0x08
02F8 5000      00931         MOVF    r0x07, W
02FA 1400      00932         ANDWF   r0x05, W
02FC 6E00      00933         MOVWF   r0x09
02FE 5000      00934         MOVF    r0x08, W
0300 1400      00935         ANDWF   r0x06, W
0302 6E00      00936         MOVWF   r0x0a
0304 5000      00937         MOVF    r0x09, W
0306 1000      00938         IORWF   r0x0a, W
0308 E000      00939         BZ      _00332_DS_
               00940 ;       .line   310; main.c     (current_preset[current_bus_num].outputs ^ int_bit_ormask[value]):
030A 5000      00941         MOVF    r0x07, W
030C 1800      00942         XORWF   r0x05, W
030E 6E00      00943         MOVWF   r0x09
0310 5000      00944         MOVF    r0x08, W
0312 1800      00945         XORWF   r0x06, W
0314 6E00      00946         MOVWF   r0x0a
0316 D000      00947         BRA     _00333_DS_
0318           00948 _00332_DS_:
               00949 ;       .line   311; main.c     (current_preset[current_bus_num].outputs | int_bit_ormask[value]);
0318 5000      00950         MOVF    r0x07, W
031A 1000      00951         IORWF   r0x05, W
031C 6E00      00952         MOVWF   r0x09
031E 5000      00953         MOVF    r0x08, W
0320 1000      00954         IORWF   r0x06, W
0322 6E00      00955         MOVWF   r0x0a
0324           00956 _00333_DS_:
0324 C000 FFE1 00957         MOVFF   r0x03, FSR0L
0328 C000 FFE2 00958         MOVFF   r0x04, FSR0H
032C C000 FFE6 00959         MOVFF   r0x09, POSTINC0
0330 C000 FFE7 00960         MOVFF   r0x0a, INDF0
0334 D000      00961         BRA     _00311_DS_
               00962 ; ;multiply lit val:0x04 by variable _current_bus_num and store in r0x03
               00963 ; ;Unrolled 8 X 8 multiplication
               00964 ; ;FIXME: the function does not support result==WREG
0336           00965 _00310_DS_:
0336 0000      00966         BANKSEL _current_bus_num
               00967 ;       .line   314; main.c     current_preset[current_bus_num].outputs = 
0338 5100      00968         MOVF    _current_bus_num, W, B
033A 0D04      00969         MULLW   0x04
033C CFF3 F000 00970         MOVFF   PRODL, r0x03
0340 0E00      00971         MOVLW   LOW(_current_preset)
0342 2600      00972         ADDWF   r0x03, F
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0344 0E00      00973         MOVLW   HIGH(_current_preset)
0346 6A00      00974         CLRF    r0x04
0348 2200      00975         ADDWFC  r0x04, F
034A 0E02      00976         MOVLW   0x02
034C 2600      00977         ADDWF   r0x03, F
034E B0D8      00978         BTFSC   STATUS, 0
0350 2A00      00979         INCF    r0x04, F
               00980 ;       .line   315; main.c     (current_preset[current_bus_num].outputs==int_bit_ormask[value]) ? 
0352 C000 FFE1 00981         MOVFF   r0x03, FSR0L
0356 C000 FFE2 00982         MOVFF   r0x04, FSR0H
035A CFE6 F000 00983         MOVFF   POSTINC0, r0x05
035E CFE7 F000 00984         MOVFF   INDF0, r0x06
               00985 ; ;multiply lit val:0x02 by variable r0x02 and store in r0x02
               00986 ; ;Unrolled 8 X 8 multiplication
               00987 ; ;FIXME: the function does not support result==WREG
0362 90D8      00988         BCF     STATUS, 0
0364 3600      00989         RLCF    r0x02, F
0366 0E00      00990         MOVLW   LOW(_int_bit_ormask)
0368 2600      00991         ADDWF   r0x02, F
036A 0E00      00992         MOVLW   HIGH(_int_bit_ormask)
036C 6A00      00993         CLRF    r0x07
036E 2200      00994         ADDWFC  r0x07, F
0370 0E00      00995         MOVLW   UPPER(_int_bit_ormask)
0372 6A00      00996         CLRF    r0x08
0374 2200      00997         ADDWFC  r0x08, F
0376 C000 FFF6 00998         MOVFF   r0x02, TBLPTRL
037A C000 FFF7 00999         MOVFF   r0x07, TBLPTRH
037E C000 FFF8 01000         MOVFF   r0x08, TBLPTRU
0382 0009      01001         TBLRD*+ 
0384 CFF5 F000 01002         MOVFF   TABLAT, r0x02
0388 0009      01003         TBLRD*+ 
038A CFF5 F000 01004         MOVFF   TABLAT, r0x07
038E 5000      01005         MOVF    r0x05, W
0390 1800      01006         XORWF   r0x02, W
0392 E100      01007         BNZ     _00362_DS_
0394 5000      01008         MOVF    r0x06, W
0396 1800      01009         XORWF   r0x07, W
0398 E000      01010         BZ      _00363_DS_
039A           01011 _00362_DS_:
039A D000      01012         BRA     _00334_DS_
039C           01013 _00363_DS_:
               01014 ;       .line   316; main.c     0x0000 :int_bit_ormask[value];
039C 6A00      01015         CLRF    r0x05
039E 6A00      01016         CLRF    r0x06
03A0 D000      01017         BRA     _00335_DS_
03A2           01018 _00334_DS_:
03A2 C000 F000 01019         MOVFF   r0x02, r0x05
03A6 C000 F000 01020         MOVFF   r0x07, r0x06
03AA           01021 _00335_DS_:
03AA C000 FFE1 01022         MOVFF   r0x03, FSR0L
03AE C000 FFE2 01023         MOVFF   r0x04, FSR0H
03B2 C000 FFE6 01024         MOVFF   r0x05, POSTINC0
03B6 C000 FFE7 01025         MOVFF   r0x06, INDF0
03BA           01026 _00311_DS_:
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01027 ;       .line   318; main.c     inout_map_build();
03BA EC00 F000 01028         CALL    _inout_map_build
               01029 ;       .line   320; main.c     }
03BE D000      01030         BRA     _00324_DS_
03C0           01031 _00323_DS_:
               01032 ;       .line   322; main.c     else if(pin < 4){
03C0 0E04      01033         MOVLW   0x04
03C2 5C00      01034         SUBWF   r0x00, W
03C4 B0D8      01035         BTFSC   STATUS, 0
03C6 D000      01036         BRA     _00324_DS_
               01037 ;       .line   323; main.c     if(pin_value)
03C8 5000      01038         MOVF    r0x01, W
03CA E000      01039         BZ      _00318_DS_
               01040 ; ;multiply lit val:0x02 by variable r0x00 and store in r0x01
               01041 ; ;Unrolled 8 X 8 multiplication
               01042 ; ;FIXME: the function does not support result==WREG
               01043 ;       .line   324; main.c     current_shift_state &= ~int_bit_ormask[pin];//remove shift flag
03CC 90D8      01044         BCF     STATUS, 0
03CE 3400      01045         RLCF    r0x00, W
03D0 6E00      01046         MOVWF   r0x01
03D2 0E00      01047         MOVLW   LOW(_int_bit_ormask)
03D4 2600      01048         ADDWF   r0x01, F
03D6 0E00      01049         MOVLW   HIGH(_int_bit_ormask)
03D8 6A00      01050         CLRF    r0x02
03DA 2200      01051         ADDWFC  r0x02, F
03DC 0E00      01052         MOVLW   UPPER(_int_bit_ormask)
03DE 6A00      01053         CLRF    r0x03
03E0 2200      01054         ADDWFC  r0x03, F
03E2 C000 FFF6 01055         MOVFF   r0x01, TBLPTRL
03E6 C000 FFF7 01056         MOVFF   r0x02, TBLPTRH
03EA C000 FFF8 01057         MOVFF   r0x03, TBLPTRU
03EE 0009      01058         TBLRD*+ 
03F0 CFF5 F000 01059         MOVFF   TABLAT, r0x01
03F4 0009      01060         TBLRD*+ 
03F6 CFF5 F000 01061         MOVFF   TABLAT, r0x02
03FA 1E00      01062         COMF    r0x01, F
03FC 5000      01063         MOVF    r0x01, W
03FE 0000      01064         BANKSEL _current_shift_state
0400 1700      01065         ANDWF   _current_shift_state, F, B
0402 D000      01066         BRA     _00324_DS_
0404           01067 _00318_DS_:
0404 0000      01068         BANKSEL _current_shift_state
               01069 ;       .line   326; main.c     if(!current_shift_state){
0406 5100      01070         MOVF    _current_shift_state, W, B
0408 E100      01071         BNZ     _00316_DS_
               01072 ;       .line   327; main.c     current_screen_set(pin);
040A 5000      01073         MOVF    r0x00, W
040C EC00 F000 01074         CALL    _current_screen_set
               01075 ;       .line   328; main.c     if(pin < 2)//start init request countdown
0410 0E02      01076         MOVLW   0x02
0412 5C00      01077         SUBWF   r0x00, W
0414 E200      01078         BC      _00316_DS_
               01079 ;       .line   329; main.c     timed_function_start(1);
0416 0E01      01080         MOVLW   0x01
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0418 EC00 F000 01081         CALL    _timed_function_start
               01082 ; ;multiply lit val:0x02 by variable r0x00 and store in r0x00
               01083 ; ;Unrolled 8 X 8 multiplication
               01084 ; ;FIXME: the function does not support result==WREG
041C           01085 _00316_DS_:
               01086 ;       .line   331; main.c     current_shift_state |= int_bit_ormask[pin];//add shift flag
041C 90D8      01087         BCF     STATUS, 0
041E 3600      01088         RLCF    r0x00, F
0420 0E00      01089         MOVLW   LOW(_int_bit_ormask)
0422 2600      01090         ADDWF   r0x00, F
0424 0E00      01091         MOVLW   HIGH(_int_bit_ormask)
0426 6A00      01092         CLRF    r0x01
0428 2200      01093         ADDWFC  r0x01, F
042A 0E00      01094         MOVLW   UPPER(_int_bit_ormask)
042C 6A00      01095         CLRF    r0x02
042E 2200      01096         ADDWFC  r0x02, F
0430 C000 FFF6 01097         MOVFF   r0x00, TBLPTRL
0434 C000 FFF7 01098         MOVFF   r0x01, TBLPTRH
0438 C000 FFF8 01099         MOVFF   r0x02, TBLPTRU
043C 0009      01100         TBLRD*+ 
043E CFF5 F000 01101         MOVFF   TABLAT, r0x00
0442 0009      01102         TBLRD*+ 
0444 CFF5 F000 01103         MOVFF   TABLAT, r0x01
0448 C000 F000 01104         MOVFF   _current_shift_state, r0x02
044C 6A00      01105         CLRF    r0x03
044E 5000      01106         MOVF    r0x02, W
0450 1200      01107         IORWF   r0x00, F
0452 5000      01108         MOVF    r0x03, W
0454 1200      01109         IORWF   r0x01, F
0456 5000      01110         MOVF    r0x00, W
0458 0000      01111         BANKSEL _current_shift_state
045A 6F00      01112         MOVWF   _current_shift_state, B
045C           01113 _00324_DS_:
               01114 ;       .line   334; main.c     screen_print();
045C EC00 F000 01115         CALL    _screen_print
0460           01116 _00326_DS_:
0460 CFEC F000 01117         MOVFF   PREINC1, r0x0a
0464 CFEC F000 01118         MOVFF   PREINC1, r0x09
0468 CFEC F000 01119         MOVFF   PREINC1, r0x08
046C CFEC F000 01120         MOVFF   PREINC1, r0x07
0470 CFEC F000 01121         MOVFF   PREINC1, r0x06
0474 CFEC F000 01122         MOVFF   PREINC1, r0x05
0478 CFEC F000 01123         MOVFF   PREINC1, r0x04
047C CFEC F000 01124         MOVFF   PREINC1, r0x03
0480 CFEC F000 01125         MOVFF   PREINC1, r0x02
0484 CFEC F000 01126         MOVFF   PREINC1, r0x01
0488 CFEC F000 01127         MOVFF   PREINC1, r0x00
048C CFEC FFD9 01128         MOVFF   PREINC1, FSR2L
0490 0012      01129         RETURN  
               01130 
               01131 ; ; Starting pCode block
               01132 S_main__Tick    code
0000           01133 _Tick:
               01134 ;       .line   235; main.c     void Tick(void) __wparam{
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0000 C000 FFED 01135         MOVFF   r0x00, POSTDEC1
0004 C000 FFED 01136         MOVFF   r0x01, POSTDEC1
0008 0000      01137         BANKSEL _timed_function
               01138 ;       .line   237; main.c     if(!timed_function)
000A 5100      01139         MOVF    _timed_function, W, B
000C E100      01140         BNZ     _00252_DS_
               01141 ;       .line   238; main.c     return;
000E D000      01142         BRA     _00270_DS_
0010           01143 _00252_DS_:
0010 0000      01144         BANKSEL _timed_function
               01145 ;       .line   239; main.c     if(timed_function==1 && (timer_ticks_count >= init_request_ticks)){
0012 5100      01146         MOVF    _timed_function, W, B
0014 0A01      01147         XORLW   0x01
0016 E000      01148         BZ      _00283_DS_
0018 D000      01149         BRA     _00263_DS_
001A           01150 _00283_DS_:
001A 0E01      01151         MOVLW   0x01
001C 0000      01152         BANKSEL (_timer_ticks_count + 1)
001E 5D00      01153         SUBWF   (_timer_ticks_count + 1), W, B
0020 E100      01154         BNZ     _00284_DS_
0022 0E2C      01155         MOVLW   0x2c
               01156 ; removed redundant BANKSEL
0024 5D00      01157         SUBWF   _timer_ticks_count, W, B
0026           01158 _00284_DS_:
0026 E300      01159         BNC     _00263_DS_
               01160 ;       .line   240; main.c     timed_function_stop();
0028 EC00 F000 01161         CALL    _timed_function_stop
002C 0000      01162         BANKSEL _current_screen_num
               01163 ;       .line   241; main.c     if(!current_screen_num){//screen is preset
002E 5100      01164         MOVF    _current_screen_num, W, B
0030 E100      01165         BNZ     _00254_DS_
               01166 ;       .line   242; main.c     preset_init(0);
0032 0E00      01167         MOVLW   0x00
0034 EC00 F000 01168         CALL    _preset_init
               01169 ;       .line   243; main.c     preset_store(0);
0038 0E00      01170         MOVLW   0x00
003A EC00 F000 01171         CALL    _preset_store
               01172 ;       .line   244; main.c     preset_init(1);
003E 0E01      01173         MOVLW   0x01
0040 EC00 F000 01174         CALL    _preset_init
               01175 ;       .line   245; main.c     for(i=1;i<16;i++)
0044 0E01      01176         MOVLW   0x01
0046 6E00      01177         MOVWF   r0x00
0048           01178 _00266_DS_:
0048 0E10      01179         MOVLW   0x10
004A 5C00      01180         SUBWF   r0x00, W
004C E200      01181         BC      _00269_DS_
               01182 ;       .line   246; main.c     preset_store(i);
004E 5000      01183         MOVF    r0x00, W
0050 EC00 F000 01184         CALL    _preset_store
               01185 ;       .line   245; main.c     for(i=1;i<16;i++)
0054 2A00      01186         INCF    r0x00, F
0056 D000      01187         BRA     _00266_DS_
0058           01188 _00269_DS_:
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01189 ;       .line   247; main.c     current_preset_set(0);
0058 0E00      01190         MOVLW   0x00
005A EC00 F000 01191         CALL    _current_preset_set
               01192 ;       .line   248; main.c     current_bus_set(0);
005E 0E00      01193         MOVLW   0x00
0060 EC00 F000 01194         CALL    _current_bus_set
               01195 ;       .line   249; main.c     inout_map_build();
0064 EC00 F000 01196         CALL    _inout_map_build
               01197 ;       .line   250; main.c     led_flash_start(0xff,5,10);//flash 5 times
0068 0E0A      01198         MOVLW   0x0a
006A 6EED      01199         MOVWF   POSTDEC1
006C 0E05      01200         MOVLW   0x05
006E 6EED      01201         MOVWF   POSTDEC1
0070 0EFF      01202         MOVLW   0xff
0072 EC00 F000 01203         CALL    _led_flash_start
0076 0E02      01204         MOVLW   0x02
0078 26E9      01205         ADDWF   FSR1L, F
007A D000      01206         BRA     _00270_DS_
007C           01207 _00254_DS_:
               01208 ;       .line   253; main.c     preset_init(1);//empty current preset
007C 0E01      01209         MOVLW   0x01
007E EC00 F000 01210         CALL    _preset_init
               01211 ;       .line   254; main.c     current_bus_set(0);
0082 0E00      01212         MOVLW   0x00
0084 EC00 F000 01213         CALL    _current_bus_set
               01214 ;       .line   255; main.c     led_flash_start(0xff,2,10);//flash 2 times
0088 0E0A      01215         MOVLW   0x0a
008A 6EED      01216         MOVWF   POSTDEC1
008C 0E02      01217         MOVLW   0x02
008E 6EED      01218         MOVWF   POSTDEC1
0090 0EFF      01219         MOVLW   0xff
0092 EC00 F000 01220         CALL    _led_flash_start
0096 0E02      01221         MOVLW   0x02
0098 26E9      01222         ADDWF   FSR1L, F
009A D000      01223         BRA     _00270_DS_
009C           01224 _00263_DS_:
009C 0000      01225         BANKSEL _timed_function
               01226 ;       .line   258; main.c     else if(timed_function==2 && (timer_ticks_count >= led_flash_ticks)){
009E 5100      01227         MOVF    _timed_function, W, B
00A0 0A02      01228         XORLW   0x02
00A2 E100      01229         BNZ     _00270_DS_
00A4 C000 F000 01230         MOVFF   _led_flash_ticks, r0x00
00A8 6A00      01231         CLRF    r0x01
00AA 5000      01232         MOVF    r0x01, W
00AC 0000      01233         BANKSEL (_timer_ticks_count + 1)
00AE 5D00      01234         SUBWF   (_timer_ticks_count + 1), W, B
00B0 E100      01235         BNZ     _00288_DS_
00B2 5000      01236         MOVF    r0x00, W
               01237 ; removed redundant BANKSEL
00B4 5D00      01238         SUBWF   _timer_ticks_count, W, B
00B6           01239 _00288_DS_:
00B6 E300      01240         BNC     _00270_DS_
               01241 ;       .line   259; main.c     if(led_flash_count > 1){
00B8 0E02      01242         MOVLW   0x02
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00BA 0000      01243         BANKSEL _led_flash_count
00BC 5D00      01244         SUBWF   _led_flash_count, W, B
00BE E300      01245         BNC     _00257_DS_
               01246 ;       .line   260; main.c     led_flash_set(led_flash_count-- & 0x01);
00C0 C000 F000 01247         MOVFF   _led_flash_count, r0x00
00C4 0700      01248         DECF    _led_flash_count, F, B
00C6 0E01      01249         MOVLW   0x01
00C8 1600      01250         ANDWF   r0x00, F
00CA 5000      01251         MOVF    r0x00, W
00CC EC00 F000 01252         CALL    _led_flash_set
00D0 0000      01253         BANKSEL _timer_ticks_count
               01254 ;       .line   261; main.c     timer_ticks_count = 0;
00D2 6B00      01255         CLRF    _timer_ticks_count, B
               01256 ; removed redundant BANKSEL
00D4 6B00      01257         CLRF    (_timer_ticks_count + 1), B
00D6 D000      01258         BRA     _00270_DS_
00D8           01259 _00257_DS_:
               01260 ;       .line   264; main.c     timed_function_stop();
00D8 EC00 F000 01261         CALL    _timed_function_stop
               01262 ;       .line   265; main.c     screen_print();
00DC EC00 F000 01263         CALL    _screen_print
00E0           01264 _00270_DS_:
00E0 CFEC F000 01265         MOVFF   PREINC1, r0x01
00E4 CFEC F000 01266         MOVFF   PREINC1, r0x00
00E8 0012      01267         RETURN  
               01268 
               01269 ; ; Starting pCode block
               01270 S_main__led_flash_set   code
0000           01271 _led_flash_set:
               01272 ;       .line   224; main.c     void led_flash_set(unsigned char state) __wparam{
0000 CFD9 FFED 01273         MOVFF   FSR2L, POSTDEC1
0004 CFE9 FFD9 01274         MOVFF   FSR1L, FSR2L
0008 C000 FFED 01275         MOVFF   r0x00, POSTDEC1
000C C000 FFED 01276         MOVFF   r0x01, POSTDEC1
0010 6E00      01277         MOVWF   r0x00
0012 0000      01278         BANKSEL _led_flash_led
               01279 ;       .line   225; main.c     if(led_flash_led == 0xff){
0014 5100      01280         MOVF    _led_flash_led, W, B
0016 0AFF      01281         XORLW   0xff
0018 E100      01282         BNZ     _00237_DS_
               01283 ;       .line   226; main.c     state = (state ? 0xff : 0x00);
001A 5000      01284         MOVF    r0x00, W
001C E000      01285         BZ      _00241_DS_
001E 0EFF      01286         MOVLW   0xff
0020 6E00      01287         MOVWF   r0x01
0022 D000      01288         BRA     _00242_DS_
0024           01289 _00241_DS_:
0024 6A00      01290         CLRF    r0x01
0026           01291 _00242_DS_:
0026 C000 F000 01292         MOVFF   r0x01, r0x00
               01293 ;       .line   227; main.c     MIOS_DOUT_SRSet(0x01,state);
002A 5000      01294         MOVF    r0x00, W
002C 6EED      01295         MOVWF   POSTDEC1
002E 0E01      01296         MOVLW   0x01
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0030 EC00 F000 01297         CALL    _MIOS_DOUT_SRSet
0034 2AE9      01298         INCF    FSR1L, F
               01299 ;       .line   228; main.c     MIOS_DOUT_SRSet(0x02,state);
0036 5000      01300         MOVF    r0x00, W
0038 6EED      01301         MOVWF   POSTDEC1
003A 0E02      01302         MOVLW   0x02
003C EC00 F000 01303         CALL    _MIOS_DOUT_SRSet
0040 2AE9      01304         INCF    FSR1L, F
0042 D000      01305         BRA     _00239_DS_
0044           01306 _00237_DS_:
               01307 ;       .line   231; main.c     MIOS_DOUT_PinSet(led_flash_led,state);
0044 5000      01308         MOVF    r0x00, W
0046 6EED      01309         MOVWF   POSTDEC1
0048 0000      01310         BANKSEL _led_flash_led
004A 5100      01311         MOVF    _led_flash_led, W, B
004C EC00 F000 01312         CALL    _MIOS_DOUT_PinSet
0050 2AE9      01313         INCF    FSR1L, F
0052           01314 _00239_DS_:
0052 CFEC F000 01315         MOVFF   PREINC1, r0x01
0056 CFEC F000 01316         MOVFF   PREINC1, r0x00
005A CFEC FFD9 01317         MOVFF   PREINC1, FSR2L
005E 0012      01318         RETURN  
               01319 
               01320 ; ; Starting pCode block
               01321 S_main__led_flash_start code
0000           01322 _led_flash_start:
               01323 ;       .line   216; main.c     void led_flash_start(unsigned char led,unsigned char times,unsigned char ticks) __wparam{
0000 CFD9 FFED 01324         MOVFF   FSR2L, POSTDEC1
0004 CFE9 FFD9 01325         MOVFF   FSR1L, FSR2L
0008 C000 FFED 01326         MOVFF   r0x00, POSTDEC1
000C C000 FFED 01327         MOVFF   r0x01, POSTDEC1
0010 0000      01328         BANKSEL _led_flash_led
0012 6F00      01329         MOVWF   _led_flash_led, B
0014 0E02      01330         MOVLW   0x02
0016 CFDB F000 01331         MOVFF   PLUSW2, r0x00
001A 0E03      01332         MOVLW   0x03
001C CFDB F000 01333         MOVFF   PLUSW2, _led_flash_ticks
               01334 ;       .line   219; main.c     led_flash_count = (times<<1) + 1;
0020 5000      01335         MOVF    r0x00, W
0022 2400      01336         ADDWF   r0x00, W
0024 6E00      01337         MOVWF   r0x01
0026 2800      01338         INCF    r0x01, W
0028 0000      01339         BANKSEL _led_flash_count
002A 6F00      01340         MOVWF   _led_flash_count, B
               01341 ;       .line   220; main.c     led_flash_set(0);
002C 0E00      01342         MOVLW   0x00
002E EC00 F000 01343         CALL    _led_flash_set
               01344 ;       .line   221; main.c     timed_function_start(2);
0032 0E02      01345         MOVLW   0x02
0034 EC00 F000 01346         CALL    _timed_function_start
0038 CFEC F000 01347         MOVFF   PREINC1, r0x01
003C CFEC F000 01348         MOVFF   PREINC1, r0x00
0040 CFEC FFD9 01349         MOVFF   PREINC1, FSR2L
0044 0012      01350         RETURN  
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01351 
               01352 ; ; Starting pCode block
               01353 S_main__timed_function_stop     code
0000           01354 _timed_function_stop:
               01355 ;       .line   211; main.c     MIOS_TIMER_Stop();
0000 EC00 F000 01356         CALL    _MIOS_TIMER_Stop
0004 0000      01357         BANKSEL _timed_function
               01358 ;       .line   212; main.c     timed_function = 0;
0006 6B00      01359         CLRF    _timed_function, B
0008 0000      01360         BANKSEL _timer_ticks_count
               01361 ;       .line   213; main.c     timer_ticks_count = 0;
000A 6B00      01362         CLRF    _timer_ticks_count, B
               01363 ; removed redundant BANKSEL
000C 6B00      01364         CLRF    (_timer_ticks_count + 1), B
000E 0012      01365         RETURN  
               01366 
               01367 ; ; Starting pCode block
               01368 S_main__timed_function_start    code
0000           01369 _timed_function_start:
               01370 ;       .line   204; main.c     void timed_function_start(unsigned char func) __wparam{
0000 CFD9 FFED 01371         MOVFF   FSR2L, POSTDEC1
0004 CFE9 FFD9 01372         MOVFF   FSR1L, FSR2L
0008 0000      01373         BANKSEL _timed_function
000A 6F00      01374         MOVWF   _timed_function, B
000C 0000      01375         BANKSEL _timer_ticks_count
               01376 ;       .line   205; main.c     timer_ticks_count=0;
000E 6B00      01377         CLRF    _timer_ticks_count, B
               01378 ; removed redundant BANKSEL
0010 6B00      01379         CLRF    (_timer_ticks_count + 1), B
               01380 ;       .line   207; main.c     MIOS_TIMER_Init(0x01,50000);
0012 0EC3      01381         MOVLW   0xc3
0014 6EED      01382         MOVWF   POSTDEC1
0016 0E50      01383         MOVLW   0x50
0018 6EED      01384         MOVWF   POSTDEC1
001A 0E01      01385         MOVLW   0x01
001C EC00 F000 01386         CALL    _MIOS_TIMER_Init
0020 0E02      01387         MOVLW   0x02
0022 26E9      01388         ADDWF   FSR1L, F
0024 CFEC FFD9 01389         MOVFF   PREINC1, FSR2L
0028 0012      01390         RETURN  
               01391 
               01392 ; ; Starting pCode block
               01393 S_main__Timer   code
0000           01394 _Timer:
0000 0000      01395         BANKSEL _timer_ticks_count
               01396 ;       .line   200; main.c     timer_ticks_count++;
0002 2B00      01397         INCF    _timer_ticks_count, F, B
0004 E300      01398         BNC     _10456_DS_
               01399 ; removed redundant BANKSEL
0006 2B00      01400         INCF    (_timer_ticks_count + 1), F, B
0008           01401 _10456_DS_:
0008 0012      01402         RETURN  
               01403 
               01404 ; ; Starting pCode block
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01405 S_main__current_preset_set      code
0000           01406 _current_preset_set:
               01407 ;       .line   189; main.c     void current_preset_set(unsigned char value) __wparam{
0000 CFD9 FFED 01408         MOVFF   FSR2L, POSTDEC1
0004 CFE9 FFD9 01409         MOVFF   FSR1L, FSR2L
0008 C000 FFED 01410         MOVFF   r0x00, POSTDEC1
000C 6E00      01411         MOVWF   r0x00
               01412 ;       .line   190; main.c     current_preset_num = value;
000E C000 F000 01413         MOVFF   r0x00, _current_preset_num
               01414 ;       .line   191; main.c     preset_load(value);
0012 5000      01415         MOVF    r0x00, W
0014 EC00 F000 01416         CALL    _preset_load
               01417 ;       .line   192; main.c     inout_map_build();
0018 EC00 F000 01418         CALL    _inout_map_build
               01419 ;       .line   193; main.c     MIOS_EEPROM_Write(0x01,value);
001C 5000      01420         MOVF    r0x00, W
001E 6EED      01421         MOVWF   POSTDEC1
0020 0E01      01422         MOVLW   0x01
0022 EC00 F000 01423         CALL    _MIOS_EEPROM_Write
0026 2AE9      01424         INCF    FSR1L, F
0028 CFEC F000 01425         MOVFF   PREINC1, r0x00
002C CFEC FFD9 01426         MOVFF   PREINC1, FSR2L
0030 0012      01427         RETURN  
               01428 
               01429 ; ; Starting pCode block
               01430 S_main__current_bus_set code
0000           01431 _current_bus_set:
               01432 ;       .line   184; main.c     void current_bus_set(unsigned char value) __wparam{
0000 CFD9 FFED 01433         MOVFF   FSR2L, POSTDEC1
0004 CFE9 FFD9 01434         MOVFF   FSR1L, FSR2L
0008 C000 FFED 01435         MOVFF   r0x00, POSTDEC1
000C 6E00      01436         MOVWF   r0x00
               01437 ;       .line   185; main.c     current_bus_num = value;
000E C000 F000 01438         MOVFF   r0x00, _current_bus_num
               01439 ;       .line   186; main.c     MIOS_EEPROM_Write(0x02,value);
0012 5000      01440         MOVF    r0x00, W
0014 6EED      01441         MOVWF   POSTDEC1
0016 0E02      01442         MOVLW   0x02
0018 EC00 F000 01443         CALL    _MIOS_EEPROM_Write
001C 2AE9      01444         INCF    FSR1L, F
001E CFEC F000 01445         MOVFF   PREINC1, r0x00
0022 CFEC FFD9 01446         MOVFF   PREINC1, FSR2L
0026 0012      01447         RETURN  
               01448 
               01449 ; ; Starting pCode block
               01450 S_main__current_screen_set      code
0000           01451 _current_screen_set:
               01452 ;       .line   179; main.c     void current_screen_set(unsigned char value) __wparam{
0000 CFD9 FFED 01453         MOVFF   FSR2L, POSTDEC1
0004 CFE9 FFD9 01454         MOVFF   FSR1L, FSR2L
0008 0000      01455         BANKSEL _current_screen_num
000A 6F00      01456         MOVWF   _current_screen_num, B
               01457 ;       .line   181; main.c     MIOS_EEPROM_Write(0x00, current_screen_num);            
000C 5100      01458         MOVF    _current_screen_num, W, B
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
000E 6EED      01459         MOVWF   POSTDEC1
0010 0E00      01460         MOVLW   0x00
0012 EC00 F000 01461         CALL    _MIOS_EEPROM_Write
0016 2AE9      01462         INCF    FSR1L, F
0018 CFEC FFD9 01463         MOVFF   PREINC1, FSR2L
001C 0012      01464         RETURN  
               01465 
               01466 ; ; Starting pCode block
               01467 S_main__screen_print    code
0000           01468 _screen_print:
               01469 ;       .line   148; main.c     void screen_print(void) __wparam{
0000 C000 FFED 01470         MOVFF   r0x00, POSTDEC1
0004 C000 FFED 01471         MOVFF   r0x01, POSTDEC1
0008 0000      01472         BANKSEL _timed_function
               01473 ;       .line   149; main.c     if(timed_function==2)
000A 5100      01474         MOVF    _timed_function, W, B
000C 0A02      01475         XORLW   0x02
000E E100      01476         BNZ     _00182_DS_
               01477 ;       .line   150; main.c     return;//no screen print on LED flash
0010 D000      01478         BRA     _00194_DS_
0012           01479 _00182_DS_:
0012 0000      01480         BANKSEL _current_screen_num
               01481 ;       .line   152; main.c     MIOS_DOUT_SRSet(0x00,MIOS_HLP_GetBitORMask(current_screen_num));
0014 5100      01482         MOVF    _current_screen_num, W, B
0016 EC00 F000 01483         CALL    _MIOS_HLP_GetBitORMask
001A 6E00      01484         MOVWF   r0x00
001C 5000      01485         MOVF    r0x00, W
001E 6EED      01486         MOVWF   POSTDEC1
0020 0E00      01487         MOVLW   0x00
0022 EC00 F000 01488         CALL    _MIOS_DOUT_SRSet
0026 2AE9      01489         INCF    FSR1L, F
               01490 ;       .line   154; main.c     MIOS_DOUT_SRSet(0x01,0x00);
0028 0E00      01491         MOVLW   0x00
002A 6EED      01492         MOVWF   POSTDEC1
002C 0E01      01493         MOVLW   0x01
002E EC00 F000 01494         CALL    _MIOS_DOUT_SRSet
0032 2AE9      01495         INCF    FSR1L, F
               01496 ;       .line   155; main.c     MIOS_DOUT_SRSet(0x02,0x00);
0034 0E00      01497         MOVLW   0x00
0036 6EED      01498         MOVWF   POSTDEC1
0038 0E02      01499         MOVLW   0x02
003A EC00 F000 01500         CALL    _MIOS_DOUT_SRSet
003E 2AE9      01501         INCF    FSR1L, F
               01502 ;       .line   156; main.c     switch(current_screen_num){
0040 0E04      01503         MOVLW   0x04
0042 0000      01504         BANKSEL _current_screen_num
0044 5D00      01505         SUBWF   _current_screen_num, W, B
0046 B0D8      01506         BTFSC   STATUS, 0
0048 D000      01507         BRA     _00194_DS_
004A C000 FFED 01508         MOVFF   r0x02, POSTDEC1
004E C000 FFED 01509         MOVFF   r0x03, POSTDEC1
0052 6A00      01510         CLRF    r0x03
               01511 ; removed redundant BANKSEL
0054 3500      01512         RLCF    _current_screen_num, W, B
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0056 3600      01513         RLCF    r0x03, F
0058 34E8      01514         RLCF    WREG, W
005A 3600      01515         RLCF    r0x03, F
005C 0BFC      01516         ANDLW   0xfc
005E 6E00      01517         MOVWF   r0x02
0060 0E00      01518         MOVLW   UPPER(_00203_DS_)
0062 6EFB      01519         MOVWF   PCLATU
0064 0E00      01520         MOVLW   HIGH(_00203_DS_)
0066 6EFA      01521         MOVWF   PCLATH
0068 0E00      01522         MOVLW   LOW(_00203_DS_)
006A 2600      01523         ADDWF   r0x02, F
006C 5000      01524         MOVF    r0x03, W
006E 22FA      01525         ADDWFC  PCLATH, F
0070 B0D8      01526         BTFSC   STATUS, 0
0072 2AFB      01527         INCF    PCLATU, F
0074 5000      01528         MOVF    r0x02, W
0076 CFEC F000 01529         MOVFF   PREINC1, r0x03
007A CFEC F000 01530         MOVFF   PREINC1, r0x02
007E 6EF9      01531         MOVWF   PCL
0080           01532 _00203_DS_:
0080 EF00 F000 01533         GOTO    _00183_DS_
0084 EF00 F000 01534         GOTO    _00187_DS_
0088 EF00 F000 01535         GOTO    _00191_DS_
008C EF00 F000 01536         GOTO    _00192_DS_
0090           01537 _00183_DS_:
               01538 ;       .line   158; main.c     if(current_preset_num < 8)                      
0090 0E08      01539         MOVLW   0x08
0092 0000      01540         BANKSEL _current_preset_num
0094 5D00      01541         SUBWF   _current_preset_num, W, B
0096 E200      01542         BC      _00185_DS_
               01543 ; removed redundant BANKSEL
               01544 ;       .line   159; main.c     MIOS_DOUT_SRSet(0x01,MIOS_HLP_GetBitORMask(current_preset_num));
0098 5100      01545         MOVF    _current_preset_num, W, B
009A EC00 F000 01546         CALL    _MIOS_HLP_GetBitORMask
009E 6E00      01547         MOVWF   r0x00
00A0 5000      01548         MOVF    r0x00, W
00A2 6EED      01549         MOVWF   POSTDEC1
00A4 0E01      01550         MOVLW   0x01
00A6 EC00 F000 01551         CALL    _MIOS_DOUT_SRSet
00AA 2AE9      01552         INCF    FSR1L, F
00AC D000      01553         BRA     _00194_DS_
00AE           01554 _00185_DS_:
               01555 ;       .line   161; main.c     MIOS_DOUT_SRSet(0x02,MIOS_HLP_GetBitORMask(current_preset_num-8));                              
00AE 0EF8      01556         MOVLW   0xf8
00B0 0000      01557         BANKSEL _current_preset_num
00B2 2500      01558         ADDWF   _current_preset_num, W, B
00B4 6E00      01559         MOVWF   r0x00
00B6 5000      01560         MOVF    r0x00, W
00B8 EC00 F000 01561         CALL    _MIOS_HLP_GetBitORMask
00BC 6E00      01562         MOVWF   r0x00
00BE 5000      01563         MOVF    r0x00, W
00C0 6EED      01564         MOVWF   POSTDEC1
00C2 0E02      01565         MOVLW   0x02
00C4 EC00 F000 01566         CALL    _MIOS_DOUT_SRSet
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00C8 2AE9      01567         INCF    FSR1L, F
               01568 ;       .line   162; main.c     break;
00CA D000      01569         BRA     _00194_DS_
00CC           01570 _00187_DS_:
               01571 ;       .line   164; main.c     if(current_bus_num < 8)                 
00CC 0E08      01572         MOVLW   0x08
00CE 0000      01573         BANKSEL _current_bus_num
00D0 5D00      01574         SUBWF   _current_bus_num, W, B
00D2 E200      01575         BC      _00189_DS_
               01576 ; removed redundant BANKSEL
               01577 ;       .line   165; main.c     MIOS_DOUT_SRSet(0x01,MIOS_HLP_GetBitORMask(current_bus_num));
00D4 5100      01578         MOVF    _current_bus_num, W, B
00D6 EC00 F000 01579         CALL    _MIOS_HLP_GetBitORMask
00DA 6E00      01580         MOVWF   r0x00
00DC 5000      01581         MOVF    r0x00, W
00DE 6EED      01582         MOVWF   POSTDEC1
00E0 0E01      01583         MOVLW   0x01
00E2 EC00 F000 01584         CALL    _MIOS_DOUT_SRSet
00E6 2AE9      01585         INCF    FSR1L, F
00E8 D000      01586         BRA     _00194_DS_
00EA           01587 _00189_DS_:
               01588 ;       .line   167; main.c     MIOS_DOUT_SRSet(0x02,MIOS_HLP_GetBitORMask(current_bus_num-8));                                                 
00EA 0EF8      01589         MOVLW   0xf8
00EC 0000      01590         BANKSEL _current_bus_num
00EE 2500      01591         ADDWF   _current_bus_num, W, B
00F0 6E00      01592         MOVWF   r0x00
00F2 5000      01593         MOVF    r0x00, W
00F4 EC00 F000 01594         CALL    _MIOS_HLP_GetBitORMask
00F8 6E00      01595         MOVWF   r0x00
00FA 5000      01596         MOVF    r0x00, W
00FC 6EED      01597         MOVWF   POSTDEC1
00FE 0E02      01598         MOVLW   0x02
0100 EC00 F000 01599         CALL    _MIOS_DOUT_SRSet
0104 2AE9      01600         INCF    FSR1L, F
               01601 ;       .line   168; main.c     break;
0106 D000      01602         BRA     _00194_DS_
               01603 ; ;multiply lit val:0x04 by variable _current_bus_num and store in r0x00
               01604 ; ;Unrolled 8 X 8 multiplication
               01605 ; ;FIXME: the function does not support result==WREG
0108           01606 _00191_DS_:
0108 0000      01607         BANKSEL _current_bus_num
               01608 ;       .line   170; main.c     MIOS_DOUT_SRSet(0x01,(unsigned char)(current_preset[current_bus_num].inputs & 0x00ff));
010A 5100      01609         MOVF    _current_bus_num, W, B
010C 0D04      01610         MULLW   0x04
010E CFF3 F000 01611         MOVFF   PRODL, r0x00
0112 0E00      01612         MOVLW   LOW(_current_preset)
0114 2600      01613         ADDWF   r0x00, F
0116 0E00      01614         MOVLW   HIGH(_current_preset)
0118 6A00      01615         CLRF    r0x01
011A 2200      01616         ADDWFC  r0x01, F
011C C000 FFE1 01617         MOVFF   r0x00, FSR0L
0120 C000 FFE2 01618         MOVFF   r0x01, FSR0H
0124 CFE6 F000 01619         MOVFF   POSTINC0, r0x00
0128 CFE7 F000 01620         MOVFF   INDF0, r0x01
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
012C 6A00      01621         CLRF    r0x01
012E 5000      01622         MOVF    r0x00, W
0130 6EED      01623         MOVWF   POSTDEC1
0132 0E01      01624         MOVLW   0x01
0134 EC00 F000 01625         CALL    _MIOS_DOUT_SRSet
0138 2AE9      01626         INCF    FSR1L, F
               01627 ; ;multiply lit val:0x04 by variable _current_bus_num and store in r0x00
               01628 ; ;Unrolled 8 X 8 multiplication
               01629 ; ;FIXME: the function does not support result==WREG
013A 0000      01630         BANKSEL _current_bus_num
               01631 ;       .line   171; main.c     MIOS_DOUT_SRSet(0x02,(unsigned char)((current_preset[current_bus_num].inputs >>8) & 0x00ff));
013C 5100      01632         MOVF    _current_bus_num, W, B
013E 0D04      01633         MULLW   0x04
0140 CFF3 F000 01634         MOVFF   PRODL, r0x00
0144 0E00      01635         MOVLW   LOW(_current_preset)
0146 2600      01636         ADDWF   r0x00, F
0148 0E00      01637         MOVLW   HIGH(_current_preset)
014A 6A00      01638         CLRF    r0x01
014C 2200      01639         ADDWFC  r0x01, F
014E C000 FFE1 01640         MOVFF   r0x00, FSR0L
0152 C000 FFE2 01641         MOVFF   r0x01, FSR0H
0156 CFE6 F000 01642         MOVFF   POSTINC0, r0x00
015A CFE7 F000 01643         MOVFF   INDF0, r0x01
015E 5000      01644         MOVF    r0x01, W
0160 6E00      01645         MOVWF   r0x00
0162 6A00      01646         CLRF    r0x01
0164 6A00      01647         CLRF    r0x01
0166 5000      01648         MOVF    r0x00, W
0168 6EED      01649         MOVWF   POSTDEC1
016A 0E02      01650         MOVLW   0x02
016C EC00 F000 01651         CALL    _MIOS_DOUT_SRSet
0170 2AE9      01652         INCF    FSR1L, F
               01653 ;       .line   172; main.c     break;
0172 D000      01654         BRA     _00194_DS_
               01655 ; ;multiply lit val:0x04 by variable _current_bus_num and store in r0x00
               01656 ; ;Unrolled 8 X 8 multiplication
               01657 ; ;FIXME: the function does not support result==WREG
0174           01658 _00192_DS_:
0174 0000      01659         BANKSEL _current_bus_num
               01660 ;       .line   174; main.c     MIOS_DOUT_SRSet(0x01,(unsigned char)(current_preset[current_bus_num].outputs & 0x00ff));
0176 5100      01661         MOVF    _current_bus_num, W, B
0178 0D04      01662         MULLW   0x04
017A CFF3 F000 01663         MOVFF   PRODL, r0x00
017E 0E00      01664         MOVLW   LOW(_current_preset)
0180 2600      01665         ADDWF   r0x00, F
0182 0E00      01666         MOVLW   HIGH(_current_preset)
0184 6A00      01667         CLRF    r0x01
0186 2200      01668         ADDWFC  r0x01, F
0188 0E02      01669         MOVLW   0x02
018A 2600      01670         ADDWF   r0x00, F
018C B0D8      01671         BTFSC   STATUS, 0
018E 2A00      01672         INCF    r0x01, F
0190 C000 FFE1 01673         MOVFF   r0x00, FSR0L
0194 C000 FFE2 01674         MOVFF   r0x01, FSR0H
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0198 CFE6 F000 01675         MOVFF   POSTINC0, r0x00
019C CFE7 F000 01676         MOVFF   INDF0, r0x01
01A0 6A00      01677         CLRF    r0x01
01A2 5000      01678         MOVF    r0x00, W
01A4 6EED      01679         MOVWF   POSTDEC1
01A6 0E01      01680         MOVLW   0x01
01A8 EC00 F000 01681         CALL    _MIOS_DOUT_SRSet
01AC 2AE9      01682         INCF    FSR1L, F
               01683 ; ;multiply lit val:0x04 by variable _current_bus_num and store in r0x00
               01684 ; ;Unrolled 8 X 8 multiplication
               01685 ; ;FIXME: the function does not support result==WREG
01AE 0000      01686         BANKSEL _current_bus_num
               01687 ;       .line   175; main.c     MIOS_DOUT_SRSet(0x02,(unsigned char)((current_preset[current_bus_num].outputs >>8) & 0x00ff));
01B0 5100      01688         MOVF    _current_bus_num, W, B
01B2 0D04      01689         MULLW   0x04
01B4 CFF3 F000 01690         MOVFF   PRODL, r0x00
01B8 0E00      01691         MOVLW   LOW(_current_preset)
01BA 2600      01692         ADDWF   r0x00, F
01BC 0E00      01693         MOVLW   HIGH(_current_preset)
01BE 6A00      01694         CLRF    r0x01
01C0 2200      01695         ADDWFC  r0x01, F
01C2 0E02      01696         MOVLW   0x02
01C4 2600      01697         ADDWF   r0x00, F
01C6 B0D8      01698         BTFSC   STATUS, 0
01C8 2A00      01699         INCF    r0x01, F
01CA C000 FFE1 01700         MOVFF   r0x00, FSR0L
01CE C000 FFE2 01701         MOVFF   r0x01, FSR0H
01D2 CFE6 F000 01702         MOVFF   POSTINC0, r0x00
01D6 CFE7 F000 01703         MOVFF   INDF0, r0x01
01DA 5000      01704         MOVF    r0x01, W
01DC 6E00      01705         MOVWF   r0x00
01DE 6A00      01706         CLRF    r0x01
01E0 6A00      01707         CLRF    r0x01
01E2 5000      01708         MOVF    r0x00, W
01E4 6EED      01709         MOVWF   POSTDEC1
01E6 0E02      01710         MOVLW   0x02
01E8 EC00 F000 01711         CALL    _MIOS_DOUT_SRSet
01EC 2AE9      01712         INCF    FSR1L, F
01EE           01713 _00194_DS_:
               01714 ;       .line   176; main.c     }
01EE CFEC F000 01715         MOVFF   PREINC1, r0x01
01F2 CFEC F000 01716         MOVFF   PREINC1, r0x00
01F6 0012      01717         RETURN  
               01718 
               01719 ; ; Starting pCode block
               01720 S_main__inout_map_build code
0000           01721 _inout_map_build:
               01722 ;       .line   124; main.c     void inout_map_build(void) __wparam{
0000 C000 FFED 01723         MOVFF   r0x00, POSTDEC1
0004 C000 FFED 01724         MOVFF   r0x01, POSTDEC1
0008 C000 FFED 01725         MOVFF   r0x02, POSTDEC1
000C C000 FFED 01726         MOVFF   r0x03, POSTDEC1
0010 C000 FFED 01727         MOVFF   r0x04, POSTDEC1
0014 C000 FFED 01728         MOVFF   r0x05, POSTDEC1
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0018 C000 FFED 01729         MOVFF   r0x06, POSTDEC1
001C C000 FFED 01730         MOVFF   r0x07, POSTDEC1
0020 C000 FFED 01731         MOVFF   r0x08, POSTDEC1
0024 C000 FFED 01732         MOVFF   r0x09, POSTDEC1
0028 C000 FFED 01733         MOVFF   r0x0a, POSTDEC1
002C C000 FFED 01734         MOVFF   r0x0b, POSTDEC1
0030 C000 FFED 01735         MOVFF   r0x0c, POSTDEC1
0034 C000 FFED 01736         MOVFF   r0x0d, POSTDEC1
0038 C000 FFED 01737         MOVFF   r0x0e, POSTDEC1
003C C000 FFED 01738         MOVFF   r0x0f, POSTDEC1
0040 C000 FFED 01739         MOVFF   r0x10, POSTDEC1
0044 C000 FFED 01740         MOVFF   r0x11, POSTDEC1
               01741 ;       .line   127; main.c     for(input=0;input<16;input++)
0048 6A00      01742         CLRF    r0x00
004A 6A00      01743         CLRF    r0x01
004C           01744 _00135_DS_:
004C 0E10      01745         MOVLW   0x10
004E 5C00      01746         SUBWF   r0x00, W
0050 E200      01747         BC      _00138_DS_
               01748 ;       .line   128; main.c     outputs[input] = 0;
0052 0E00      01749         MOVLW   LOW(_inout_map_build_outputs_1_1)
0054 2400      01750         ADDWF   r0x01, W
0056 6E00      01751         MOVWF   r0x02
0058 6A00      01752         CLRF    r0x03
005A 0E00      01753         MOVLW   HIGH(_inout_map_build_outputs_1_1)
005C 2200      01754         ADDWFC  r0x03, F
005E C000 FFE1 01755         MOVFF   r0x02, FSR0L
0062 C000 FFE2 01756         MOVFF   r0x03, FSR0H
0066 0E00      01757         MOVLW   0x00
0068 6EE6      01758         MOVWF   POSTINC0
006A 0E00      01759         MOVLW   0x00
006C 6EE7      01760         MOVWF   INDF0
               01761 ;       .line   127; main.c     for(input=0;input<16;input++)
006E 2A00      01762         INCF    r0x01, F
0070 2A00      01763         INCF    r0x01, F
0072 2A00      01764         INCF    r0x00, F
0074 D000      01765         BRA     _00135_DS_
0076           01766 _00138_DS_:
               01767 ;       .line   129; main.c     for(input=0;input<16;input++){
0076 6A00      01768         CLRF    r0x00
0078           01769 _00147_DS_:
0078 0E10      01770         MOVLW   0x10
007A 5C00      01771         SUBWF   r0x00, W
007C B0D8      01772         BTFSC   STATUS, 0
007E D000      01773         BRA     _00174_DS_
               01774 ;       .line   130; main.c     for(bus=0;bus<16;bus++){
0080 6A00      01775         CLRF    r0x01
0082 6A00      01776         CLRF    r0x02
0084           01777 _00143_DS_:
0084 0E10      01778         MOVLW   0x10
0086 5C00      01779         SUBWF   r0x01, W
0088 B0D8      01780         BTFSC   STATUS, 0
008A D000      01781         BRA     _00149_DS_
               01782 ;       .line   131; main.c     for(input=0;input<16;input++){
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
008C 0E00      01783         MOVLW   LOW(_current_preset)
008E 2400      01784         ADDWF   r0x02, W
0090 6E00      01785         MOVWF   r0x03
0092 6A00      01786         CLRF    r0x04
0094 0E00      01787         MOVLW   HIGH(_current_preset)
0096 2200      01788         ADDWFC  r0x04, F
0098 6A00      01789         CLRF    r0x05
009A 6A00      01790         CLRF    r0x06
009C           01791 _00139_DS_:
009C 0E10      01792         MOVLW   0x10
009E 5C00      01793         SUBWF   r0x05, W
00A0 B0D8      01794         BTFSC   STATUS, 0
00A2 D000      01795         BRA     _00176_DS_
               01796 ;       .line   132; main.c     if(current_preset[bus].inputs & int_bit_ormask[input])
00A4 C000 FFE1 01797         MOVFF   r0x03, FSR0L
00A8 C000 FFE2 01798         MOVFF   r0x04, FSR0H
00AC CFE6 F000 01799         MOVFF   POSTINC0, r0x07
00B0 CFE7 F000 01800         MOVFF   INDF0, r0x08
00B4 0E00      01801         MOVLW   LOW(_int_bit_ormask)
00B6 2400      01802         ADDWF   r0x06, W
00B8 6E00      01803         MOVWF   r0x09
00BA 6A00      01804         CLRF    r0x0a
00BC 0E00      01805         MOVLW   HIGH(_int_bit_ormask)
00BE 2200      01806         ADDWFC  r0x0a, F
00C0 6A00      01807         CLRF    r0x0b
00C2 0E00      01808         MOVLW   UPPER(_int_bit_ormask)
00C4 2200      01809         ADDWFC  r0x0b, F
00C6 C000 FFF6 01810         MOVFF   r0x09, TBLPTRL
00CA C000 FFF7 01811         MOVFF   r0x0a, TBLPTRH
00CE C000 FFF8 01812         MOVFF   r0x0b, TBLPTRU
00D2 0009      01813         TBLRD*+ 
00D4 CFF5 F000 01814         MOVFF   TABLAT, r0x09
00D8 0009      01815         TBLRD*+ 
00DA CFF5 F000 01816         MOVFF   TABLAT, r0x0a
00DE 5000      01817         MOVF    r0x09, W
00E0 1600      01818         ANDWF   r0x07, F
00E2 5000      01819         MOVF    r0x0a, W
00E4 1600      01820         ANDWF   r0x08, F
00E6 5000      01821         MOVF    r0x07, W
00E8 1000      01822         IORWF   r0x08, W
00EA E000      01823         BZ      _00141_DS_
               01824 ;       .line   133; main.c     outputs[input] |= current_preset[bus].outputs;
00EC 0E00      01825         MOVLW   LOW(_inout_map_build_outputs_1_1)
00EE 2400      01826         ADDWF   r0x06, W
00F0 6E00      01827         MOVWF   r0x07
00F2 6A00      01828         CLRF    r0x08
00F4 0E00      01829         MOVLW   HIGH(_inout_map_build_outputs_1_1)
00F6 2200      01830         ADDWFC  r0x08, F
00F8 C000 FFE1 01831         MOVFF   r0x07, FSR0L
00FC C000 FFE2 01832         MOVFF   r0x08, FSR0H
0100 CFE6 F000 01833         MOVFF   POSTINC0, r0x09
0104 CFE7 F000 01834         MOVFF   INDF0, r0x0a
0108 0E00      01835         MOVLW   LOW(_current_preset)
010A 2400      01836         ADDWF   r0x02, W
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
010C 6E00      01837         MOVWF   r0x0b
010E 6A00      01838         CLRF    r0x0c
0110 0E00      01839         MOVLW   HIGH(_current_preset)
0112 2200      01840         ADDWFC  r0x0c, F
0114 0E02      01841         MOVLW   0x02
0116 2600      01842         ADDWF   r0x0b, F
0118 B0D8      01843         BTFSC   STATUS, 0
011A 2A00      01844         INCF    r0x0c, F
011C C000 FFE1 01845         MOVFF   r0x0b, FSR0L
0120 C000 FFE2 01846         MOVFF   r0x0c, FSR0H
0124 CFE6 F000 01847         MOVFF   POSTINC0, r0x0b
0128 CFE7 F000 01848         MOVFF   INDF0, r0x0c
012C 5000      01849         MOVF    r0x0b, W
012E 1200      01850         IORWF   r0x09, F
0130 5000      01851         MOVF    r0x0c, W
0132 1200      01852         IORWF   r0x0a, F
0134 C000 FFE1 01853         MOVFF   r0x07, FSR0L
0138 C000 FFE2 01854         MOVFF   r0x08, FSR0H
013C C000 FFE6 01855         MOVFF   r0x09, POSTINC0
0140 C000 FFE7 01856         MOVFF   r0x0a, INDF0
0144           01857 _00141_DS_:
               01858 ;       .line   131; main.c     for(input=0;input<16;input++){
0144 2A00      01859         INCF    r0x06, F
0146 2A00      01860         INCF    r0x06, F
0148 2A00      01861         INCF    r0x05, F
014A D000      01862         BRA     _00139_DS_
014C           01863 _00176_DS_:
014C C000 F000 01864         MOVFF   r0x05, r0x00
               01865 ;       .line   130; main.c     for(bus=0;bus<16;bus++){
0150 0E04      01866         MOVLW   0x04
0152 2600      01867         ADDWF   r0x02, F
0154 2A00      01868         INCF    r0x01, F
0156 D000      01869         BRA     _00143_DS_
0158           01870 _00149_DS_:
               01871 ;       .line   129; main.c     for(input=0;input<16;input++){
0158 2A00      01872         INCF    r0x00, F
015A D000      01873         BRA     _00147_DS_
015C           01874 _00174_DS_:
               01875 ;       .line   137; main.c     for(input=0;input<16;input++){
015C 6A00      01876         CLRF    r0x00
015E 6A00      01877         CLRF    r0x01
0160 6A00      01878         CLRF    r0x02
0162 6A00      01879         CLRF    r0x03
0164 6A00      01880         CLRF    r0x04
0166 6A00      01881         CLRF    r0x05
0168           01882 _00155_DS_:
0168 0E10      01883         MOVLW   0x10
016A 5C00      01884         SUBWF   r0x00, W
016C B0D8      01885         BTFSC   STATUS, 0
016E D000      01886         BRA     _00159_DS_
               01887 ;       .line   139; main.c     for(output=0;output<16;output++)
0170 0E00      01888         MOVLW   LOW(_midi_inout_map)
0172 2400      01889         ADDWF   r0x01, W
0174 6E00      01890         MOVWF   r0x06
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0176 0E00      01891         MOVLW   HIGH(_midi_inout_map)
0178 2000      01892         ADDWFC  r0x02, W
017A 6E00      01893         MOVWF   r0x07
017C 0E00      01894         MOVLW   LOW(_inout_map_build_outputs_1_1)
017E 2400      01895         ADDWF   r0x03, W
0180 6E00      01896         MOVWF   r0x08
0182 6A00      01897         CLRF    r0x09
0184 0E00      01898         MOVLW   HIGH(_inout_map_build_outputs_1_1)
0186 2200      01899         ADDWFC  r0x09, F
0188 6A00      01900         CLRF    r0x0a
018A 6A00      01901         CLRF    r0x0b
018C 6A00      01902         CLRF    r0x0c
018E           01903 _00151_DS_:
018E 0E10      01904         MOVLW   0x10
0190 5C00      01905         SUBWF   r0x0b, W
0192 E200      01906         BC      _00154_DS_
               01907 ;       .line   140; main.c     if(outputs[input]&int_bit_ormask[output])
0194 C000 FFE1 01908         MOVFF   r0x08, FSR0L
0198 C000 FFE2 01909         MOVFF   r0x09, FSR0H
019C CFE6 F000 01910         MOVFF   POSTINC0, r0x0d
01A0 CFE7 F000 01911         MOVFF   INDF0, r0x0e
01A4 0E00      01912         MOVLW   LOW(_int_bit_ormask)
01A6 2400      01913         ADDWF   r0x0c, W
01A8 6E00      01914         MOVWF   r0x0f
01AA 6A00      01915         CLRF    r0x10
01AC 0E00      01916         MOVLW   HIGH(_int_bit_ormask)
01AE 2200      01917         ADDWFC  r0x10, F
01B0 6A00      01918         CLRF    r0x11
01B2 0E00      01919         MOVLW   UPPER(_int_bit_ormask)
01B4 2200      01920         ADDWFC  r0x11, F
01B6 C000 FFF6 01921         MOVFF   r0x0f, TBLPTRL
01BA C000 FFF7 01922         MOVFF   r0x10, TBLPTRH
01BE C000 FFF8 01923         MOVFF   r0x11, TBLPTRU
01C2 0009      01924         TBLRD*+ 
01C4 CFF5 F000 01925         MOVFF   TABLAT, r0x0f
01C8 0009      01926         TBLRD*+ 
01CA CFF5 F000 01927         MOVFF   TABLAT, r0x10
01CE 5000      01928         MOVF    r0x0f, W
01D0 1600      01929         ANDWF   r0x0d, F
01D2 5000      01930         MOVF    r0x10, W
01D4 1600      01931         ANDWF   r0x0e, F
01D6 5000      01932         MOVF    r0x0d, W
01D8 1000      01933         IORWF   r0x0e, W
01DA E000      01934         BZ      _00153_DS_
               01935 ;       .line   141; main.c     midi_inout_map[input][i++]=output;
01DC C000 F000 01936         MOVFF   r0x0a, r0x0d
01E0 2A00      01937         INCF    r0x0a, F
01E2 5000      01938         MOVF    r0x06, W
01E4 2600      01939         ADDWF   r0x0d, F
01E6 5000      01940         MOVF    r0x07, W
01E8 6A00      01941         CLRF    r0x0e
01EA 2200      01942         ADDWFC  r0x0e, F
01EC C000 FFE1 01943         MOVFF   r0x0d, FSR0L
01F0 C000 FFE2 01944         MOVFF   r0x0e, FSR0H
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01F4 C000 FFE7 01945         MOVFF   r0x0b, INDF0
01F8           01946 _00153_DS_:
               01947 ;       .line   139; main.c     for(output=0;output<16;output++)
01F8 2A00      01948         INCF    r0x0c, F
01FA 2A00      01949         INCF    r0x0c, F
01FC 2A00      01950         INCF    r0x0b, F
01FE D000      01951         BRA     _00151_DS_
0200           01952 _00154_DS_:
               01953 ;       .line   142; main.c     midi_inout_map[input][i] = 0xff;
0200 0E00      01954         MOVLW   LOW(_midi_inout_map)
0202 2400      01955         ADDWF   r0x04, W
0204 6E00      01956         MOVWF   r0x06
0206 0E00      01957         MOVLW   HIGH(_midi_inout_map)
0208 2000      01958         ADDWFC  r0x05, W
020A 6E00      01959         MOVWF   r0x07
020C 5000      01960         MOVF    r0x06, W
020E 2600      01961         ADDWF   r0x0a, F
0210 5000      01962         MOVF    r0x07, W
0212 6A00      01963         CLRF    r0x08
0214 2200      01964         ADDWFC  r0x08, F
0216 C000 FFE1 01965         MOVFF   r0x0a, FSR0L
021A C000 FFE2 01966         MOVFF   r0x08, FSR0H
021E 0EFF      01967         MOVLW   0xff
0220 6EE7      01968         MOVWF   INDF0
               01969 ;       .line   137; main.c     for(input=0;input<16;input++){
0222 0E10      01970         MOVLW   0x10
0224 2600      01971         ADDWF   r0x01, F
0226 B0D8      01972         BTFSC   STATUS, 0
0228 2A00      01973         INCF    r0x02, F
022A 2A00      01974         INCF    r0x03, F
022C 2A00      01975         INCF    r0x03, F
022E 0E10      01976         MOVLW   0x10
0230 2600      01977         ADDWF   r0x04, F
0232 B0D8      01978         BTFSC   STATUS, 0
0234 2A00      01979         INCF    r0x05, F
0236 2A00      01980         INCF    r0x00, F
0238 D000      01981         BRA     _00155_DS_
023A           01982 _00159_DS_:
023A CFEC F000 01983         MOVFF   PREINC1, r0x11
023E CFEC F000 01984         MOVFF   PREINC1, r0x10
0242 CFEC F000 01985         MOVFF   PREINC1, r0x0f
0246 CFEC F000 01986         MOVFF   PREINC1, r0x0e
024A CFEC F000 01987         MOVFF   PREINC1, r0x0d
024E CFEC F000 01988         MOVFF   PREINC1, r0x0c
0252 CFEC F000 01989         MOVFF   PREINC1, r0x0b
0256 CFEC F000 01990         MOVFF   PREINC1, r0x0a
025A CFEC F000 01991         MOVFF   PREINC1, r0x09
025E CFEC F000 01992         MOVFF   PREINC1, r0x08
0262 CFEC F000 01993         MOVFF   PREINC1, r0x07
0266 CFEC F000 01994         MOVFF   PREINC1, r0x06
026A CFEC F000 01995         MOVFF   PREINC1, r0x05
026E CFEC F000 01996         MOVFF   PREINC1, r0x04
0272 CFEC F000 01997         MOVFF   PREINC1, r0x03
0276 CFEC F000 01998         MOVFF   PREINC1, r0x02
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
027A CFEC F000 01999         MOVFF   PREINC1, r0x01
027E CFEC F000 02000         MOVFF   PREINC1, r0x00
0282 0012      02001         RETURN  
               02002 
               02003 ; ; Starting pCode block
               02004 S_main__preset_init     code
0000           02005 _preset_init:
               02006 ;       .line   115; main.c     void preset_init(unsigned char empty) __wparam{
0000 CFD9 FFED 02007         MOVFF   FSR2L, POSTDEC1
0004 CFE9 FFD9 02008         MOVFF   FSR1L, FSR2L
0008 C000 FFED 02009         MOVFF   r0x00, POSTDEC1
000C C000 FFED 02010         MOVFF   r0x01, POSTDEC1
0010 C000 FFED 02011         MOVFF   r0x02, POSTDEC1
0014 C000 FFED 02012         MOVFF   r0x03, POSTDEC1
0018 C000 FFED 02013         MOVFF   r0x04, POSTDEC1
001C C000 FFED 02014         MOVFF   r0x05, POSTDEC1
0020 C000 FFED 02015         MOVFF   r0x06, POSTDEC1
0024 C000 FFED 02016         MOVFF   r0x07, POSTDEC1
0028 C000 FFED 02017         MOVFF   r0x08, POSTDEC1
002C C000 FFED 02018         MOVFF   r0x09, POSTDEC1
0030 C000 FFED 02019         MOVFF   r0x0a, POSTDEC1
0034 C000 FFED 02020         MOVFF   r0x0b, POSTDEC1
0038 C000 FFED 02021         MOVFF   r0x0c, POSTDEC1
003C C000 FFED 02022         MOVFF   r0x0d, POSTDEC1
0040 C000 FFED 02023         MOVFF   r0x0e, POSTDEC1
0044 C000 FFED 02024         MOVFF   r0x0f, POSTDEC1
0048 C000 FFED 02025         MOVFF   r0x10, POSTDEC1
004C 6E00      02026         MOVWF   r0x00
               02027 ;       .line   117; main.c     for(i=0;i<16;i++){
004E 6A00      02028         CLRF    r0x01
0050 6A00      02029         CLRF    r0x02
0052 6A00      02030         CLRF    r0x03
0054 6A00      02031         CLRF    r0x04
0056 6A00      02032         CLRF    r0x05
0058 6A00      02033         CLRF    r0x06
005A 6A00      02034         CLRF    r0x07
005C           02035 _00117_DS_:
005C 0E10      02036         MOVLW   0x10
005E 5C00      02037         SUBWF   r0x01, W
0060 B0D8      02038         BTFSC   STATUS, 0
0062 D000      02039         BRA     _00121_DS_
               02040 ;       .line   118; main.c     current_preset[i].inputs = current_preset[i].outputs = (empty ? 0 : int_bit_ormask[i]);
0064 0E00      02041         MOVLW   LOW(_current_preset)
0066 2400      02042         ADDWF   r0x02, W
0068 6E00      02043         MOVWF   r0x08
006A 6A00      02044         CLRF    r0x09
006C 0E00      02045         MOVLW   HIGH(_current_preset)
006E 2200      02046         ADDWFC  r0x09, F
0070 0E00      02047         MOVLW   LOW(_current_preset)
0072 2400      02048         ADDWF   r0x02, W
0074 6E00      02049         MOVWF   r0x0a
0076 6A00      02050         CLRF    r0x0b
0078 0E00      02051         MOVLW   HIGH(_current_preset)
007A 2200      02052         ADDWFC  r0x0b, F
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
007C 0E02      02053         MOVLW   0x02
007E 2600      02054         ADDWF   r0x0a, F
0080 B0D8      02055         BTFSC   STATUS, 0
0082 2A00      02056         INCF    r0x0b, F
0084 5000      02057         MOVF    r0x00, W
0086 E000      02058         BZ      _00123_DS_
0088 6A00      02059         CLRF    r0x0c
008A 6A00      02060         CLRF    r0x0d
008C D000      02061         BRA     _00124_DS_
008E           02062 _00123_DS_:
008E 0E00      02063         MOVLW   LOW(_int_bit_ormask)
0090 2400      02064         ADDWF   r0x03, W
0092 6E00      02065         MOVWF   r0x0e
0094 6A00      02066         CLRF    r0x0f
0096 0E00      02067         MOVLW   HIGH(_int_bit_ormask)
0098 2200      02068         ADDWFC  r0x0f, F
009A 6A00      02069         CLRF    r0x10
009C 0E00      02070         MOVLW   UPPER(_int_bit_ormask)
009E 2200      02071         ADDWFC  r0x10, F
00A0 C000 FFF6 02072         MOVFF   r0x0e, TBLPTRL
00A4 C000 FFF7 02073         MOVFF   r0x0f, TBLPTRH
00A8 C000 FFF8 02074         MOVFF   r0x10, TBLPTRU
00AC 0009      02075         TBLRD*+ 
00AE CFF5 F000 02076         MOVFF   TABLAT, r0x0c
00B2 0009      02077         TBLRD*+ 
00B4 CFF5 F000 02078         MOVFF   TABLAT, r0x0d
00B8           02079 _00124_DS_:
00B8 C000 FFE1 02080         MOVFF   r0x0a, FSR0L
00BC C000 FFE2 02081         MOVFF   r0x0b, FSR0H
00C0 C000 FFE6 02082         MOVFF   r0x0c, POSTINC0
00C4 C000 FFE7 02083         MOVFF   r0x0d, INDF0
00C8 C000 FFE1 02084         MOVFF   r0x08, FSR0L
00CC C000 FFE2 02085         MOVFF   r0x09, FSR0H
00D0 C000 FFE6 02086         MOVFF   r0x0c, POSTINC0
00D4 C000 FFE7 02087         MOVFF   r0x0d, INDF0
               02088 ;       .line   119; main.c     midi_inout_map[i][0]= (empty ? 0xff : i);
00D8 0E00      02089         MOVLW   LOW(_midi_inout_map)
00DA 2400      02090         ADDWF   r0x04, W
00DC 6E00      02091         MOVWF   r0x08
00DE 0E00      02092         MOVLW   HIGH(_midi_inout_map)
00E0 2000      02093         ADDWFC  r0x05, W
00E2 6E00      02094         MOVWF   r0x09
00E4 5000      02095         MOVF    r0x00, W
00E6 E000      02096         BZ      _00125_DS_
00E8 0EFF      02097         MOVLW   0xff
00EA 6E00      02098         MOVWF   r0x0a
00EC D000      02099         BRA     _00126_DS_
00EE           02100 _00125_DS_:
00EE C000 F000 02101         MOVFF   r0x01, r0x0a
00F2           02102 _00126_DS_:
00F2 C000 FFE1 02103         MOVFF   r0x08, FSR0L
00F6 C000 FFE2 02104         MOVFF   r0x09, FSR0H
00FA C000 FFE7 02105         MOVFF   r0x0a, INDF0
               02106 ;       .line   120; main.c     midi_inout_map[i][1]=0xff;//terminate           
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00FE 0E00      02107         MOVLW   LOW(_midi_inout_map)
0100 2400      02108         ADDWF   r0x06, W
0102 6E00      02109         MOVWF   r0x08
0104 0E00      02110         MOVLW   HIGH(_midi_inout_map)
0106 2000      02111         ADDWFC  r0x07, W
0108 6E00      02112         MOVWF   r0x09
010A 2A00      02113         INCF    r0x08, F
010C B0D8      02114         BTFSC   STATUS, 0
010E 2A00      02115         INCF    r0x09, F
0110 C000 FFE1 02116         MOVFF   r0x08, FSR0L
0114 C000 FFE2 02117         MOVFF   r0x09, FSR0H
0118 0EFF      02118         MOVLW   0xff
011A 6EE7      02119         MOVWF   INDF0
               02120 ;       .line   117; main.c     for(i=0;i<16;i++){
011C 0E04      02121         MOVLW   0x04
011E 2600      02122         ADDWF   r0x02, F
0120 2A00      02123         INCF    r0x03, F
0122 2A00      02124         INCF    r0x03, F
0124 0E10      02125         MOVLW   0x10
0126 2600      02126         ADDWF   r0x04, F
0128 B0D8      02127         BTFSC   STATUS, 0
012A 2A00      02128         INCF    r0x05, F
012C 0E10      02129         MOVLW   0x10
012E 2600      02130         ADDWF   r0x06, F
0130 B0D8      02131         BTFSC   STATUS, 0
0132 2A00      02132         INCF    r0x07, F
0134 2A00      02133         INCF    r0x01, F
0136 D000      02134         BRA     _00117_DS_
0138           02135 _00121_DS_:
0138 CFEC F000 02136         MOVFF   PREINC1, r0x10
013C CFEC F000 02137         MOVFF   PREINC1, r0x0f
0140 CFEC F000 02138         MOVFF   PREINC1, r0x0e
0144 CFEC F000 02139         MOVFF   PREINC1, r0x0d
0148 CFEC F000 02140         MOVFF   PREINC1, r0x0c
014C CFEC F000 02141         MOVFF   PREINC1, r0x0b
0150 CFEC F000 02142         MOVFF   PREINC1, r0x0a
0154 CFEC F000 02143         MOVFF   PREINC1, r0x09
0158 CFEC F000 02144         MOVFF   PREINC1, r0x08
015C CFEC F000 02145         MOVFF   PREINC1, r0x07
0160 CFEC F000 02146         MOVFF   PREINC1, r0x06
0164 CFEC F000 02147         MOVFF   PREINC1, r0x05
0168 CFEC F000 02148         MOVFF   PREINC1, r0x04
016C CFEC F000 02149         MOVFF   PREINC1, r0x03
0170 CFEC F000 02150         MOVFF   PREINC1, r0x02
0174 CFEC F000 02151         MOVFF   PREINC1, r0x01
0178 CFEC F000 02152         MOVFF   PREINC1, r0x00
017C CFEC FFD9 02153         MOVFF   PREINC1, FSR2L
0180 0012      02154         RETURN  
               02155 
               02156 ; ; Starting pCode block
               02157 S_main__preset_store    code
0000           02158 _preset_store:
               02159 ;       .line   109; main.c     void preset_store(unsigned char num) __wparam{
0000 CFD9 FFED 02160         MOVFF   FSR2L, POSTDEC1
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0004 CFE9 FFD9 02161         MOVFF   FSR1L, FSR2L
0008 C000 FFED 02162         MOVFF   r0x00, POSTDEC1
000C C000 FFED 02163         MOVFF   r0x01, POSTDEC1
0010 C000 FFED 02164         MOVFF   r0x02, POSTDEC1
0014 C000 FFED 02165         MOVFF   r0x03, POSTDEC1
0018 C000 FFED 02166         MOVFF   r0x04, POSTDEC1
001C 6E00      02167         MOVWF   r0x00
               02168 ;       .line   110; main.c     unsigned int addr=num;
001E 6A00      02169         CLRF    r0x01
               02170 ;       .line   111; main.c     addr <<=6;
0020 3200      02171         RRCF    r0x01, F
0022 3200      02172         RRCF    r0x00, F
0024 3200      02173         RRCF    r0x01, F
0026 3200      02174         RRCF    r0x00, F
0028 3000      02175         RRCF    r0x01, W
002A 0BC0      02176         ANDLW   0xc0
002C 1800      02177         XORWF   r0x00, W
002E 1A00      02178         XORWF   r0x00, F
0030 1800      02179         XORWF   r0x00, W
0032 6E00      02180         MOVWF   r0x01
               02181 ;       .line   112; main.c     MIOS_BANKSTICK_WritePage(addr,current_preset);  
0034 0E00      02182         MOVLW   HIGH(_current_preset)
0036 6E00      02183         MOVWF   r0x03
0038 0E00      02184         MOVLW   LOW(_current_preset)
003A 6E00      02185         MOVWF   r0x02
003C 0E80      02186         MOVLW   0x80
003E 6E00      02187         MOVWF   r0x04
0040 5000      02188         MOVF    r0x04, W
0042 6EED      02189         MOVWF   POSTDEC1
0044 5000      02190         MOVF    r0x03, W
0046 6EED      02191         MOVWF   POSTDEC1
0048 5000      02192         MOVF    r0x02, W
004A 6EED      02193         MOVWF   POSTDEC1
004C 5000      02194         MOVF    r0x01, W
004E 6EED      02195         MOVWF   POSTDEC1
0050 5000      02196         MOVF    r0x00, W
0052 EC00 F000 02197         CALL    _MIOS_BANKSTICK_WritePage
0056 0E04      02198         MOVLW   0x04
0058 26E9      02199         ADDWF   FSR1L, F
005A CFEC F000 02200         MOVFF   PREINC1, r0x04
005E CFEC F000 02201         MOVFF   PREINC1, r0x03
0062 CFEC F000 02202         MOVFF   PREINC1, r0x02
0066 CFEC F000 02203         MOVFF   PREINC1, r0x01
006A CFEC F000 02204         MOVFF   PREINC1, r0x00
006E CFEC FFD9 02205         MOVFF   PREINC1, FSR2L
0072 0012      02206         RETURN  
               02207 
               02208 ; ; Starting pCode block
               02209 S_main__preset_load     code
0000           02210 _preset_load:
               02211 ;       .line   102; main.c     void preset_load(unsigned char num) __wparam{
0000 CFD9 FFED 02212         MOVFF   FSR2L, POSTDEC1
0004 CFE9 FFD9 02213         MOVFF   FSR1L, FSR2L
0008 C000 FFED 02214         MOVFF   r0x00, POSTDEC1
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
000C C000 FFED 02215         MOVFF   r0x01, POSTDEC1
0010 C000 FFED 02216         MOVFF   r0x02, POSTDEC1
0014 C000 FFED 02217         MOVFF   r0x03, POSTDEC1
0018 C000 FFED 02218         MOVFF   r0x04, POSTDEC1
001C 6E00      02219         MOVWF   r0x00
               02220 ;       .line   103; main.c     unsigned int addr=num;
001E 6A00      02221         CLRF    r0x01
               02222 ;       .line   104; main.c     addr <<=6;
0020 3200      02223         RRCF    r0x01, F
0022 3200      02224         RRCF    r0x00, F
0024 3200      02225         RRCF    r0x01, F
0026 3200      02226         RRCF    r0x00, F
0028 3000      02227         RRCF    r0x01, W
002A 0BC0      02228         ANDLW   0xc0
002C 1800      02229         XORWF   r0x00, W
002E 1A00      02230         XORWF   r0x00, F
0030 1800      02231         XORWF   r0x00, W
0032 6E00      02232         MOVWF   r0x01
               02233 ;       .line   105; main.c     MIOS_BANKSTICK_ReadPage(addr,current_preset);
0034 0E00      02234         MOVLW   HIGH(_current_preset)
0036 6E00      02235         MOVWF   r0x03
0038 0E00      02236         MOVLW   LOW(_current_preset)
003A 6E00      02237         MOVWF   r0x02
003C 0E80      02238         MOVLW   0x80
003E 6E00      02239         MOVWF   r0x04
0040 5000      02240         MOVF    r0x04, W
0042 6EED      02241         MOVWF   POSTDEC1
0044 5000      02242         MOVF    r0x03, W
0046 6EED      02243         MOVWF   POSTDEC1
0048 5000      02244         MOVF    r0x02, W
004A 6EED      02245         MOVWF   POSTDEC1
004C 5000      02246         MOVF    r0x01, W
004E 6EED      02247         MOVWF   POSTDEC1
0050 5000      02248         MOVF    r0x00, W
0052 EC00 F000 02249         CALL    _MIOS_BANKSTICK_ReadPage
0056 0E04      02250         MOVLW   0x04
0058 26E9      02251         ADDWF   FSR1L, F
005A CFEC F000 02252         MOVFF   PREINC1, r0x04
005E CFEC F000 02253         MOVFF   PREINC1, r0x03
0062 CFEC F000 02254         MOVFF   PREINC1, r0x02
0066 CFEC F000 02255         MOVFF   PREINC1, r0x01
006A CFEC F000 02256         MOVFF   PREINC1, r0x00
006E CFEC FFD9 02257         MOVFF   PREINC1, FSR2L
0072 0012      02258         RETURN  
               02259 
               02260 ; ; Starting pCode block
               02261 S_main__Init    code
0000           02262 _Init:
               02263 ;       .line   86; main.c      MIOS_SRIO_UpdateFrqSet(3); // ms
0000 0E03      02264         MOVLW   0x03
0002 EC00 F000 02265         CALL    _MIOS_SRIO_UpdateFrqSet
               02266 ;       .line   87; main.c      MIOS_SRIO_NumberSet(3);//need 20 inputs / outputs 
0006 0E03      02267         MOVLW   0x03
0008 EC00 F000 02268         CALL    _MIOS_SRIO_NumberSet
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               02269 ;       .line   88; main.c      MIOS_SRIO_DebounceSet(20);
000C 0E14      02270         MOVLW   0x14
000E EC00 F000 02271         CALL    _MIOS_SRIO_DebounceSet
               02272 ;       .line   89; main.c      MIOS_BANKSTICK_CtrlSet(0x40);//stick 0, verify disabled
0012 0E40      02273         MOVLW   0x40
0014 EC00 F000 02274         CALL    _MIOS_BANKSTICK_CtrlSet
               02275 ;       .line   91; main.c      current_screen_num = MIOS_EEPROM_Read(0x00);
0018 0E00      02276         MOVLW   0x00
001A EC00 F000 02277         CALL    _MIOS_EEPROM_Read
001E 0000      02278         BANKSEL _current_screen_num
0020 6F00      02279         MOVWF   _current_screen_num, B
               02280 ;       .line   92; main.c      current_preset_num = MIOS_EEPROM_Read(0x01);
0022 0E01      02281         MOVLW   0x01
0024 EC00 F000 02282         CALL    _MIOS_EEPROM_Read
0028 0000      02283         BANKSEL _current_preset_num
002A 6F00      02284         MOVWF   _current_preset_num, B
               02285 ;       .line   93; main.c      current_bus_num = MIOS_EEPROM_Read(0x02);
002C 0E02      02286         MOVLW   0x02
002E EC00 F000 02287         CALL    _MIOS_EEPROM_Read
0032 0000      02288         BANKSEL _current_bus_num
0034 6F00      02289         MOVWF   _current_bus_num, B
0036 0000      02290         BANKSEL _current_preset_num
               02291 ;       .line   94; main.c      preset_load(current_preset_num);
0038 5100      02292         MOVF    _current_preset_num, W, B
003A EC00 F000 02293         CALL    _preset_load
               02294 ;       .line   96; main.c      screen_print();
003E EC00 F000 02295         CALL    _screen_print
0042 0012      02296         RETURN  
               02297 
               02298 ; ; Starting pCode block for Ival
               02299         code
0000           02300 _int_bit_ormask:
0000 0001 0002 02301         DB      0x01, 0x00, 0x02, 0x00, 0x04, 0x00, 0x08, 0x00, 0x10, 0x00, 0x20, 0x00
0004 0004 0008
0008 0010 0020
000C 0040 0080 02302         DB      0x40, 0x00, 0x80, 0x00, 0x00, 0x01, 0x00, 0x02, 0x00, 0x04, 0x00, 0x08
0010 0100 0200
0014 0400 0800
0018 1000 2000 02303         DB      0x00, 0x10, 0x00, 0x20, 0x00, 0x40, 0x00, 0x80
001C 4000 8000
               02304 
               02305 
               02306 ; Statistics:
               02307 ; code size:     4064 (0x0fe0) bytes ( 3.10%)
               02308 ;                2032 (0x07f0) words
               02309 ; udata size:     352 (0x0160) bytes (27.50%)
               02310 ; access size:     18 (0x0012) bytes
               02311 
               02312 
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

FSR0H                             00000FE2
FSR0L                             00000FE1
FSR1L                             00000FE9
FSR2L                             00000FD9
INDF0                             00000FE7
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PLUSW2                            00000FDB
POSTDEC1                          00000FED
POSTINC0                          00000FE6
PREINC1                           00000FEC
PRODH                             00000FF4
PRODL                             00000FF3
STATUS                            00000FD8
TABLAT                            00000FF5
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRU                           00000FF8
WREG                              00000FE8
_00117_DS_                        0000005C
_00121_DS_                        00000138
_00123_DS_                        0000008E
_00124_DS_                        000000B8
_00125_DS_                        000000EE
_00126_DS_                        000000F2
_00135_DS_                        0000004C
_00138_DS_                        00000076
_00139_DS_                        0000009C
_00141_DS_                        00000144
_00143_DS_                        00000084
_00147_DS_                        00000078
_00149_DS_                        00000158
_00151_DS_                        0000018E
_00153_DS_                        000001F8
_00154_DS_                        00000200
_00155_DS_                        00000168
_00159_DS_                        0000023A
_00174_DS_                        0000015C
_00176_DS_                        0000014C
_00182_DS_                        00000012
_00183_DS_                        00000090
_00185_DS_                        000000AE
_00187_DS_                        000000CC
_00189_DS_                        000000EA
_00191_DS_                        00000108
_00192_DS_                        00000174
_00194_DS_                        000001EE
_00203_DS_                        00000080
_00237_DS_                        00000044
_00239_DS_                        00000052
_00241_DS_                        00000024
_00242_DS_                        00000026
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_00252_DS_                        00000010
_00254_DS_                        0000007C
_00257_DS_                        000000D8
_00263_DS_                        0000009C
_00266_DS_                        00000048
_00269_DS_                        00000058
_00270_DS_                        000000E0
_00283_DS_                        0000001A
_00284_DS_                        00000026
_00288_DS_                        000000B6
_00297_DS_                        0000004A
_00298_DS_                        0000005A
_00299_DS_                        000000BE
_00301_DS_                        0000010E
_00303_DS_                        00000116
_00304_DS_                        0000011E
_00306_DS_                        000001E4
_00307_DS_                        0000026A
_00308_DS_                        00000270
_00310_DS_                        00000336
_00311_DS_                        000003BA
_00316_DS_                        0000041C
_00318_DS_                        00000404
_00323_DS_                        000003C0
_00324_DS_                        0000045C
_00326_DS_                        00000460
_00328_DS_                        000001C6
_00329_DS_                        000001D2
_00330_DS_                        00000252
_00331_DS_                        0000025A
_00332_DS_                        00000318
_00333_DS_                        00000324
_00334_DS_                        000003A2
_00335_DS_                        000003AA
_00359_DS_                        000000AE
_00360_DS_                        0000024A
_00361_DS_                        0000024C
_00362_DS_                        0000039A
_00363_DS_                        0000039C
_00369_DS_                        0000007E
_00370_DS_                        00000086
_00371_DS_                        0000008E
_00372_DS_                        00000096
_00379_DS_                        0000009C
_00381_DS_                        000000B4
_00391_DS_                        0000006E
_00393_DS_                        000000B0
_00400_DS_                        00000062
_00402_DS_                        000000B0
_00404_DS_                        000000B4
_00407_DS_                        00000050
_00408_DS_                        00000054
_10456_DS_                        00000008
_ADCON0                           00000000
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_ADCON0bits                       00000000
_ADCON1                           00000000
_ADCON1bits                       00000000
_ADRESH                           00000000
_ADRESL                           00000000
_AIN_NotifyChange                 00000000
_BSR                              00000000
_CCP1CON                          00000000
_CCP1CONbits                      00000000
_CCP2CON                          00000000
_CCP2CONbits                      00000000
_CCPR1H                           00000000
_CCPR1L                           00000000
_CCPR2H                           00000000
_CCPR2L                           00000000
_DIN_NotifyToggle                 00000000
_DISPLAY_Init                     00000000
_DISPLAY_Tick                     00000000
_EEADR                            00000000
_EECON1                           00000000
_EECON1bits                       00000000
_EECON2                           00000000
_EEDATA                           00000000
_ENC_NotifyChange                 00000000
_FSR0H                            00000000
_FSR0L                            00000000
_FSR1H                            00000000
_FSR1L                            00000000
_FSR2H                            00000000
_FSR2L                            00000000
_INDF0                            00000000
_INDF1                            00000000
_INDF2                            00000000
_INTCON                           00000000
_INTCON2                          00000000
_INTCON2bits                      00000000
_INTCON3                          00000000
_INTCON3bits                      00000000
_INTCONbits                       00000000
_IPR1                             00000000
_IPR1bits                         00000000
_IPR2                             00000000
_IPR2bits                         00000000
_Init                             00000000
_LATA                             00000000
_LATAbits                         00000000
_LATB                             00000000
_LATBbits                         00000000
_LATC                             00000000
_LATCbits                         00000000
_LATD                             00000000
_LATDbits                         00000000
_LATE                             00000000
_LATEbits                         00000000
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_LVDCON                           00000000
_LVDCONbits                       00000000
_MIOS_BANKSTICK_CtrlSet           00000000
_MIOS_BANKSTICK_ReadPage          00000000
_MIOS_BANKSTICK_WritePage         00000000
_MIOS_BOX_CFG0                    00000000
_MIOS_BOX_CFG1                    00000000
_MIOS_BOX_STAT                    00000000
_MIOS_DOUT_PinSet                 00000000
_MIOS_DOUT_SRSet                  00000000
_MIOS_EEPROM_Read                 00000000
_MIOS_EEPROM_Write                00000000
_MIOS_ENC_PIN_TABLE               00000000
_MIOS_HLP_GetBitORMask            00000000
_MIOS_MIDI_TxBufferPut            00000000
_MIOS_MPROC_EVENT_TABLE           00000000
_MIOS_PARAMETER1                  00000000
_MIOS_PARAMETER2                  00000000
_MIOS_PARAMETER3                  00000000
_MIOS_SRIO_DebounceSet            00000000
_MIOS_SRIO_NumberSet              00000000
_MIOS_SRIO_UpdateFrqSet           00000000
_MIOS_TIMER_Init                  00000000
_MIOS_TIMER_Stop                  00000000
_MPROC_NotifyFoundEvent           00000000
_MPROC_NotifyReceivedByte         00000000
_MPROC_NotifyReceivedByte_fx_status_1_1  0000000A
_MPROC_NotifyReceivedEvnt         00000000
_MPROC_NotifyTimeout              00000000
_OSCCON                           00000000
_OSCCONbits                       00000000
_PCL                              00000000
_PCLATH                           00000000
_PCLATU                           00000000
_PIE1                             00000000
_PIE1bits                         00000000
_PIE2                             00000000
_PIE2bits                         00000000
_PIR1                             00000000
_PIR1bits                         00000000
_PIR2                             00000000
_PIR2bits                         00000000
_PLUSW0                           00000000
_PLUSW1                           00000000
_PLUSW2                           00000000
_PORTA                            00000000
_PORTAbits                        00000000
_PORTB                            00000000
_PORTBbits                        00000000
_PORTC                            00000000
_PORTCbits                        00000000
_PORTD                            00000000
_PORTDbits                        00000000
_PORTE                            00000000
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_PORTEbits                        00000000
_POSTDEC0                         00000000
_POSTDEC1                         00000000
_POSTDEC2                         00000000
_POSTINC0                         00000000
_POSTINC1                         00000000
_POSTINC2                         00000000
_PR2                              00000000
_PREINC0                          00000000
_PREINC1                          00000000
_PREINC2                          00000000
_PRODH                            00000000
_PRODL                            00000000
_RCON                             00000000
_RCONbits                         00000000
_RCREG                            00000000
_RCSTA                            00000000
_RCSTAbits                        00000000
_SPBRG                            00000000
_SR_Service_Finish                00000000
_SR_Service_Prepare               00000000
_SSPADD                           00000000
_SSPBUF                           00000000
_SSPCON1                          00000000
_SSPCON1bits                      00000000
_SSPCON2                          00000000
_SSPCON2bits                      00000000
_SSPSTAT                          00000000
_SSPSTATbits                      00000000
_STATUS                           00000000
_STATUSbits                       00000000
_STKPTR                           00000000
_STKPTRbits                       00000000
_T0CON                            00000000
_T0CONbits                        00000000
_T1CON                            00000000
_T1CONbits                        00000000
_T2CON                            00000000
_T2CONbits                        00000000
_T3CON                            00000000
_T3CONbits                        00000000
_TABLAT                           00000000
_TBLPTRH                          00000000
_TBLPTRL                          00000000
_TBLPTRU                          00000000
_TMR0H                            00000000
_TMR0L                            00000000
_TMR1H                            00000000
_TMR1L                            00000000
_TMR2                             00000000
_TMR3H                            00000000
_TMR3L                            00000000
_TOSH                             00000000
_TOSL                             00000000
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_TOSU                             00000000
_TRISA                            00000000
_TRISAbits                        00000000
_TRISB                            00000000
_TRISBbits                        00000000
_TRISC                            00000000
_TRISCbits                        00000000
_TRISD                            00000000
_TRISDbits                        00000000
_TRISE                            00000000
_TRISEbits                        00000000
_TXREG                            00000000
_TXSTA                            00000000
_TXSTAbits                        00000000
_Tick                             00000000
_Timer                            00000000
_WDTCON                           00000000
_WDTCONbits                       00000000
_WREG                             00000000
__18F452                          00000001
_current_bus_num                  00000002
_current_bus_set                  00000000
_current_preset                   00000000
_current_preset_num               00000001
_current_preset_set               00000000
_current_screen_num               00000000
_current_screen_set               00000000
_current_shift_state              00000003
_inout_map_build                  00000000
_inout_map_build_outputs_1_1      00000000
_int_bit_ormask                   00000000
_led_flash_count                  00000008
_led_flash_led                    00000007
_led_flash_set                    00000000
_led_flash_start                  00000000
_led_flash_ticks                  00000009
_midi_inout_map                   00000000
_mios_enc_pin_table               00000000
_mios_mproc_event_table           00000000
_preset_init                      00000000
_preset_load                      00000000
_preset_store                     00000000
_screen_print                     00000000
_timed_function                   00000004
_timed_function_start             00000000
_timed_function_stop              00000000
_timer_ticks_count                00000005
r0x00                             00000010
r0x01                             00000011
r0x02                             00000012
r0x03                             00000013
r0x04                             00000014
r0x05                             00000015
r0x06                             00000016
gpasm-0.13.4 beta               _output/main__mios-gpasm-tmp.asm10-29-2008  12:45:28         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
r0x07                             00000017
r0x08                             00000018
r0x09                             00000019
r0x0a                             0000001A
r0x0b                             0000001B
r0x0c                             0000001C
r0x0d                             0000001D
r0x0e                             0000001E
r0x0f                             0000001F
r0x10                             00000020
r0x11                             00000021


Errors   :       0
Warnings :       0 reported,       0 suppressed
Messages :       0 reported,       0 suppressed

