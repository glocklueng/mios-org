$Id$


Whishlist for future features
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-> see bottom of this document


MIDIboxSEQ V3.4
~~~~~~~~~~~~~~~

  o support for additional 8x8 button/LED matrix as used in Wilba's frontpanel layout


MIDIboxSEQ V3.3
~~~~~~~~~~~~~~~

  o edit page now shows "MUTED" instead of channel number of the currently 
     selected track is muted

  o changed definition format for LED assignments in setup_*.asm

  o it's now possible to invert the polarity of BLM LED cathode lines for the
    case that transistor based sink drivers should be added
    (-> DEFAULT_SRM_CATHODES_INV_MASK)

  o Button/LED Matrix, special behaviour in PATTERN page: shows selected
    pattern, allows to select new pattern (direct and very intuitive access
    to sequences of all 4 pattern groups :)

  o a new NRPN/Loopback CC parameter has been added which allows to set the
    step of a track which should be played from another track via Loopback (CC#64)

    CC value 1-32 are used to set the next step, Value 0 will be ignored
    Example configuration: 
      Track 1: Loopback, Channel #2, CC/CC/CC Mode, CC#A set to 64, Length 4
        Layer A Step 1: 2, Step 2: 0, Step 3: 7, Step 4: 15
      Track 2: common configuration, set some notes or CC to be played by your synthesizer. 
    Press PLAY: Track 2 will play step 2, 3, 7, 15, 2, 3, 7, 15, ... - controlled from Track 1
    Variations: e.g. use different clock divider values/directions/lengths on both tracks

  o Tap Tempo function has been added.
    There are three possibilities to access this function:
    - BPM page (new menu item), tap tempo on GP button #8
    - press&hold MENU button, tap tempo with the PLAY button
    - optional dedicated button (has to be assigned in setup_*.asm)
    Tap the button at least four times to define the BPM tempo.
    If the sequencer is currently stopped, it will start automatically with the 5th tap
    Note that MIOS V1.9f (or higher) is required for this function!

  o Experimental support for polyphonic live recording in Event Mode 4 (Note/Note/Note)
    Please test and give feedback!

  o it's now possible to define the length of a measure (-> OPTions page)
    The length is 16 16th note steps by default, it can be set from 1..256 steps
    This setting affects:
    - the synch-to-measure function for pattern changes (pattern change after x steps)
    - the synch-to-measure function for clock divider reset
    - the loop incrementer in song mode
    - the metronome ("Meas.Note" played after x steps)
    - the song position displayed at song page (shows reference step position)

    Note: for max. steps != track length it makes sense to activate the synch-to-measure 
    function for each track (-> divider page), so that the tracks are always in synch 
    with the reference step position. It can be left deactivated if it is your intention 
    to clock tracks asynchronously to the reference position.

   o new MIDI remote Keys, especially useful in recording mode:
     C-7 + A-4: Decrement step
     C-7 + B-4: Increment step
     C-7 + A#4: Toggle gate of selected step


MIDIboxSEQ V3.2d
~~~~~~~~~~~~~~~~

   o 64k BankSticks now selected by default, user is recommented to 
     adapt setup_*.asm if only 32k BankSticks are connected



MIDIboxSEQ V3.2c
~~~~~~~~~~~~~~~~

   o support for AOUT_NG module

   o J5 gate outputs are working again



MIDIboxSEQ V3.2b
~~~~~~~~~~~~~~~~

   o Re-Release for GPUTILS


MIDIboxSEQ V3.2a
~~~~~~~~~~~~~~~~

   o the record page got a "Toggle Gate" function which allows to set/clear
     the gate trigger of the selected step - use it to delete/recall
     an unintentionally recorded step

   o remote keys not forwarded to MIDI parser/router anymore

   o router settings of second MIDI In now stored in EEPROM

   o the previously introduced pattern and song change via MIDI
     function can now be disabled with the DEFAULT_MIDI_PATTERN_CHANGE_CC
     and DEFAULT_MIDI_SONG_CHANGE_VIA_PC switch within the setup_*.asm file

   o Arpeggiator can play notes in "unsorted order" now.
     Sorting can be enabled/disabled within the "Track Mode" menu.


MIDIboxSEQ V3.2
~~~~~~~~~~~~~~~

   o Song can now be selected via Program Change

   o Pattern of group #1-#4 can now be selected via CC#112..CC#115

   o support for Triplet timebase
     The layout of the clock divider page has been overworked

   o added MIDI clock Auto mode: sequencer switches automatically
     to master mode, when the PLAY button is pressed to start a pattern.
     It will automatically switch to slave mode, when a MIDI clock/Start/Stop/Continue
     event has been received.
     This function (which is enabled by default) can be disabled in the BPM page

   o added external start/stop pin, available at pin J6:SC (RC1 pin)
     of the core module

   o support for second MIDI IN port (located at first MBHP_IIC_MIDI module)

     In order to use this feature, the RI_N line of the IIC module has
     to be connected to J6:SI (RC3 pin) of the core module.

     This MIDI IN port can be used as alternative input for receiving
     Notes (-> Transposer/Arpeggiator), CCs (-> Parameters) or Program Changes

     The second MIDI IN can *not* be used as input for MIDI clock (use the
     MIDI IN port of the core module instead), or for receiving/forwarding
     SysEx data!

   o the MIDI config page has been overworked.
     The MIDI Router can now route events from the second MIDI IN to
     the MIDI OUT ports

   o the scale can now be controlled globally or pattern based.
     In distance to the global scale (which is stored in internal
     EEPROM), the pattern based scale is located within the G1/G2/G3
     or G4 pattern and will be automatically changed when a new pattern
     is selected.
     Only one group can control the scale, this has to be selected in
     the UTIL->OPT page

   o the global scale can now also be controlled via CC#3, and especially 
     via internal loopback. This means, that a track can change the
     scale dynamically if it outputs CCs to the LOOP port.
     The CC works only with enabled "Global Scale" control mode (UTIL->OPT page)

   o the root note of the scale can now be statically selected (by default
     it is derived from the base note of the transposer -> KEYB setting)
     Like the scale, the root note is either controlled globally or from a pattern

   o the paste and clear function is now either applied on the whole track
     (like in V3.1), or only on steps (like in a pre V3.0 versions)
     "Steps only" is the default behaviour (personally I prefer it)
     The behaviour can be configured within the UTIL->OPT page.

   o support for 3 LED digits, which display the BPM in master mode
     "SLA" is displayed in slave mode (no BPM detection available!)
     Schematic can be found at the MIDIbox SEQ V3 Hardware Options page

   o various bugfixes


MIDIboxSEQ V3.1
~~~~~~~~~~~~~~~

   o added new Random Generator page, which replaces the simple Random function
     of the Utility menu.
     Within this page, the intensity of the three parameter layers and
     three trigger layers can be configured separately

   o the "Synch to Measure" function now also resets the track position,
     and especially the progression parameters - you will like the effect :)

   o Support for 64k BankSticks assigned as Song Storage (Mode 4)
     Allows to store up to 32 Songs

     If you've used a 64k BankStick in 32k mode before, the upper
     part won't be initialized. Following procedure is recommented
     for doing this:
       1) Create a Backup of the lower 32k part of the BankStick
          This can be done with MIDI-Ox with following SysEx request:
          F0 00 00 7E 40 00 31 40 00 20 00 F7

          (Note: bit 6:4 of the 6th byte selects the BankStick number, it's assumed
           that the BankStick is connected to CS3 - if not, change the
           number, e.g. for CS7 use "71" instead of "31")
         
         MIDI-Ox should receive 37896 Bytes

         NOTE: in MIDI-Ox please configure the "Delay after F7" to 600 mS
         This can be done under Setup->Configure within the SysEx Tool Window

       2) Change to the FORMAT page and format the song BankStick

       3) upload the previously received 32k BankStick content

   o Song action "Loop x16" was missing. It has been inserted between
     the x15 and "Jump Pos" action, accordingly the "Jump Pos", "Jump Song"
     and "Dump Mixer Map" Actions of existing songs need to be adapted!

   o an incoming Song position pointer event was not handled correctly
     in MIDI clock slave mode, the sequencer was out of sync - this has
     been corrected in this version



MIDIboxSEQ V3.0
~~~~~~~~~~~~~~~

   o this version *REQUIRES* a PIC18F4620, it won't run on a PIC18F452 !

   o the step values of all 16 tracks are now stored in RAM, all 16
     tracks can now be edited in realtime (previously: only first 4 tracks)

   o a cache mechanism has been implemented which fetches the step
     values at the first time they are requested - this reduces the
     latency on pattern changes dramatically

   o there are 4 groups (organised in a "pattern"), and each pattern 
     contains 4 tracks. The track group which should be edited can
     be selected in the Pattern menu

   o the upper line in the edit view which previously only displayed
     the parameter type 16 times (e.g. "Note Note Note Note ...")
     now displays some useful informations - see also:
     http://www.ucapps.de/midibox_seq/cs3/main.gif

   o a double-click function has been added to the track buttons
     which switches the view between step 1-16 and 17-31

   o the pattern storage area has been completely restructured. 
     Each pattern now allocates 512 bytes. Some spare memory 
     cells have been reserved for future extensions

   o the CC assignments have been changed as well

   o the Trk record structure on RAM has been restructured as well.
     Constant and runtime variables are now separated, so that
     a patch can be fetched very fast (via Page Read) without
     touching the variables

   o the new arrays required a lot of changes in seq_core.inc, because
     the variable buffers need a new pointer (FSR2)

   o debugging... (but it's impressive how much still is working ;-)

   o overworked the mute screen - it now shows some nice horizontal
     meters to display the MIDI activity

   o overworked the pattern screen as well, it shows small
     vertical meters

   o overworked the track direction mode screen. It now allocated the
     whole 2x80 character range. The direction mode can be selected
     with the general purpose buttons 2-8 directly. GP button #1 is
     used to select the PxTy (Pattern X, Track Y) parameter, and
     button 9-16 are used (in a pair of 3/2/3) to select the 
     progression parameters "Steps Fwd", "Jump Back" and "Replay".
     The GP LEDs help to identify the selected parameter (more
     induitive handling)

   o implemented the new direction modes pendulum, random step and
     random dir+step. The last random function selects the step
     and direction in the following way:
        - we continue with a propability of 50%
        - we jump to a new step with a propability of 25%
        - we change the direction with a propability of 25%

   o implemented the progression parameters and had a very nice
     evening with experimental sequences :)
     Here are some examples:

     Steps Fwd: 4, Jump Back: 0, Replay: x4: each beat (4 steps)
     will be played 4 times before the sequencer continues with
     the next beat

     Steps Fwd: 3, Jump Back: 2, Replay: x1 results into following
     sequence: 1-2-3 2-3-4 3-4-5 4-5-6 ...

     Steps Fwd: 4, Jump Back: 2, Replay: x2 results into following
     sequence: 1-2-3-4 1-2-3-4 3-4-5-6 3-4-5-6 5-6-7-8 5-6-7-8 ...

     
   o F4 can be used to select the track group (G1->G2->G3->G4->G1) now

   o overworked the Track Mode menu page - better for selecting the
     mode live. Hold and Track Restart now selectable separately

   o had a lot of fun with the progression parameters again 
     (tried arpeggiator mode with multi arp events + different
     Fwd/JumpBack/Repeat values - it rocks! :)

   o started with overworking the "event modes". Instead of selecting
     a single MIDI event and assigning the event values to the layers
     (which was not easy to use), now 9 different preconfigured
     "event modes" with static layer assignments and additional
     constant values are available. E.g., it is now possible to play
     3 notes from a single track with static velocity and length.
     Or (a mode which I really like) 1 Note and 2 CCs

  o implemented priority handling for MIDI events played from a 
    track: CCs will be sent before Notes

  o change the handling of the 16 "general purpose" encoders within
    menu pages: they are now used to set the cursor, and to modify
    the value above the encoder
    Encoder is used for layer editing only in Edit page anymore

  o implemented "auto fast" feature (idea from Matteo):
    FAST mode will be automatically activated when a layer is assigned
    to velocity or CC value, it will be automatically deactivated,
    when a layer is assigned to any other MIDI event value
    This happens when a new layer is selected. Once you are within
    the layer, the FAST mode can be toggled with the FAST button 
    again (e.g. for finetuning a CC value)

  o new useful track selection possibility: press and hold the mute 
    button, the mute screen will show the tracks (and those nice
    MIDI activity meters :) - the GP LEDs will display the selected
    track so long the mute button is held, and with the GP buttons
    you can change the track selection - this is a fast & exact
    possibility for switching between tracks
    So long the mute button is still held, you can select other
    tracks as well - even if they are not in the same group.
    Pressing the button of an already selected track will turn
    of the selection (for the case that you pushed the wrong
    button by fault).
    Once the mute button is depressed, GP LEDs display the muted tracks,
    and the GP buttons allow to mute/demute tracks


 
  o overworked the Transpose menu page - now the transponation of
    octaves and semitones can be selected directly with the GP buttons

  o overworked the Clock Divider menu page

  o overworked the BPM menu: Master/Slave mode can now be toggled
    independent from the BPM value.
    A global internal/external clock divider is also available, they
    can be set to 1/2/4/8
    The internal clock divider can be used to quickly select "half
    speed", "quarter speed" or "eigth speed" during the sequencer
    is running (nice live effect), the external divider is required to
    align the clock rate of the clock output pin with your sequencer gear

  -> recorded demo song http://www.youtube.com/watch?v=jrU9fv8bxGs

  o implemented multiple MIDI Out port handling: tracks can now send
    over different MIDI Out ports: 
      - Def. (MIOS Default Port - either Internal or IIC0..IIC3
        like selected in the ID header)
      - Int. (Internal MIDI Out)
      - IIC0..IIC3 (MBHP_IIC_MIDI modules)
      - Loop (Loopbacked to sequencer MIDI engine - for arpeggiator/transpose)
      - AOUT (CV output)
    The port has to be specified in the MIDI Event menu page

  o overworked "length" menu
    It now also contains a menu item for chaining tracks.
    It's possible to chain track 1 with 2 (1->2), track 3 with 4
    (3->4) and 4 tracks together (1->2->3->4)

  o implemented track chaining. It works in all direction modes,
    but progression parameters cannot be handled correctly.
    So: don't use chainged tracks with "Steps Fwd", "Jump Back"
    or "Repeat", it behaves randomly!

  o added "length quick selection" buttons to the track length 
    menu page: 2/4/6/8/12/16/24/32

  o improved pattern menu: patterns can now also be selected with
    the GP encoders

  o overworked save/restore functions

  o overworked formatting routine: due to the new pattern size
    (0x200), a 32k BankStick can only hold 64 patches
    Later, I will add an option for 64k BankSticks to hold 128
    patches again
    And a possibility to select the BankStick will be implemented
    as well, so that up to 7*128 patterns are accessible (1 BankStick
    dedicated for songs)

    By default, pattern will be formated:
      - A1-B8 for MIDI channel 1-4, most steps muted, only first track plays
        a note on each bar
      - C1-D8 for MIDI channel 5-8 (all steps muted)
      - E1-F8 for MIDI channel 9-12 (all steps muted)
      - G1-H8 for MIDI channel 13-16 (all steps muted)

    These channel assignments can be changed whenever you want, it's
    just the default setup for a freshly formatted bankstick
  
  o overworked save menu

  o increased step resultion from 16th notes to 64th notes

  o overworked divider menu again: divider value 1-64 now, added
    quick selection options for typical step resolutions:
    1/4  3/4  1/8 3/32 1/16 3/64 1/32 1/64 

  o overworked song menu, much more ergonomic use now!!!
    -> recorded demo song http://www.youtube.com/watch?v=gyffClGnFN4

  o overworked SysEx menu, it's now possible to send the RAM patterns
    of group G1..G4 to a specified target and device ID
    This opens the possibility to send a pattern to another MIDIbox SEQ
    without using a PC

  o changed SysEx dump structure, it's documented in mbseqv3_sysex_implementation.txt

  o overworked morph menu: target pattern selectable for all 4 pattern
    groups, CC and Channel of Morph Controller can now be configured
    And there is a nice large horizontal bar at the left screen which
    visualizes the morph value :)

  o "smooth" morphin working again. "threshold" morphing has been
    removed, since the usage with the new layer concept would be
    too complicated
  
  o implemented the new "trigger assignments" menu - there are three
    trigger layers A/B/C, and they can be assigned to the functions
    gate/skip/accent/glide/roll/random gate/random value

  o implemented the trigger functions:
    - gate: enables/disables step (formerly known as "mute")
    - skip: skips a step, sequencer immediately continues with next step
    - accent: forces velocity to 127
    - glide: forces length to 31, so that the note overlaps with the next note
    - roll: forces length to 2x12
    - random gate: step will be triggered with a propability of 50%
    - random value: not implemented yet (waiting for overworked humanize function)

  o the trigger layer is now incremented with the F3 button

  o found nice possibility: assign "Roll" and "Random Gate" to the same layer -
    rolls will be triggered randomly at predefined steps! :-)

  o overworked Edit screen again - now we can see a lot of details at
    the upper line, e.g. detailed velocity value and length (in
    percentage!), and the status of all triggers. This allows really
    exact editing

  o the Select button got a new purpose in the edit screen - it now
    increments the "current step" number (allows to view the exact
    values of a step and to change them with the datawheel)

  o implemented track loop feature (located in length menu): it's
    now possible to loop a track from a step != 1 - the track will
    start from step 1, and once the last step is reached, it jumps
    back to the step defined by the loop point.
    Example for Loop Point at 17: 1->2->...->31->32->17->18->19->...

  o the track shift function now rotates the steps from
    the loop point to last step; this change was required to ensure 
    that no unconfigured steps are shifted into the range which are not
    played anyhow. The loop point is considered as edit feature (you
    can rotate a certain range, e.g. only step 9..12)

  o overworked the MIDI configuration menu - it's now possible to
    select the sequencer input channel, and the metronome channel +
    measure/beat note
    In addition, I've prepared the possibility to split the keyboard
    into two zones, so that the base note of the transposer and 
    the keys of the arpeggiator can be controlled separately

  o implemented the keyboard split function for transposer/arpeggiator
    note stacks now 2*8 keys instead of 4 (we still have enough RAM! :)

  o prepared second chord mode (concepts discussed in MIDIbox forum)

  o added force-to-scale option to Track Mode menu. It can be selected
    individually for each track, the scale (1-32) can be selected
    globally for all tracks from this menu.

  o overworked the Groove menu - especially the humanizer can be
    configured much easier now! :)

  o shuffle is now scaled correctly depending on the clock divider
    setting (this was not working correctly in MBSEQ V2)

  o it's now possible to select multiple tracks at once, even if they
    are not in the same track group. For this, press and hold the
    mute button. Press the first GP button to select one track and
    to clear all other selections.
    So long the mute button is still held, you can select other
    tracks as well - even if they are not in the same group.
    Pressing the button of an already selected track will turn
    of the selection (for the case that you pushed the wrong
    button by fault).

    Parameter changes will affect all selected tracks. This means
    for example, that you can easily change the track mode, groove,
    dividers, even mutes and note values... just everything at the
    same time. Solo and manual trigger works on all selected tracks as well.

  o chord mode 2 implemented (additional informations to be added here)

  o recorded demo song http://www.youtube.com/watch?v=bgjET6dNA14

  o chords are now displayed with their long name (8 characters) in 
    the upper right corner of the edit screen

  o usage optimisation: if edit button pressed
       - always select track 1 if no track is selected in current group
       - always display step 1-16 view
       - always switch to layer A
       - always switch to trigger layer A

   o implemented live record function: step is saved during sequencer is
     playing, length is measured and should be played back correctly
     Currently monophonic recording only (will be improved in future)
     Step recording function temporary not available (the record menu
     has to be overworked)
     The recorded steps will be automatically quantised depending on
     the step resolution - which means: by default to 16th, but up to 64th
     (makes only sense with 4 chained 32step tracks)

   o implemented groove styles: it's now possible to select up to
     15 different templates (only 5 styles exist yet in seq_groove.inc, 
     more can be added easily (tablebased).
     A groove controls:
       o the delay of each step (static or variable)
       o it can scale or set the note length by +/-80% / constant 20..100%, 2x12, 3x6, 4x3
       o it can scale the note velocity / CC value by +/-80%

   o partial copy/save function is working again

   o implemented track initialisation function which fetches preset
     settings depending on the selected track event mode.
     This function can be executed within the EVENT menu, press button 15 or 16
     It's especially useful when the event mode has been changed, and
     the track still contains some "unadequate" data from the previous
     mode setup

   o overworked LED matrix, implemented button matrix

     There are several configurations possible, here the tested ones:

     a) historic 4x16 LED matrix which replaces the 1x16 GP LED row
        Required settings in main.asm (or alternatively setup_*.asm) - search for the values and change the numbers:
#define DEFAULT_SRM_ENABLED     1	  ; enable the LED matrix
#define DEFAULT_SRM_DOUT_L1	3	  ; DOUT register of the left side (8 LEDs)
#define DEFAULT_SRM_DOUT_R1	4	  ; DOUT register of the right side (8 LEDs)
#define DEFAULT_SRM_DOUT_CATHODES1      5 ; DOUT register which controls the LED cathodes - 4 pins used
#define DEFAULT_SRM_DOUT_CATHODES1      6 ; can be optionally selected if LEDs with high power consumption are used
#define DEFAULT_SRM_DOUT_DUOCOLOUR	0 ; no DUO colour LEDs
#define DEFAULT_SRM_DOUT_L2	0	  ; only relevant for DUO colour LEDs
#define DEFAULT_SRM_DOUT_R2	0	  ; only relevant for DUO colour LEDs
#define DEFAULT_SRM_BUTTONS_ENABLED 0     ; no button matrix
#define DEFAULT_SRM_BUTTONS_NO_UI   0     ; only relevant for button matrix
#define DEFAULT_SRM_DIN_L	0         ; only relevant for button matrix
#define DEFAULT_SRM_DIN_R	0         ; only relevant for button matrix

        Note: compared to the old schematic, the cathodes are now mirrored!
              This means that you have to change the wiring on your existing hardware
              Upper Row:  DOUT pin D7
              second Row: DOUT pin D6
              third Row:  DOUT pin D5
              fourth Row: DOUT pin D4

     b) 16 "GP LEDs" + 4x16 separate LED matrix
        recommented solution, since this allows the firmware to display menu parameters separately below the LCDs
        Required settings in main.asm (or alternatively setup_*.asm) - search for the values and change the numbers:
#define DEFAULT_SRM_ENABLED     1	  ; enable the LED matrix
#define DEFAULT_SRM_DOUT_L1	6	  ; DOUT register of the left side (8 LEDs)
#define DEFAULT_SRM_DOUT_R1	9	  ; DOUT register of the right side (8 LEDs)
#define DEFAULT_SRM_DOUT_CATHODES1      5 ; DOUT register which controls the LED cathodes - 4 pins used
#define DEFAULT_SRM_DOUT_CATHODES1      6 ; can be optionally selected if LEDs with high power consumption are used
#define DEFAULT_SRM_DOUT_DUOCOLOUR	0 ; no DUO colour LEDs
#define DEFAULT_SRM_DOUT_L2	0	  ; only relevant for DUO colour LEDs
#define DEFAULT_SRM_DOUT_R2	0	  ; only relevant for DUO colour LEDs
#define DEFAULT_SRM_BUTTONS_ENABLED 0     ; no button matrix
#define DEFAULT_SRM_BUTTONS_NO_UI   0     ; only relevant for button matrix
#define DEFAULT_SRM_DIN_L	0         ; only relevant for button matrix
#define DEFAULT_SRM_DIN_R	0         ; only relevant for button matrix

     c) 16 "GP LEDs" + 4x16 separate DUO LED matrix
        recommented solution, since this allows the firmware to display menu parameters separately below the LCDs
        Required settings in main.asm (or alternatively setup_*.asm) - search for the values and change the numbers:
#define DEFAULT_SRM_ENABLED     1	  ; enable the LED matrix
#define DEFAULT_SRM_DOUT_L1	6	  ; DOUT register of the left side (8 LEDs)
#define DEFAULT_SRM_DOUT_R1	9	  ; DOUT register of the right side (8 LEDs)
#define DEFAULT_SRM_DOUT_CATHODES1      5 ; DOUT register which controls the LED cathodes - 4 pins used
#define DEFAULT_SRM_DOUT_CATHODES1      6 ; SHOULD be selected with DUO LEDs (high power consumption)
#define DEFAULT_SRM_DOUT_DUOCOLOUR	1 ; DUO colour LEDs
#define DEFAULT_SRM_DOUT_L2	7	  ; only relevant for DUO colour LEDs
#define DEFAULT_SRM_DOUT_R2	10	  ; only relevant for DUO colour LEDs
#define DEFAULT_SRM_BUTTONS_ENABLED 0     ; no button matrix
#define DEFAULT_SRM_BUTTONS_NO_UI   0     ; only relevant for button matrix
#define DEFAULT_SRM_DIN_L	0         ; only relevant for button matrix
#define DEFAULT_SRM_DIN_R	0         ; only relevant for button matrix

     d) 16 "GP LEDs" + 4x16 separate DUO LED matrix + 4x16 separate button matrix
        recommented solution, since this allows the firmware to display menu parameters separately below the LCDs
        The 4x16 additional buttons should only control the step gates (and other assigned triggers)
        Required settings in main.asm (or alternatively setup_*.asm) - search for the values and change the numbers:
#define DEFAULT_SRM_ENABLED     1	  ; enable the LED matrix
#define DEFAULT_SRM_DOUT_L1	6	  ; DOUT register of the left side (8 LEDs)
#define DEFAULT_SRM_DOUT_R1	9	  ; DOUT register of the right side (8 LEDs)
#define DEFAULT_SRM_DOUT_CATHODES1      5 ; DOUT register which controls the LED cathodes - 4 pins used
#define DEFAULT_SRM_DOUT_CATHODES1      6 ; SHOULD be selected with DUO LEDs (high power consumption)
#define DEFAULT_SRM_DOUT_DUOCOLOUR	1 ; DUO colour LEDs
#define DEFAULT_SRM_DOUT_L2	7	  ; only relevant for DUO colour LEDs
#define DEFAULT_SRM_DOUT_R2	10	  ; only relevant for DUO colour LEDs
#define DEFAULT_SRM_BUTTONS_ENABLED 1     ; using button matrix
#define DEFAULT_SRM_BUTTONS_NO_UI   1     ; only control gates (and other assigned triggers) with these buttons
#define DEFAULT_SRM_DIN_L	11        ; DIN register of the left side
#define DEFAULT_SRM_DIN_R	12        ; DIN register of the right side

   o implemented new record menu
     - record mode can be selected (Realtime/Step)
     - the recorded step can be selected (for step record mode)
     - AutoStart implemented (if realtime mode, and sequencer is
       stopped, start it automatically with first key)
     - prepared selection of layers which should be recorded


   o added support for multiple BankSticks
     32/64k devices have to be assigned in the setup file
     one BankStick is dedicated for Song Mode

   o added support for AOUT and AOUT_LC module

     Mapping: there is a dedicated AOUT Port which can be selected in
     the Event menu

     CC Events:
        Channel 1..8 (channel itself has no effect)
                CC Number #16: CV Ouput #1, Gate #1 always set
                CC Number #17: CV Ouput #2, Gate #2 always set
                CC Number #18: CV Ouput #3, Gate #3 always set
                CC Number #19: CV Ouput #4, Gate #4 always set
                CC Number #20: CV Ouput #5, Gate #5 always set
                CC Number #21: CV Ouput #6, Gate #6 always set
                CC Number #22: CV Ouput #7, Gate #7 always set
                CC Number #23: CV Ouput #8, Gate #8 always set
        Channel  9: CV Ouput #1, Gate #1 always set, CC Number ignored
        Channel 10: CV Ouput #2, Gate #2 always set, CC Number ignored
        Channel 11: CV Ouput #3, Gate #3 always set, CC Number ignored
        Channel 12: CV Ouput #4, Gate #4 always set, CC Number ignored
        Channel 13: CV Ouput #5, Gate #5 always set, CC Number ignored
        Channel 14: CV Ouput #6, Gate #6 always set, CC Number ignored
        Channel 15: CV Ouput #7, Gate #7 always set, CC Number ignored
        Channel 16: CV Ouput #8, Gate #8 always set, CC Number ignored

     Note Events:
        Channel  1: Note Value -> CV Out #1, Gate #1 triggered
        Channel  2: Note Value -> CV Out #2, Gate #2 triggered
        Channel  3: Note Value -> CV Out #3, Gate #3 triggered
        Channel  4: Note Value -> CV Out #4, Gate #4 triggered
        Channel  5: Note Value -> CV Out #5, Gate #5 triggered
        Channel  6: Note Value -> CV Out #6, Gate #6 triggered
        Channel  7: Note Value -> CV Out #7, Gate #7 triggered
        Channel  8: Note Value -> CV Out #8, Gate #8 triggered
        Channel  9: Note Value -> CV Out #1, Velocity -> CV Out #2, Gate #1 and #2 triggered
        Channel 10: Note Value -> CV Out #3, Velocity -> CV Out #4, Gate #3 and #4 triggered
        Channel 11: Note Value -> CV Out #5, Velocity -> CV Out #6, Gate #5 and #6 triggered
        Channel 12: Note Value -> CV Out #7, Velocity -> CV Out #8, Gate #7 and #8 triggered
        Channel 13: Velocity -> CV Out #1, Note Value -> CV Out #2, Gate #1 and #2 triggered
        Channel 14: Velocity -> CV Out #3, Note Value -> CV Out #4, Gate #3 and #4 triggered
        Channel 15: Velocity -> CV Out #5, Note Value -> CV Out #6, Gate #5 and #6 triggered

	Channel 16: DOUT drum gates/triggers (see below)

   o added an option which allows to use up to 48 DOUT pins (6 Shift
     Registers) as drum gates or triggers by sending events over AOUT channel #16

     The appr. shift registers have to be defined in the setup_*.asm file, e.g.:
#define DEFAULT_ENABLE_DOUT_GATE_09_16   5
#define DEFAULT_ENABLE_DOUT_GATE_17_24   6
#define DEFAULT_ENABLE_DOUT_GATE_25_31   7
#define DEFAULT_ENABLE_DOUT_GATE_32_39   8
#define DEFAULT_ENABLE_DOUT_GATE_40_47   9
#define DEFAULT_ENABLE_DOUT_GATE_48_55   10

     Drums are played with Note C-1, C#1, D-1, D#1, ...

     If following option is set to 1:
#define DEFAULT_DOUT_1MS_TRIGGER	1
     The DOUT pins will send short 1mS pulses - this is useful for analog drums
    
     Note that the pins on each DOUT shift register are mirrored:
     D7 is the first pin, D6 the second, D5 the third, etc...

     This means: with the assignment above, the outputs are assigned
     to following notes:
     C-1: 5th DOUT Shift Register, D7
     C#1: 5th DOUT Shift Register, D6
     D-1: 5th DOUT Shift Register, D5
     D#1: 5th DOUT Shift Register, D4
     E-1: 5th DOUT Shift Register, D3
     F-1: 5th DOUT Shift Register, D2
     F#1: 5th DOUT Shift Register, D1
     G-1: 5th DOUT Shift Register, D0
     G#1: 6th DOUT Shift Register, D7
     A-1: 6th DOUT Shift Register, D6
     ...

   o moved Metronome settings to a separate menu again (like it was in V2)
 
   o added simple MIDI router to the MIDI Configuration Menu which
     allows to forward incoming MIDI events to the Output Ports

     - Router Ports: IIC1, IIC2, IIC3, IIC4, AOUT and Int.
     - Source Channels: 1-16 and All
     - Destination Channels: 1-16 and All (1:1 forwarding)
     - optional MIDI Clock Filter (which also affects internally generated MIDI clock events)
       MIDI Clocks are forwarded from the IN port only in Slave Mode
       MIDI Clocks are forwarded from the internal BPM generator in Master Mode

   o the global BPM divider now also affects the sent MIDI clock (all
     the gear behind the sequencer will be clocked with slower rate)

   o there are now 4 additional buttons and LEDs for selecting the
     track group (G1=track 1-4, G2=track 5-8, G3=track 9-12, G4=track 13-16)
     and 3 additional buttons and LEDs for the trigger layers A, B, C
     The pin assignments are made in mios_tables.inc (or within the setup_*.asm file)

     PLEASE NOTE: these buttons/LEDs are optional and could be
     added for a more comfortable usage in case that somebody creates
     a new frontpanel. The same functions are also accessible in
     following ways for people who already built a MBSEQ (e.g. V2)

     - Selecting group: can by cycled with F4, track can be directly
     selected by holding Mute button and pressing the appr. GP button 1-16
     The selected group is visible in most menu pages

     - Selecting trigger layer: can be cycled with F3, the selected
       layer is only visible within the edit page

   o added optional LEDs for Play/Stop/Pause

   o implemented external control via NRPN - see mbseqv3_cc_implementation.txt

   o the internal Loopback port can now control CC parameters of
     the sequencer as well

   o a utility menu has been implemented which contains a lot of new
     useful functions - you can enter it by pressing the F1 button

     - Copy: copies the currently selected track into a buffer

     - Paste: copies the buffer content into the current track

     - Clear: clears the current track

     - Move: so long the appr. button of this function is pressed,
       the edit page will be displayed, and steps can be moved
       with the encoder below the step
       It should be self explaining once you try it out! :)

     - Scroll: scrolls all steps of the current track

     - Random: randomizes all steps of the current track

     - Undo: reverts the last operation

     - Save: quick access to the save menu (formerly F1 function)
     - Rec: quick access to the record menu (formerly F2 function)
     - Opt: quick access to the options menu
     - Mute: mutes all tracks and jumps to the Mute page
     - UnMute: un-mutes all tracks and jumps to the Mute page


   o there is now a marker in the edit page which points to the
     current step. It's useful for modifications with the datawheel,
     and for the step record function

   o the F2 button now switches between the Step 1-16/17-32 view
     This was previously only possible by doubleclicking a track button

   o improved Copy&Paste function - now you can copy a certain step
     range, and you can paste the range to a certain position.
     This allows to duplicate ranges within a track very quickly.
 
     - if you just press and release the copy/paste button, the function
       behaves like before: the whole range will be copied & pasted

     - if you press and hold the copy button, you can select the range
       which should be copied into the buffer with the GP encoders.

       The encoders left of or at the begin marker shift the begin position,
       the encoders right to the begin marker shift the end position.

       If you are unsure about the current position, just always use
       the leftmost encoder to move the begin marker, and the rightmost
       encoder to move the end marker

       Releasing the copy button copies the selected range into the
       buffer.

     - if you press and hold the paste button, you can select the
       target position with any GP encoder. Once you release the
       button, the buffer will be copied into the track.

   o there is now a SCROLL function which allows to scroll all steps
     of a track from the position of the encoder which is turned
     while the scroll button is pressed.

     This function makes the SHIFT menu obsolete, therefore it has
     been removed from the menu list. Now you see the Utility page
     at this position instead - this also means: when you press
     the MENU and SHIFT (GP#10) button, you will change to the
     Utility menu like if you would press the F1 button

   o there is now a RANDOM function which generates random track values
     The random intensity can be changed while the RANDOM button
     is held
     NOTE: activate the Force-to-Scale option in the Mode menu for 
     more harmonic results

   o there is now a UNDO function which reverts the change of the
     last Paste, Clear, MoveStep, Scroll and Random operation

   o the new copy/paste functionality makes the "Partial Save"
     function obsolete (the usage was too complicated anyhow),
     therefore it has been removed from the SAVE menu

   o the "All button function" now performs incremental changes
     on all steps instead of setting all steps to the same value.

     The old behaviour (setting all steps to same value) is
     still available - just press and hold the ALL button.

   o a mixer map has been implemented

     It can be accessed by pressing MENU+VIEW, or by going into the
     UTILITY menu and pressing the button below "Mix."

     NOTE: if you are planning a new frontpanel, the "View" label
     below GP button #1 could be renamed to "Mixer"

     There are 7 pages, which can be selected with the datawheel,
     or alternatively with the Rew/Fwd buttons when no song is playing:
     MIDI Port, MIDI Channel, Prog.Change, Volume, Panorama, CC1-2

     Values can be changed with the GP encoders

     The ALL and FAST button taking effect as well.
     The ALL button provides two functions:
        - when LED active, only values which are not enabled will be changed
        - when button pressed, all values will be changed to the same value

     They are sent directly over the selected MIDI port - all ports
     are selectable, even Loopback and AOUT!

     When the SELECT button is pressed, a utility page will be
     displayed which allows to 
       - change and load a mixer map (one of 127)
       - to Copy/Paste the map
       - to clear the map
       - to reload the map from BankStick
       - to save the map into BankStick
       - to dump the complete map via the MIDI/AOUT/Loopback ports
       - to change the assignments for CC1
       - to change the assignments for CC2

    Since the ports and channels are freely assignable and working
    totally independent from the running patterns, the mixer map 
    function behaves like a MIDI controller - you can define
    up to 127 maps which can be stored, restore, dumped and controlled
    in realtime!


   o Drum Mode is completely implemented now.
     It gets active with Event Mode 5 (Vel/Vel/Vel) or 8 (Vel/CC/CC)
     In Mode 5 three different drums can be played per track
     In Mode 9 one drum can be played + 2 CCs for sound modulation
     Notes are constant values and defined in the event menu as well.
     
     In Drum mode the trigger layers have a special behaviour: when 
     a trigger layer is not assigned to any function (especially not 
     to gate!), then the trigger button will modify the velocity instead.
     The GP LEDs will lit when velocity of a step is != 0
     
     Sounds complicated, but the result is just a TRx0x like handling!

     Proposal for a quick try: change to EVENT menu, select Mode 5
     (Vel/Vel/Vel), and press the button below "COPY PRESET"
     Now you can control three different drums with Note Layer A/B/C
     And you can control the gate with the non-assigned trigger layer A, 
     Accent with trigger layer B, Roll with trigger layer C

     Limitation: the trigger layers (excepting gates) are applied on
     all three notes - e.g., if accent is activated for a particular
     step, all three notes of this step will be accented.

     Another hint: save your favourite setups in special patterns
     (e.g. into a separate BankStick) to get a quick access to such
     personal presets.


   o in song menu page, there is now a better seperation between 
     "Phrase" and "Song" mode.

     It can be switched between these two different modes by pressing
     the SONG button multiple times. The SONG LED will flash when the
     sequencer is in Phrase mode.


     Definition of Phrase Mode: a song is used as "pattern set storage"
     You can define a set of 4 patterns (G1/G2/G3/G4) for each song position.
     You can link one or more mixer maps to a phrase.

     The sequencer changes to a new pattern set immediately, or
     synchronized to the beat (selectable in options menu), once a new
     phrase has been selected. This can be done with GP encoder #2 (Phrase A1, A2,
     A3, ..., A7, B1, B2, ...  ->  128 phrases).

     In addition, the phrase A1, B1, C1, ... P1 can be directly
     triggered with the GP buttons when the cursor flashes below the
     "Phrase" menu item (second item in the menu).
     Quick selection: press LAYER B button (see below)

     The usage of GP buttons is propably the most prefered, as it 
     allows you to quickly change between different pattern sets 
     while the sequencer is playing w/o temporary selecting other sets 
     which are between them with a rotary encoder.

     Phrases can also be combined with one or more mixer maps. In this case 
     the first step (A1, B1, C1, ...) has to be assigned to a Mixer Map
     Action (see below), whose content will be dumped out. The sequencer
     will go to the next song position, and check for a Mixer Map
     again. Once it has reached a position with a pattern set, it will
     change to the new set and give back control over pattern changes
     to the user.


     Definition of Song Mode: similar to Phrase mode, each song
     position holds a pattern set. In addition, following actions
     can be defined:
        o STOP: will stop the sequencer once this position is reached
        o PLAY (x 1): plays the pattern set for one measure and
          thereafter jumps to the next position
        o LOOP (-> x 2 .. x16): loops the position 2 .. 16 times
          and thereafter jumps to the next position
        o JUMP POSITION (-> A1 .. -> P8): will jump to the given position
        o JUMP SONG (-> S 1 .. -> S16): will jump to the given song
        o SELECT MIXER MAP (-> 1..128): selects a mixer map and dumps
          the content. Continues with the next song position


     Shortcut buttons: within the Song Menu Page, most menu items can
     be selected very quickly with the TRACK and LAYER buttons.
       o TRACK 1: sets cursor to G1 item - you can now change the pattern with 
         the GP buttons or with the datawheel
       o TRACK 2/3/4: like above, but for G2/G3/G4 item
       o LAYER A: sets the cursor to the Song item - you can now change
         the song with the GP buttons or with the datawheel
       o LAYER B: sets the cursor to the Phrase/Pos item
         GP buttons select 1 of 16 phrases/positions in steps of 8
         Datawheel selects 1 of 128 phrases/positions
       o LAYER C: only in Song Mode: selects the Action item

   o new option: when the sequencer is running in song mode, the edited song
     position can now automatically follow the song.
     This optional function, which might disturb an edit session, can be 
     enabled in the options menu (F1->Opt., within this menu, 
     press select button to reach the "FollowSong" option)

   o there is now a check during the initialisation for the PIC derivative.
     Execution from any other PIC than PIC18F4620 is gracefully prevented.
     You will see a message on screen, and a MIDI event "EE <devid[2:0]> <devid2[9:3]>
     is sent to notify about the wrong PIC

   o a new menu page is available which allows to mute the output ports
     separately (Def, Int, IIC0-3, AOUT, Loopback).
     It can be quickly accessed from the Utility page (F1->PMte)

   o OPT menu page overworked, so that the layout and usage matches
     with the other menus

   o the Global Scale can now be changed in the OPT menu
     Not only the number, but also the Scale Name will now be displayed!

   o A sustain function has been added. If enabled, all played notes
     of a track stay active until the next note is played.
     This option overrides the gate length!
     It is especially useful for long chords (e.g. strings) since it saves
     you from modifiying the gatelength for each step.
     It's also a nice effect during a tune is played!
     The sustain option is selectable within the Track Mode menu at the
     position which was formerly used by the Global Scale

   o A new event mode has been added: Note/CC/CC
     This one has been forgotten during the definition of the event
     mode. In order to get a consistent selection, the new mode has
     been added between Note/CC/Len and Vel/CC/CC

     This leads to a slight incompatibility of old patterns.
     If a track has used Vel/CC/CC, CC/CC/Len or CC/CC/CC before, 
     the event mode has to be incremented by 1 within the Event Mode menu!

   o there is now a BankStick format menu accessible from the main
     menu. It allows you to re-initialise a BankStick, and to check
     the selected Type/Size and availability (n/a print when BankStick
     not connected)
     There is no quick-access option for this menu, so that this menu
     isn't easily accessible during a live session. Just change to the
     main menu and search for "Format BankSt."

   o The Copy/Paste/Clr function now also works on the track configuration
     Just only the MIDI channel and Port will never be overwritten for 
     your own comfort!

   o Recording now works for all event modes, and especially for CCs




Whishlist for future features
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  o add possibility to remote-control (and send) CCs for mutes

  o add remote keys for Step Recording function: left/right/clear/repeat
    See also http://www.midibox.org/forum/index.php/topic,11938.msg97685.html#msg97685

  o add possibility to tap tempo with incoming MIDI note
    Free configuration page: maybe metronome?
    See also http://www.midibox.org/forum/index.php/topic,11938.msg97685.html#msg97685

  o new event mode: Note/Length/Probability
    Reference: http://www.midibox.org/forum/index.php/topic,11557.0.html

  o check for display artefacts in random page
    Reference: http://www.midibox.org/forum/index.php/topic,11695.0.html

  o selection pattern as proposed by ris8_allo_zen0
    Reference: http://www.midibox.org/forum/index.php/topic,10848.msg83704.html#msg83704

  o SysEx dumps for Songs/Mixer Maps

